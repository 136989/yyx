{"version":3,"sources":["modules/error.ts","interfaces.ts","utils.ts","modules/hero/data.ts","modules/hero/index.ts","modules/hero/sorters.ts","modules/equip/sorters.ts","modules/equip/data.ts","modules/equip/attr.ts","modules/equip/score.ts","modules/snapshot/selectors.ts","modules/equip/index.ts","modules/account/constants.ts","modules/account/service.ts","modules/account/reducer.ts","modules/snapshot/constants.ts","modules/snapshot/reducer.ts","store/index.ts","modules/http.ts","modules/cbg/index.ts","modules/snapshot/service.ts","modules/account/actions.ts","modules/snapshot/actions.ts","components/Snapshot/OpenCbgUrl.tsx","modules/server/data.ts","components/Common/Star.tsx","components/Account/AccountSelector.tsx","modules/account/selectors.ts","components/Snapshot/SnapshotSelectScreen.tsx","components/Snapshot/SnapshotInfo.tsx","components/Overview/OverviewPage.tsx","modules/account/hooks.ts","components/Common/SubNav.tsx","components/Hero/HeroIcon.tsx","constants.ts","components/Hero/HeroGrid.tsx","components/Common/Rarity.tsx","components/Common/Rating.tsx","components/Equip/EquipIcon.tsx","components/Equip/EquipDetail.tsx","components/Equip/EquipItem.tsx","components/Equip/EquipSet.tsx","components/Equip/Equips.tsx","components/Hero/HeroDetail.tsx","components/Hero/HeroDetailOverlay.tsx","hooks/debounce.ts","components/Hero/HeroList.tsx","modules/shard/index.ts","components/Hero/Shard/ShardPage.tsx","modules/skill/data.ts","components/Hero/Skill/SkillPage.tsx","modules/story/data.ts","modules/story/index.ts","components/Hero/Story/StoryPage.tsx","components/Hero/HeroPage.tsx","components/Equip/EquipGrid.tsx","components/Equip/EquipTypeSelector.tsx","components/Equip/EquipPosition.tsx","modules/equip/export.ts","modules/equip/ocr2.ts","components/Equip/EquipList.tsx","components/Equip/EquipSetAttrs.tsx","components/Equip/EquipPage.tsx","components/Equip/EquipPresets.tsx","modules/realm_card/data.ts","modules/realm_card/index.ts","components/RealmCard/RealmCardPage.tsx","components/Update/UpdateInfo.tsx","components/About/About.tsx","components/Main/Main.tsx","components/App.tsx","serviceWorker.ts","index.tsx","assets/logo.svg"],"names":["ActionType","initialState","currentError","Ratings","HeroRarity","HeroEquipAttrType","ErrorActions","error","type","SetError","payload","AttrValueType","combineSorters","_len","arguments","length","sorters","Array","_key","a","b","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","r","sorter","value","err","return","combineFilters","_len2","filters","_key2","v","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","filter","sortDesc","formatAttrValue","Float","toFixed","Percentage","concat","Math","round","DATE_FORMAT","formatTimestamp","moment","Date","setTime","local","format","getTimestampFromObjectId","id","parseInt","substring","formatDate","date","parseDate","str","locale","toDate","computeOnce","f","DATA","require","mapAttrRating","list","attack","max_hp","defense","speed","crit_rate","ALL_HERO_DATA","map","i","name","attr_rating","unawake","awake","rarity","skills","awake_skill","DataMap","reduce","m","set","Map","RarityRank","SP","SSR","SR","R","N","reverse","getHeroData","heroId","get","defaultSorter","star","level","hero_id","listOptions","HeroActions","opts","SetListOptions","materialRarityFilter","hero","includes","selectAll","state","snapshot","current","data","heroes","timestamp_from_id","selectMapById","createSelector","selectAllSorted","slice","sort","selectMapByHeroId","push","FORCE_FOLD_HERO_IDS","selectAllFolded","skipped","groups","lock","nick_name","group","item","find","gi","folded","values","vi","selectListOptions","createTermFilter","term","trim","heroIds","selectList","sorted","apply","Object","toConsumableArray","fold","HeroSelectors","selectCount","l","quality","suit_id","ALL_SUIT_DATA","getEquipSuiteData","AttrNames","_AttrNames","defineProperty","Hp","Defense","Attack","HpRate","DefenseRate","AttackRate","Speed","CritRate","CritPower","EffectHitRate","EffectResistRate","PercentageAttrs","HeroEquipPosAttrBaseTypes","formatEquipAttrValue","plus","formatEquipAttr","getEquipAttrName","getEquipRandomAttrValue","equip","random_attr_map","random_attrs","attr","round2","AttrValueRounders","SCORE_DATA","match","attrs","_ref3","_ref2","slicedToArray","reqType","reqValue","getEquipScoreData","score","SnapshotSelectors","EquipActions","EquipLevelFilter","EquipEquippedFilter","selectEquippedByMap","equippedByMap","h","equips","selectPresets","hero_equip_presets","selectIncludedInPresetsMap","presets","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","p","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","items","equippedBy","inPresets","hero_equips","suit_data","equipped_by","included_in_presets","selectMaps","idMap","qualityMap","levelMap","suitMap","posMap","baseAttrMap","selector","key","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","e","pos","base_attr","suit","selectDisplay","types","positions","stars","baseAttrs","Any","Zero","equipped","Equipped","trashed","garbage","scores","scoreData","creationTimeFrom","t","getTime","creationTimeTo","EquipSelectors","selectPresetItems","maps","objectSpread","suitCount","attrMap","suits","clear","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","single_attrs","c","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","entries","suitId","count","effect","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","console","warn","computeEquipSetInfo","ACTION_ACCOUNT_SET_LOADING","ACTION_ACCOUNT_SET_ERROR","ACTION_ACCOUNT_SET_ACCOUNTS","ACTION_ACCOUNT_SELECT","ACTION_ACCOUNT_SET_ACTIVE_STATES","ACTION_ACCOUNT_DELETE_ID","AccountService","getAccountPath","server_id","player_id","order_sn","loading","accounts","activeStates","currentNotFound","ACTION_SNAPSHOT_SET_CURRENT","currentNotSelected","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","YyxStore","createStore","combineReducers","action","account","states","path","applyMiddleware","thunk","HttpClient","axios","create","interceptors","response","use","res","message","Error","status","extractError","dispatch","Promise","reject","pullCbg","url","put","then","SnapshotService","select","_select","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","abrupt","post","stop","_x","this","loadActive","_callee6","_context6","loadId","_ref4","_callee2","_ref5","_ref6","_context2","all","sent","batch","t0","_x2","AccountActions","load","_ref","loadAndSelectId","_ref7","_callee3","_context3","_x3","close","_ref8","_callee4","_context4","t1","t2","t3","t4","_x4","remove","_ref9","_callee5","_context5","delete","_x5","SnapshotActions","import","file","reset","SnapshopPreview","react_default","createElement","card","className","Classes","HEADING","listing_info","player_name","server_name","TEXT_MUTED","player_level","style","color","Colors","RED1","sign","parseFloat","replace","formatCurrency","price","OpenCbgUrl","props","open","onClose","useDispatch","_React$useState","React","useState","_React$useState2","setUrl","_React$useState3","_React$useState4","setSnapshot","_React$useState5","_React$useState6","setLoading","_React$useState7","_React$useState8","setError","onPull","_snapshot","onOpen","Fragment","DIALOG_BODY","callout","title","intent","classNames","TEXT_SMALL","textArea","FILL","growVertically","large","Intent","PRIMARY","placeholder","onChange","target","disabled","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","spinner","size","buttons","onClick","preview","OpenCbgUrl_SnapshopPreview","dialog","isOpen","StarType","AccountSelector","withRouter","history","_useState","_useState2","deleting","setDeleting","colSpan","serverName","icon","utc","formatUtcDate","latest_snapshot_date","busy","stopPropagation","alert_alert","cancelButtonText","confirmButtonText","DANGER","onCancel","onConfirm","AccountSelectors","s","SnapshotSelectScreen","loadingAccounts","useSelector","loadAccountsError","_useState3","_useState4","_useState5","_useState6","openCbg","setOpenCbg","useEffect","marginTop","src","logo","version","fileInput","text","onInputChange","files","catch","minimal","AccountSelector_AccountSelector","OpenCbgUrl_OpenCbgUrl","SnapshotInfo","connect","notSelected","stateProps","dispatchProps","ownProps","render","info","_info$data","player","currency","cbg_url","href","timestamp","coin","jade","action_point","auto_point","honor","medal","contrib","totem_pass","s_jade","skin_token","realm_raid_pass","useAccountPath","handleLinkClick","route","to","preventDefault","SubNav","accountPath","location","pathname","menu","links","link","menuItem","active","label","renderStar","Elements","_Elements","Orange","Purple","Blue","orangeElems","purpleElems","blueElems","ii","Grey","Stars","getStarType","HeroIcon","toLowerCase","childHeros","onClickHero","Star_Stars","HeroDataIcon","HeroGrid","idx","HeroIcon_HeroIcon","ClassNames","_ClassNames","Rarity","Rating","rating","EquipIcon","EquipIcon_EquipTypeIcon","EquipTypeIcon","_ref$size","width","height","EquipDetail","_formatEquipAttr","_formatEquipAttr2","baseAttrName","baseAttrValue","EquipIcon_EquipIcon","_formatEquipAttr3","_formatEquipAttr4","_formatEquipAttr5","_formatEquipAttr6","EquipItem","popover","content","EquipDetail_EquipDetail","popoverClassName","POPOVER_CONTENT_SIZING","portalClassName","onClickEquip","EquipSet","setItems","fill","EquipItem_EquipItem","Equips","ids","HeroDetail","ratings","Rarity_Rarity","flex","renderIconName","Rating_Rating","base","crit_power","effect_hit_rate","effect_resist_rate","renderAttrs","EquipSet_EquipSet","HeroDetailOverlay","contentEl","useRef","overlay","backdropClassName","classList","add","ref","HeroDetail_HeroDetail","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","RaritySelect","Select","ofType","RarityOptions","getRarityElem","option","renderRarityOption","params","handleClick","modifiers","StarSelect","StarOptions","renderStarOption","HeroList","mapById","activeHero","setActiveHero","setFold","setRarity","_useState7","_useState8","setStar","_useState9","_useState10","setTerm","debouncedTerm","HeroDetailOverlay_HeroDetailOverlay","inputGroup","leftIcon","filterable","itemRenderer","onItemSelect","controls","checked","HeroGrid_HeroGrid","log","hero_book_shards","hero_data","getRarityRank","ShardSelectors","selectSorted","shards","books","ShardPage","justifyContent","book_max_shards","getSkillMaxLevelMap","SKILL_LEVEL_DATA","getDataList","SkillMaxLevelMap","all_skills","skill_max_levels","SkillPage","heroesMap","HeroIcon_HeroDataIcon","numbers","skill","max","formatUpgrade","getStoryTaskMap","tasks","StorySelectors","selectProgressMap","story_tasks","progress","max_value","TaskMap","formatProgress","SubPages","component","progressMap","useMemo","taskStatus","cond_var","max_v","taskTotal","taskDone","vTotal","vDone","_progressMap$get","_progressMap$get2","EquipGrid","EquipTypeDialog","selected","setIdSelected","tag","attr2","getEquipSuitAttrName","onOk","EmptyList","EquipTypeMultiSelector","dialogOpen","setDialogOpen","dialogSelected","setDialogSelected","setSelected","EquipTypeSelector_EquipTypeDialog","multiple","idSelected","Labels","EquipPosition","position","labelElement","exportJson","filename","AttrNameMap","SuitMap","String","equipsToOcr2","御魂ID","御魂等级","御魂星级","御魂类型","位置","_i","_arr","keys","forEach","k","renderBaseAttrs","alignText","from","Set","getBaseAttrList","buttonGroup","DefaultListOptions","Max","exportOcr2Json","snapshotInfo","EquipList","options","_setOptions","debouncedOptions","exporting","setExporting","exported","setExported","setOptions","divider","EquipTypeSelector_EquipTypeMultiSelector","nodes","_loop","EquipPosition_EquipPosition","renderPositions","_loop2","renderStars","NotEquipped","dateInput","showActionsBar","timePrecision","EquipGrid_EquipGrid","AttrTable","EquipSetAttrs","suites","setSuites","termDebounced","setList","filteredList","some","every","EquipSetAttrs_EquipSetAttrs","RealmCardNames","realm_cards","itemId","item_id","selectGroupMapByName","cards","entry","RealmCardSelectors","selectGroups","RealmCardPage","columns","rows","g","os","family","Markdown","MyTargets","R_FILENAME","ReleaseInfo","release","tag_name","source","body","assets","browser_download_url","asset","parts","_parts","product","myTarget","productName","getAssetElement","R_VERSION","UpdateInfo","latest","setLatest","race","ver1","ver2","isLargerVersion","pkg","draft","prerelease","defaultIsOpen","UpdateInfo_ReleaseInfo","About","routes","renderLabel","show","_","SubNav_SubNav","page","react_router","exact","Main","dispach","notFound","exportUrl","ts","floor","encodeURIComponent","react_router_dom","navbar","navbarGroup","align","Alignment","LEFT","navbarDivider","rpath","startsWith","RIGHT","UpdateInfo_UpdateInfo","About_About_About","YyxMain","Number","Main_Main_Main","CbgMain","App","Boolean","hostname","container","document","getElementById","ReactDOM","es","store","src_components_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.dbc8283f.chunk.js","sourcesContent":["import { IAction } from \"../store\";\r\n\r\nexport interface IState {\r\n  currentError: Error | null;\r\n}\r\n\r\nconst initialState: IState = {\r\n  currentError: null\r\n};\r\n\r\nexport enum ActionType {\r\n  SetError = \"ERROR_SET_ERROR\"\r\n}\r\n\r\nexport function reducer(state = initialState, action: IAction<ActionType>) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ActionType.SetError:\r\n      return {\r\n        ...state,\r\n        currentError: payload\r\n      };\r\n  }\r\n  return state;\r\n}\r\n\r\nexport const ErrorActions = {\r\n  setError(error: Error) {\r\n    return {\r\n      type: ActionType.SetError,\r\n      payload: error\r\n    };\r\n  },\r\n  clearError() {\r\n    return {\r\n      type: ActionType.SetError,\r\n      payload: null\r\n    };\r\n  }\r\n};\r\n","import { number } from \"prop-types\";\r\nimport { NonIdealState } from \"@blueprintjs/core\";\r\n\r\nexport interface IPlayer {\r\n  id: number;\r\n  server_id: number;\r\n  name: string;\r\n  level: string;\r\n}\r\n\r\nexport interface IPlayerCurrency {\r\n  coin: number;\r\n  jade: number;\r\n  action_point: number;\r\n  auto_point: number;\r\n  honor: number;\r\n  medal: number;\r\n  contrib: number;\r\n  totem_pass: number;\r\n  s_jade: number;\r\n  skin_token: number;\r\n  realm_raid_pass: number;\r\n}\r\n\r\nexport interface IHero {\r\n  id: string;\r\n  hero_id: number;\r\n  equips: string[];\r\n  level: number;\r\n  awake: number;\r\n  star: number;\r\n  exp: number;\r\n  exp_rate: number;\r\n  nick_name: string;\r\n  born: number;\r\n  lock: boolean;\r\n  rarity: HeroRarity;\r\n  skills: HeroSkill[];\r\n  attrs: IHeroAttrs;\r\n  data?: IHeroData;\r\n  timestamp_from_id?: number;\r\n}\r\n\r\nexport interface IHeroAttrs {\r\n  max_hp: IHeroAttr;\r\n  speed: IHeroAttr;\r\n  crit_power: IHeroAttr;\r\n  crit_rate: IHeroAttr;\r\n  defense: IHeroAttr;\r\n  attack: IHeroAttr;\r\n  effect_hit_rate: number;\r\n  effect_resist_rate: number;\r\n}\r\n\r\nexport interface IHeroAttr {\r\n  base: number;\r\n  add_value: number;\r\n  add_rate: number;\r\n  value: number;\r\n}\r\n\r\nexport interface IHeroData {\r\n  id: number;\r\n  name: string;\r\n  attr_rating: {\r\n    unawake: IHeroAttrRating;\r\n    awake: IHeroAttrRating;\r\n  };\r\n  rarity: HeroRarity;\r\n  skills: number[];\r\n  awake_skill: number | null;\r\n  awake_base_attrs: { [level: string]: IHeroAttrs };\r\n}\r\n\r\nexport enum Ratings {\r\n  SS = \"ss\",\r\n  S = \"s\",\r\n  A = \"a\",\r\n  B = \"b\",\r\n  C = \"c\",\r\n  D = \"d\"\r\n}\r\n\r\nexport interface IHeroAttrRating {\r\n  attack: Ratings;\r\n  max_hp: Ratings;\r\n  defense: Ratings;\r\n  speed: Ratings;\r\n  crit_rate: Ratings;\r\n}\r\n\r\nexport enum HeroRarity {\r\n  N = \"N\",\r\n  R = \"R\",\r\n  SR = \"SR\",\r\n  SSR = \"SSR\",\r\n  SP = \"SP\"\r\n}\r\n\r\nexport interface HeroSkill {\r\n  id: number;\r\n  level: number;\r\n}\r\n\r\nexport interface IHeroEquip {\r\n  id: string;\r\n  suit_id: number;\r\n  quality: number;\r\n  pos: number;\r\n  equip_id: number;\r\n  level: number;\r\n  born: number;\r\n  lock: boolean;\r\n  garbage: boolean;\r\n  // deprecated: 0.9.0\r\n  // attrs: IHeroEquipAttr[];\r\n  base_attr: IHeroEquipAttr;\r\n  random_attrs: IHeroEquipAttr[];\r\n  random_attr_rates: IHeroEquipAttr[];\r\n  single_attrs: IHeroEquipAttr[];\r\n  suit_data?: IHeroEquipSuitData;\r\n  equipped_by?: IHero;\r\n  included_in_presets?: IHeroEquipPreset[];\r\n  timestamp_from_id?: number;\r\n  random_attr_map?: Map<HeroEquipAttrType, number>;\r\n}\r\n\r\nexport interface IHeroEquipSuitData {\r\n  id: number;\r\n  name: string;\r\n  attr: [\r\n    IHeroEquipSuiteAttr[],\r\n    IHeroEquipSuiteAttr[],\r\n    IHeroEquipSuiteAttr[],\r\n    IHeroEquipSuiteAttr[]\r\n  ];\r\n  effect: [string[], string[], string[], string[]];\r\n}\r\n\r\nexport interface IHeroEquipSuiteAttr {\r\n  type: HeroEquipAttrType;\r\n  value: number;\r\n}\r\n\r\nexport interface IHeroEquipAttr {\r\n  type: HeroEquipAttrType;\r\n  value: number;\r\n}\r\n\r\nexport enum HeroEquipAttrType {\r\n  Hp = \"Hp\",\r\n  Defense = \"Defense\",\r\n  Attack = \"Attack\",\r\n  HpRate = \"HpRate\",\r\n  DefenseRate = \"DefenseRate\",\r\n  AttackRate = \"AttackRate\",\r\n  Speed = \"Speed\",\r\n  CritRate = \"CritRate\",\r\n  CritPower = \"CritPower\",\r\n  EffectHitRate = \"EffectHitRate\",\r\n  EffectResistRate = \"EffectResistRate\"\r\n}\r\n\r\nexport interface IHeroEquipPreset {\r\n  name: string;\r\n  items: string[];\r\n}\r\n\r\nexport interface IHeroBookShard {\r\n  hero_id: number;\r\n  shards: number;\r\n  books: number;\r\n  book_max_shards: number;\r\n  hero_data?: IHeroData;\r\n}\r\n\r\nexport interface IRealmCard {\r\n  id: string;\r\n  item_id: number;\r\n  total_time: number;\r\n  attrs: {\r\n    exp: number;\r\n    bonus: number;\r\n  };\r\n  data?: IRealmCardData;\r\n}\r\n\r\nexport interface IRealmCardData {\r\n  id: number;\r\n  name: string;\r\n  star: number;\r\n}\r\n\r\nexport interface IStoryTask {\r\n  id: number;\r\n  progress: { value: number; max_value: number };\r\n}\r\n\r\nexport interface IHeroStoryTaskData {\r\n  hero_id: number;\r\n  tasks: IStoryTaskData[];\r\n}\r\n\r\nexport interface IStoryTaskData {\r\n  id: number;\r\n  achieve_type: number;\r\n  cond_var: number;\r\n  content: string;\r\n}\r\n\r\nexport interface ISnapshot {\r\n  version: string;\r\n  timestamp: string;\r\n  data: {\r\n    player: IPlayer;\r\n    currency: IPlayerCurrency;\r\n    heroes: IHero[];\r\n    hero_equips: IHeroEquip[];\r\n    hero_equip_presets: IHeroEquipPreset[];\r\n    hero_book_shards: IHeroBookShard[];\r\n    realm_cards: IRealmCard[];\r\n    story_tasks: IStoryTask[];\r\n  };\r\n  cbg_url: string | null;\r\n}\r\n\r\nexport interface ICbgSnapshot {\r\n  listing_info: {\r\n    server_name: string;\r\n    player_name: string;\r\n    player_level: number;\r\n    price: string;\r\n    create_time: string;\r\n  };\r\n  snapshot: ISnapshot;\r\n}\r\n","import moment from \"moment\";\r\n\r\nexport type Sorter<T> = (a: T, b: T) => number;\r\nexport type Filter<T> = (v: T) => boolean;\r\n\r\nexport function combineSorters<T>(...sorters: Array<Sorter<T>>): Sorter<T> {\r\n  return (a, b) => {\r\n    for (let sorter of sorters) {\r\n      const r = sorter(a, b);\r\n      if (r !== 0) {\r\n        return r;\r\n      }\r\n    }\r\n    return 0;\r\n  };\r\n}\r\n\r\nexport function combineFilters<T>(...filters: Array<Filter<T>>): Filter<T> {\r\n  return v => {\r\n    for (let filter of filters) {\r\n      const r = filter(v);\r\n      if (!r) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n}\r\n\r\nexport function sortDesc<T>(sorter: Sorter<T>): Sorter<T> {\r\n  return (a, b) => -sorter(a, b);\r\n}\r\n\r\nexport enum AttrValueType {\r\n  Float,\r\n  Percentage\r\n}\r\n\r\nexport function formatAttrValue(\r\n  v: number,\r\n  type: AttrValueType = AttrValueType.Float\r\n): string {\r\n  switch (type) {\r\n    case AttrValueType.Float:\r\n      return v.toFixed(2);\r\n    case AttrValueType.Percentage:\r\n      return `${(Math.round(v * 10000) / 100).toFixed(2)}%`;\r\n  }\r\n}\r\n\r\nconst DATE_FORMAT = \"YYYY-MM-DD HH:mm\";\r\n\r\nexport function formatTimestamp(v?: number) {\r\n  if (!v) return \"很久以前\";\r\n  return moment(new Date().setTime(v * 1000))\r\n    .local()\r\n    .format(DATE_FORMAT);\r\n}\r\n\r\nexport function getTimestampFromObjectId(id: string) {\r\n  return parseInt(id.substring(0, 8), 16);\r\n}\r\n\r\nexport function formatDate(date: string | Date, format = DATE_FORMAT) {\r\n  return moment(date)\r\n    .local()\r\n    .format(format);\r\n}\r\n\r\nexport function formatUtcDate(date: string, format = DATE_FORMAT) {\r\n  return moment\r\n    .utc(date)\r\n    .local()\r\n    .format(format);\r\n}\r\n\r\nexport function parseDate(str: string, locale?: string) {\r\n  return moment(str, DATE_FORMAT).toDate();\r\n}\r\n\r\nexport function computeOnce<T>(f: () => T): () => T {\r\n  let value: T | null = null;\r\n  return () => {\r\n    if (!value) {\r\n      value = f();\r\n    }\r\n    return value;\r\n  };\r\n}\r\n\r\nexport function formatCurrency(v: number | string, sign = \"¥\") {\r\n  if (typeof v === \"string\") {\r\n    v = parseFloat(v);\r\n  }\r\n  return sign + v.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, `$&,`);\r\n}\r\n","import { IHeroAttrRating, IHeroData, HeroRarity } from \"../../interfaces\";\r\n\r\nexport const DATA = require(\"./HERO_DATA.json\");\r\n\r\nconst mapAttrRating = (list: string[]) => {\r\n  return {\r\n    attack: list[0],\r\n    max_hp: list[1],\r\n    defense: list[2],\r\n    speed: list[3],\r\n    crit_rate: list[4]\r\n  } as IHeroAttrRating;\r\n};\r\n\r\nexport const ALL_HERO_DATA: IHeroData[] = DATA.map((i: any) => {\r\n  return {\r\n    id: i.id,\r\n    name: i.name,\r\n    attr_rating: {\r\n      unawake: mapAttrRating(i.attr_rating[0]),\r\n      awake: mapAttrRating(i.attr_rating[1])\r\n    },\r\n    rarity: i.rarity,\r\n    skills: i.skills,\r\n    awake_skill: i.awake_skill\r\n  };\r\n});\r\n\r\nconst DataMap: Map<number, IHeroData> = ALL_HERO_DATA.reduce(\r\n  (m: Map<number, IHeroData>, i: any) => {\r\n    m.set(i.id, i);\r\n    return m;\r\n  },\r\n  new Map()\r\n);\r\n\r\nexport const RarityRank = [\r\n  HeroRarity.SP,\r\n  HeroRarity.SSR,\r\n  HeroRarity.SR,\r\n  HeroRarity.R,\r\n  HeroRarity.N\r\n]\r\n  .reverse()\r\n  .reduce(\r\n    (m, r, i) => {\r\n      m[r] = i;\r\n      return m;\r\n    },\r\n    {} as { [key in HeroRarity]: number }\r\n  );\r\n\r\nexport const getHeroData = (heroId: number) => DataMap.get(heroId);\r\n","import { IAction, IDispatch, IYyxState } from \"../../store\";\r\nimport { IHero, HeroRarity, IHeroData } from \"../../interfaces\";\r\nimport { createSelector } from \"reselect\";\r\nimport { defaultSorter } from \"./sorters\";\r\nimport { getHeroData, DATA, RarityRank } from \"./data\";\r\nimport { Sorter, combineFilters, getTimestampFromObjectId } from \"../../utils\";\r\n\r\nexport type HeroFilter = (item: IHeroFilterable) => boolean;\r\n\r\nexport interface IHeroFilterable {\r\n  rarity: HeroRarity;\r\n  star: number;\r\n  nick_name?: string;\r\n  hero_id: number;\r\n}\r\n\r\nexport interface IHeroSortable {\r\n  level: number;\r\n  star: number;\r\n  rarity: HeroRarity;\r\n  born: number;\r\n}\r\n\r\nexport interface IHeroListOptions {\r\n  fold: boolean;\r\n  rarity: RarityOption;\r\n  star: number;\r\n  term: string;\r\n}\r\n\r\nexport interface IState {\r\n  listOptions: IHeroListOptions | null;\r\n}\r\n\r\nconst initialState: IState = {\r\n  listOptions: null\r\n};\r\n\r\nexport type RarityOption = \"*\" | HeroRarity | \"M\";\r\n\r\nexport enum ActionType {\r\n  SetListOptions = \"Hero.SetListOptions\"\r\n}\r\n\r\nexport const HeroActions = {\r\n  setListOptions(opts: IHeroListOptions) {\r\n    return {\r\n      type: ActionType.SetListOptions,\r\n      payload: opts\r\n    };\r\n  }\r\n};\r\n\r\nconst materialRarityFilter = (hero: { hero_id: number }) =>\r\n  [410, 411, 412, 413].includes(hero.hero_id);\r\n\r\nexport function reducer(state = initialState, action: IAction<ActionType>) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ActionType.SetListOptions: {\r\n      return {\r\n        ...state,\r\n        listOptions: payload\r\n      };\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nconst selectAll = (state: IYyxState) =>\r\n  state.snapshot.current &&\r\n  state.snapshot.current.data.heroes.map(hero => {\r\n    hero.data = getHeroData(hero.hero_id);\r\n    hero.timestamp_from_id = getTimestampFromObjectId(hero.id);\r\n    return hero;\r\n  });\r\n\r\nconst selectMapById = createSelector(\r\n  selectAll,\r\n  heroes => {\r\n    if (!heroes) {\r\n      return null;\r\n    }\r\n    const groups = heroes.reduce((m, i) => {\r\n      m.set(i.id, i);\r\n      return m;\r\n    }, new Map<string, IHero>());\r\n    return groups;\r\n  }\r\n);\r\n\r\nconst selectAllSorted = createSelector(\r\n  selectAll,\r\n  heroes => {\r\n    if (!heroes) {\r\n      return null;\r\n    }\r\n    return heroes.slice().sort(defaultSorter);\r\n  }\r\n);\r\n\r\nconst selectMapByHeroId = createSelector(\r\n  selectAllSorted,\r\n  heroes => {\r\n    if (!heroes) {\r\n      return null;\r\n    }\r\n    const groups = heroes.reduce((m, i) => {\r\n      let list = m.get(i.hero_id);\r\n      if (!list) {\r\n        list = [];\r\n        m.set(i.hero_id, list);\r\n      }\r\n      list.push(i);\r\n      return m;\r\n    }, new Map<number, IHero[]>());\r\n    return groups;\r\n  }\r\n);\r\n\r\nexport interface IHeroFolded {\r\n  hero_id: number;\r\n  level: number;\r\n  awake: number;\r\n  star: number;\r\n  rarity: HeroRarity;\r\n  heroes: IHero[];\r\n  data: IHeroData;\r\n}\r\n\r\nconst FORCE_FOLD_HERO_IDS = [\r\n  205, // 座敷童子\r\n  232, // 铁鼠\r\n  237 // 山兔\r\n];\r\n\r\nconst selectAllFolded = createSelector(\r\n  selectAllSorted,\r\n  heroes => {\r\n    if (!heroes) {\r\n      return null;\r\n    }\r\n\r\n    const skipped: IHero[] = [];\r\n\r\n    let groups = heroes.reduce((m, i) => {\r\n      if (\r\n        !FORCE_FOLD_HERO_IDS.includes(i.hero_id) &&\r\n        (i.awake ||\r\n          RarityRank[i.rarity] > RarityRank[HeroRarity.SR] ||\r\n          i.lock ||\r\n          i.nick_name)\r\n      ) {\r\n        skipped.push(i);\r\n        return m;\r\n      }\r\n\r\n      let group = m.get(i.hero_id);\r\n      if (!group) {\r\n        group = [];\r\n        m.set(i.hero_id, group);\r\n      }\r\n      const item = group.find(\r\n        gi => gi.level === i.level && gi.awake === i.awake && gi.star === i.star\r\n      );\r\n      if (item) {\r\n        item.heroes.push(i);\r\n      } else {\r\n        group.push({\r\n          hero_id: i.hero_id,\r\n          level: i.level,\r\n          awake: i.awake,\r\n          star: i.star,\r\n          rarity: i.rarity,\r\n          heroes: [i],\r\n          data: i.data\r\n        } as IHeroFolded);\r\n      }\r\n      return m;\r\n    }, new Map<number, IHeroFolded[]>());\r\n    const folded = [];\r\n    for (let v of groups.values()) {\r\n      for (let vi of v) {\r\n        if (vi.heroes.length === 1) {\r\n          skipped.push(vi.heroes[0]);\r\n        } else {\r\n          folded.push(vi);\r\n        }\r\n      }\r\n    }\r\n    return [...skipped, ...folded];\r\n  }\r\n);\r\n\r\nconst selectState = (state: IYyxState) => state.hero;\r\nconst selectListOptions = createSelector(\r\n  selectState,\r\n  state => state.listOptions\r\n);\r\n\r\nconst createTermFilter = (term: string) => {\r\n  const v = term.trim();\r\n  const heroIds = DATA.filter((i: IHeroData) => i.name.includes(v)).map(\r\n    (i: IHeroData) => i.id\r\n  );\r\n  return (i: IHeroFilterable) => {\r\n    return (\r\n      heroIds.includes(i.hero_id) ||\r\n      (i.nick_name ? i.nick_name.includes(v) : false)\r\n    );\r\n  };\r\n};\r\n\r\nconst createStarFilter = (v: number) => {\r\n  return (i: IHeroFilterable) => {\r\n    return i.star === v;\r\n  };\r\n};\r\n\r\nconst createRarityFilter = (r: RarityOption) => {\r\n  if (r === \"M\") {\r\n    return materialRarityFilter;\r\n  }\r\n  return (i: IHeroFilterable) => {\r\n    return i.rarity === r;\r\n  };\r\n};\r\n\r\nconst selectList = createSelector(\r\n  selectAllSorted,\r\n  selectAllFolded,\r\n  selectListOptions,\r\n  (sorted, folded, opts) => {\r\n    if (!opts) {\r\n      return null;\r\n    }\r\n\r\n    const filters = [\r\n      opts.term && createTermFilter(opts.term),\r\n      opts.rarity === \"*\" ? null : createRarityFilter(opts.rarity),\r\n      opts.star && createStarFilter(opts.star)\r\n    ].filter(v => !!v) as HeroFilter[];\r\n    const filter = filters.length && combineFilters(...filters);\r\n    if (opts.fold) {\r\n      if (!folded) {\r\n        return null;\r\n      }\r\n      return filter ? folded.filter(filter) : folded;\r\n    } else {\r\n      if (!sorted) {\r\n        return null;\r\n      }\r\n      return filter ? sorted.filter(filter) : sorted;\r\n    }\r\n  }\r\n);\r\n\r\nconst selectCount = createSelector(\r\n  selectList,\r\n  list => {\r\n    if (!list) {\r\n      return 0;\r\n    }\r\n    return list\r\n      .map(i => {\r\n        if (\"heroes\" in i) {\r\n          return i.heroes.length;\r\n        } else {\r\n          return 1;\r\n        }\r\n      })\r\n      .reduce((l, r) => l + r, 0);\r\n  }\r\n);\r\n\r\nexport const HeroSelectors = {\r\n  selectAll,\r\n  selectAllSorted,\r\n  selectAllFolded,\r\n  selectMapById,\r\n  selectMapByHeroId,\r\n  selectListOptions,\r\n  selectList,\r\n  selectCount\r\n};\r\n","import { IHero, HeroRarity } from \"../../interfaces\";\r\nimport { combineSorters, sortDesc } from \"../../utils\";\r\nimport { RarityRank } from \"./data\";\r\n\r\nexport const sortByRarity = (a: IHero, b: IHero) =>\r\n  RarityRank[b.rarity] - RarityRank[a.rarity];\r\nexport const sortByHeroId = (a: IHero, b: IHero) => a.hero_id - b.hero_id;\r\nexport const sortByLevel = (a: IHero, b: IHero) => a.level - b.level;\r\nexport const sortByStar = (a: IHero, b: IHero) => a.star - b.star;\r\nexport const sortByAwake = (a: IHero, b: IHero) => a.awake - b.awake;\r\nexport const defaultSorter = combineSorters(\r\n  sortDesc(sortByStar),\r\n  sortByRarity,\r\n  sortDesc(sortByAwake),\r\n  sortDesc(sortByLevel),\r\n  sortDesc(sortByHeroId)\r\n);\r\n","import { combineSorters, sortDesc } from \"../../utils\";\r\nimport { IHeroEquip } from \"../../interfaces\";\r\n\r\nexport const sortByQuality = (a: IHeroEquip, b: IHeroEquip) =>\r\n  a.quality - b.quality;\r\nexport const sortByLevel = (a: IHeroEquip, b: IHeroEquip) => a.level - b.level;\r\nexport const sortBySuit = (a: IHeroEquip, b: IHeroEquip) =>\r\n  a.suit_id - b.suit_id;\r\n\r\nexport const defaultSorter = combineSorters(\r\n  sortDesc(sortByQuality),\r\n  sortDesc(sortByLevel),\r\n  sortBySuit\r\n);\r\n","import { IHeroEquipSuitData } from \"../../interfaces\";\r\n\r\nconst DATA = require(\"./EQUIP_SUIT_DATA.json\");\r\n\r\nexport const ALL_SUIT_DATA: IHeroEquipSuitData[] = DATA;\r\n\r\nconst DataMap: Map<number, IHeroEquipSuitData> = ALL_SUIT_DATA.reduce(\r\n  (m: Map<number, IHeroEquipSuitData>, i: any) => {\r\n    m.set(i.id, i);\r\n    return m;\r\n  },\r\n  new Map()\r\n);\r\n\r\nexport const getEquipSuiteData = (id: number) => DataMap.get(id);\r\n","import {\r\n  HeroEquipAttrType,\r\n  IHeroEquipSuitData,\r\n  IHeroEquip\r\n} from \"../../interfaces\";\r\nimport { formatAttrValue, AttrValueType } from \"../../utils\";\r\n\r\nconst AttrNames = {\r\n  [HeroEquipAttrType.Hp]: \"生命\",\r\n  [HeroEquipAttrType.Defense]: \"防御\",\r\n  [HeroEquipAttrType.Attack]: \"攻击\",\r\n  [HeroEquipAttrType.HpRate]: \"生命加成\",\r\n  [HeroEquipAttrType.DefenseRate]: \"防御加成\",\r\n  [HeroEquipAttrType.AttackRate]: \"攻击加成\",\r\n  [HeroEquipAttrType.Speed]: \"速度\",\r\n  [HeroEquipAttrType.CritRate]: \"暴击\",\r\n  [HeroEquipAttrType.CritPower]: \"暴击伤害\",\r\n  [HeroEquipAttrType.EffectHitRate]: \"效果命中\",\r\n  [HeroEquipAttrType.EffectResistRate]: \"效果抵抗\"\r\n};\r\n\r\nconst PercentageAttrs = [\r\n  HeroEquipAttrType.HpRate,\r\n  HeroEquipAttrType.DefenseRate,\r\n  HeroEquipAttrType.AttackRate,\r\n  HeroEquipAttrType.CritRate,\r\n  HeroEquipAttrType.CritPower,\r\n  HeroEquipAttrType.EffectHitRate,\r\n  HeroEquipAttrType.EffectResistRate\r\n];\r\n\r\nexport const HeroEquipPosAttrBaseTypes = new Map<number, HeroEquipAttrType[]>([\r\n  [1, [HeroEquipAttrType.Attack]],\r\n  [\r\n    2,\r\n    [\r\n      HeroEquipAttrType.AttackRate,\r\n      HeroEquipAttrType.DefenseRate,\r\n      HeroEquipAttrType.HpRate,\r\n      HeroEquipAttrType.Speed\r\n    ]\r\n  ],\r\n  [3, [HeroEquipAttrType.Defense]],\r\n  [\r\n    4,\r\n    [\r\n      HeroEquipAttrType.AttackRate,\r\n      HeroEquipAttrType.DefenseRate,\r\n      HeroEquipAttrType.HpRate,\r\n      HeroEquipAttrType.EffectHitRate,\r\n      HeroEquipAttrType.EffectResistRate\r\n    ]\r\n  ],\r\n  [5, [HeroEquipAttrType.Hp]],\r\n  [\r\n    6,\r\n    [\r\n      HeroEquipAttrType.AttackRate,\r\n      HeroEquipAttrType.DefenseRate,\r\n      HeroEquipAttrType.HpRate,\r\n      HeroEquipAttrType.CritRate,\r\n      HeroEquipAttrType.CritPower\r\n    ]\r\n  ]\r\n]);\r\n\r\nexport const formatEquipAttrValue = (\r\n  type: HeroEquipAttrType,\r\n  value: number,\r\n  plus?: boolean\r\n) => {\r\n  return (\r\n    (plus && value ? \"+\" : \"\") +\r\n    formatAttrValue(\r\n      value,\r\n      PercentageAttrs.includes(type)\r\n        ? AttrValueType.Percentage\r\n        : AttrValueType.Float\r\n    )\r\n  );\r\n};\r\n\r\nexport const formatEquipAttr = (type: HeroEquipAttrType, value: number) => {\r\n  return [\r\n    AttrNames[type],\r\n    formatAttrValue(\r\n      value,\r\n      PercentageAttrs.includes(type)\r\n        ? AttrValueType.Percentage\r\n        : AttrValueType.Float\r\n    )\r\n  ];\r\n};\r\n\r\nexport const getEquipAttrName = (type: HeroEquipAttrType) => AttrNames[type];\r\n\r\nexport const getEquipSuitAttrName = (suit: IHeroEquipSuitData) => {\r\n  const attr2 = suit.attr[1].length && suit.attr[1][0];\r\n  return attr2 ? getEquipAttrName(attr2.type) : \"单件属性\";\r\n};\r\n\r\nexport const getEquipRandomAttrValue = (\r\n  equip: IHeroEquip,\r\n  type: HeroEquipAttrType\r\n) => {\r\n  if (!equip.random_attr_map) {\r\n    equip.random_attr_map = new Map(equip.random_attrs.map(attr => [\r\n      attr.type,\r\n      attr.value\r\n    ]) as [HeroEquipAttrType, number][]);\r\n  }\r\n  return equip.random_attr_map.get(type) || null;\r\n};\r\n","import { HeroEquipAttrType, IHeroEquip } from \"../../interfaces\";\r\nimport { getEquipRandomAttrValue } from \"./attr\";\r\n\r\n// http://nga.178.com/read.php?tid=15853326\r\n\r\nexport interface IScoreData {\r\n  score: number;\r\n  attrs: [HeroEquipAttrType, number][];\r\n}\r\n\r\nconst round0 = (v: number) => Math.round(v);\r\nconst round2 = (v: number) => Math.round(v * 100) / 100;\r\n\r\nconst AttrValueRounders: Map<\r\n  HeroEquipAttrType,\r\n  (v: number) => number\r\n> = new Map([\r\n  [HeroEquipAttrType.Speed, round0],\r\n  [HeroEquipAttrType.AttackRate, round2],\r\n  [HeroEquipAttrType.CritRate, round2],\r\n  [HeroEquipAttrType.CritPower, round2],\r\n  [HeroEquipAttrType.EffectHitRate, round2],\r\n  [HeroEquipAttrType.EffectResistRate, round2]\r\n]);\r\n\r\nconst SCORE_DATA: IScoreData[] = [];\r\n\r\nconst match = (equip: IHeroEquip, data: IScoreData) => {\r\n  if (equip.random_attrs.length < data.attrs.length) {\r\n    return false;\r\n  }\r\n\r\n  for (let [reqType, reqValue] of data.attrs) {\r\n    const round = AttrValueRounders.get(reqType);\r\n    let value = getEquipRandomAttrValue(equip, reqType);\r\n    if (!value) {\r\n      return false;\r\n    }\r\n    if (round) {\r\n      value = round(value);\r\n    }\r\n    if (value < reqValue) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n/*\r\n为了给大家更直观理解3分、5分御魂的概念，做了一些举例，其中(1~3)代表着后续说的是3个御魂，为了简便起见，合并成一行展示，御魂之间用分号“；”隔开了。。(7)、(8)这些就是指的单个御魂：\r\n*/\r\n\r\n/*\r\n3分御魂：\r\n*/\r\n\r\n// (1~3)速度+8；暴击+8；攻击加成+8\r\n\r\nSCORE_DATA.push({\r\n  score: 3,\r\n  attrs: [[HeroEquipAttrType.Speed, 8]]\r\n});\r\n\r\nSCORE_DATA.push({\r\n  score: 3,\r\n  attrs: [[HeroEquipAttrType.CritRate, 0.08]]\r\n});\r\n\r\nSCORE_DATA.push({\r\n  score: 3,\r\n  attrs: [[HeroEquipAttrType.AttackRate, 0.08]]\r\n});\r\n\r\n// (4~6)暴击伤害+11；效果命中+11；效果抵抗+11\r\n\r\nSCORE_DATA.push({\r\n  score: 3,\r\n  attrs: [[HeroEquipAttrType.CritPower, 0.11]]\r\n});\r\n\r\nSCORE_DATA.push({\r\n  score: 3,\r\n  attrs: [[HeroEquipAttrType.EffectHitRate, 0.11]]\r\n});\r\n\r\nSCORE_DATA.push({\r\n  score: 3,\r\n  attrs: [[HeroEquipAttrType.EffectResistRate, 0.11]]\r\n});\r\n\r\n// (7)速度+3 & 暴击+3 & 暴击伤害+4\r\n\r\nSCORE_DATA.push({\r\n  score: 3,\r\n  attrs: [\r\n    [HeroEquipAttrType.Speed, 3],\r\n    [HeroEquipAttrType.CritRate, 0.03],\r\n    [HeroEquipAttrType.CritPower, 0.04]\r\n  ]\r\n});\r\n\r\n// (8)速度+3 & 暴击+6\r\n\r\nSCORE_DATA.push({\r\n  score: 3,\r\n  attrs: [[HeroEquipAttrType.Speed, 3], [HeroEquipAttrType.CritRate, 0.06]]\r\n});\r\n\r\n/*\r\n4分御魂\r\n*/\r\n\r\n// (1~3)速度+11；暴击+11；攻击加成+11；\r\nSCORE_DATA.push({\r\n  score: 4,\r\n  attrs: [[HeroEquipAttrType.Speed, 11]]\r\n});\r\n\r\nSCORE_DATA.push({\r\n  score: 4,\r\n  attrs: [[HeroEquipAttrType.CritRate, 0.11]]\r\n});\r\n\r\nSCORE_DATA.push({\r\n  score: 4,\r\n  attrs: [[HeroEquipAttrType.AttackRate, 0.11]]\r\n});\r\n\r\n// (4~6)暴击伤害+14；效果命中+14；效果抵抗+14；\r\nSCORE_DATA.push({\r\n  score: 4,\r\n  attrs: [[HeroEquipAttrType.CritPower, 0.14]]\r\n});\r\n\r\nSCORE_DATA.push({\r\n  score: 4,\r\n  attrs: [[HeroEquipAttrType.EffectHitRate, 0.14]]\r\n});\r\n\r\nSCORE_DATA.push({\r\n  score: 4,\r\n  attrs: [[HeroEquipAttrType.EffectResistRate, 0.14]]\r\n});\r\n\r\n// (7)速度+3 & 暴击+3 & 暴击伤害+7\r\nSCORE_DATA.push({\r\n  score: 4,\r\n  attrs: [\r\n    [HeroEquipAttrType.Speed, 3],\r\n    [HeroEquipAttrType.CritRate, 0.03],\r\n    [HeroEquipAttrType.CritPower, 0.07]\r\n  ]\r\n});\r\n\r\n// (8)攻击加成+3 & 速度+3 & 暴击伤害+7\r\nSCORE_DATA.push({\r\n  score: 4,\r\n  attrs: [\r\n    [HeroEquipAttrType.AttackRate, 0.03],\r\n    [HeroEquipAttrType.Speed, 3],\r\n    [HeroEquipAttrType.CritPower, 0.07]\r\n  ]\r\n});\r\n\r\n/*\r\n5分御魂：\r\n*/\r\n\r\n// (1~3)速度+13；暴击+13；攻击加成+13； (相信对于绝大多数人而言，这样的御魂已经算是“好御魂”了)\r\nSCORE_DATA.push({\r\n  score: 5,\r\n  attrs: [[HeroEquipAttrType.Speed, 13]]\r\n});\r\n\r\nSCORE_DATA.push({\r\n  score: 5,\r\n  attrs: [[HeroEquipAttrType.CritRate, 0.13]]\r\n});\r\n\r\nSCORE_DATA.push({\r\n  score: 5,\r\n  attrs: [[HeroEquipAttrType.AttackRate, 0.13]]\r\n});\r\n\r\n// (4~6)暴击伤害+18；效果命中+18；效果抵抗+18；\r\n\r\nSCORE_DATA.push({\r\n  score: 5,\r\n  attrs: [[HeroEquipAttrType.CritPower, 0.18]]\r\n});\r\n\r\nSCORE_DATA.push({\r\n  score: 5,\r\n  attrs: [[HeroEquipAttrType.EffectHitRate, 0.18]]\r\n});\r\n\r\nSCORE_DATA.push({\r\n  score: 5,\r\n  attrs: [[HeroEquipAttrType.EffectResistRate, 0.18]]\r\n});\r\n\r\n// (7)速度+8 & 效果命中+4 & 效果抵抗+4\r\n\r\nSCORE_DATA.push({\r\n  score: 5,\r\n  attrs: [\r\n    [HeroEquipAttrType.Speed, 8],\r\n    [HeroEquipAttrType.EffectHitRate, 0.04],\r\n    [HeroEquipAttrType.EffectResistRate, 0.04]\r\n  ]\r\n});\r\n\r\n// (8)速度+3 & 效果命中+7 & 效果抵抗+7 (这个御魂，可能在人心目中就是“平平无奇”)\r\n\r\nSCORE_DATA.push({\r\n  score: 5,\r\n  attrs: [\r\n    [HeroEquipAttrType.Speed, 3],\r\n    [HeroEquipAttrType.EffectHitRate, 0.07],\r\n    [HeroEquipAttrType.EffectResistRate, 0.07]\r\n  ]\r\n});\r\n\r\n/*\r\n6分御魂\r\n*/\r\n\r\n// (1~3)速度+16；暴击+16；攻击加成+16 (准“极品”御魂，速度类顶级御魂)\r\n\r\nSCORE_DATA.push({\r\n  score: 6,\r\n  attrs: [[HeroEquipAttrType.Speed, 16]]\r\n});\r\n\r\nSCORE_DATA.push({\r\n  score: 6,\r\n  attrs: [[HeroEquipAttrType.CritRate, 0.16]]\r\n});\r\n\r\nSCORE_DATA.push({\r\n  score: 6,\r\n  attrs: [[HeroEquipAttrType.AttackRate, 0.16]]\r\n});\r\n\r\n// (4~6)暴击伤害+22；效果命中+22；效果抵抗+22\r\nSCORE_DATA.push({\r\n  score: 6,\r\n  attrs: [[HeroEquipAttrType.CritPower, 0.22]]\r\n});\r\n\r\nSCORE_DATA.push({\r\n  score: 6,\r\n  attrs: [[HeroEquipAttrType.EffectHitRate, 0.22]]\r\n});\r\n\r\nSCORE_DATA.push({\r\n  score: 6,\r\n  attrs: [[HeroEquipAttrType.EffectResistRate, 0.22]]\r\n});\r\n\r\n// (7)速度+8 & 效果命中+7 & 效果抵抗4\r\nSCORE_DATA.push({\r\n  score: 6,\r\n  attrs: [\r\n    [HeroEquipAttrType.Speed, 8],\r\n    [HeroEquipAttrType.EffectHitRate, 0.07],\r\n    [HeroEquipAttrType.EffectResistRate, 0.04]\r\n  ]\r\n});\r\n\r\n// (8)速度+3 & 效果命中+7 & 效果抵抗+11\r\n\r\nSCORE_DATA.push({\r\n  score: 6,\r\n  attrs: [\r\n    [HeroEquipAttrType.Speed, 3],\r\n    [HeroEquipAttrType.EffectHitRate, 0.07],\r\n    [HeroEquipAttrType.EffectResistRate, 0.11]\r\n  ]\r\n});\r\n\r\n/*\r\n7分御魂\r\n*/\r\n\r\n// (1)速度+16 & 暴击+3\r\n\r\nSCORE_DATA.push({\r\n  score: 7,\r\n  attrs: [[HeroEquipAttrType.Speed, 16], [HeroEquipAttrType.CritRate, 0.03]]\r\n});\r\n\r\n// (2)速度+3 & 效果命中+22 (纯命中类顶级御魂)\r\n\r\nSCORE_DATA.push({\r\n  score: 7,\r\n  attrs: [[HeroEquipAttrType.Speed, 3], [HeroEquipAttrType.EffectHitRate, 0.22]]\r\n});\r\n\r\n// (3)速度+3 & 攻击加成+11 & 暴击+5\r\n\r\nSCORE_DATA.push({\r\n  score: 7,\r\n  attrs: [\r\n    [HeroEquipAttrType.Speed, 3],\r\n    [HeroEquipAttrType.AttackRate, 0.11],\r\n    [HeroEquipAttrType.CritRate, 0.05]\r\n  ]\r\n});\r\n\r\n// (4)速度+3 & 效果命中+11 & 效果抵抗+11\r\n\r\nSCORE_DATA.push({\r\n  score: 7,\r\n  attrs: [\r\n    [HeroEquipAttrType.Speed, 3],\r\n    [HeroEquipAttrType.EffectHitRate, 0.11],\r\n    [HeroEquipAttrType.EffectResistRate, 0.11]\r\n  ]\r\n});\r\n\r\n/*\r\n8分御魂\r\n*/\r\n\r\n// (1)速度+16 & 暴击+3 & 攻击加成+3\r\n\r\nSCORE_DATA.push({\r\n  score: 8,\r\n  attrs: [\r\n    [HeroEquipAttrType.Speed, 16],\r\n    [HeroEquipAttrType.CritRate, 0.03],\r\n    [HeroEquipAttrType.AttackRate, 0.03]\r\n  ]\r\n});\r\n\r\n// (2)速度+8 & 效果命中+7 & 效果抵抗+11 (双堆类顶级御魂1)\r\n\r\nSCORE_DATA.push({\r\n  score: 8,\r\n  attrs: [\r\n    [HeroEquipAttrType.Speed, 8],\r\n    [HeroEquipAttrType.EffectHitRate, 0.07],\r\n    [HeroEquipAttrType.EffectResistRate, 0.11]\r\n  ]\r\n});\r\n\r\n// (3)速度+3 & 效果命中+11 & 效果抵抗+14 (双堆类顶级御魂2)\r\n\r\nSCORE_DATA.push({\r\n  score: 8,\r\n  attrs: [\r\n    [HeroEquipAttrType.Speed, 3],\r\n    [HeroEquipAttrType.EffectHitRate, 0.11],\r\n    [HeroEquipAttrType.EffectResistRate, 0.14]\r\n  ]\r\n});\r\n\r\n// (4)速度+3 & 暴击+11 & 暴击伤害+11\r\n\r\nSCORE_DATA.push({\r\n  score: 8,\r\n  attrs: [\r\n    [HeroEquipAttrType.Speed, 3],\r\n    [HeroEquipAttrType.CritRate, 0.11],\r\n    [HeroEquipAttrType.CritPower, 0.11]\r\n  ]\r\n});\r\n\r\n/*\r\n9分御魂\r\n\r\n(3)速度+8 & 暴击+3 & 攻击加成+8 & 暴击伤害+11 (输出类满分御魂)\r\n*/\r\n\r\nSCORE_DATA.push({\r\n  score: 9,\r\n  attrs: [\r\n    [HeroEquipAttrType.Speed, 3],\r\n    [HeroEquipAttrType.CritRate, 0.16],\r\n    [HeroEquipAttrType.AttackRate, 0.03],\r\n    [HeroEquipAttrType.CritPower, 0.04]\r\n  ]\r\n});\r\n\r\n// (2)速度+3 & 暴击+11 & 攻击加成+3 & 暴击伤害+11(输出类顶级御魂2)\r\n\r\nSCORE_DATA.push({\r\n  score: 9,\r\n  attrs: [\r\n    [HeroEquipAttrType.Speed, 3],\r\n    [HeroEquipAttrType.CritRate, 0.11],\r\n    [HeroEquipAttrType.AttackRate, 0.03],\r\n    [HeroEquipAttrType.CritPower, 0.11]\r\n  ]\r\n});\r\n\r\n// (2)速度+3 & 暴击+8 & 攻击加成+3 & 暴击伤害+14(输出类顶级御魂3)\r\n\r\nSCORE_DATA.push({\r\n  score: 9,\r\n  attrs: [\r\n    [HeroEquipAttrType.Speed, 3],\r\n    [HeroEquipAttrType.CritRate, 0.08],\r\n    [HeroEquipAttrType.AttackRate, 0.03],\r\n    [HeroEquipAttrType.CritPower, 0.14]\r\n  ]\r\n});\r\n\r\n// (1)速度+3 & 暴击+16 & 攻击加成+3 & 暴击伤害+4 (输出类顶级御魂1)\r\n\r\nSCORE_DATA.push({\r\n  score: 9,\r\n  attrs: [\r\n    [HeroEquipAttrType.Speed, 3],\r\n    [HeroEquipAttrType.CritRate, 0.16],\r\n    [HeroEquipAttrType.AttackRate, 0.03],\r\n    [HeroEquipAttrType.CritPower, 0.04]\r\n  ]\r\n});\r\n\r\nSCORE_DATA.sort((a, b) => b.score - a.score);\r\n\r\nexport function getEquipScoreData(equip: IHeroEquip): IScoreData | null {\r\n  for (let item of SCORE_DATA) {\r\n    if (match(equip, item)) {\r\n      return item;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","import { IYyxState } from \"../../store\";\r\n\r\nexport const SnapshotSelectors = {\r\n  currentSnapshot: (state: IYyxState) =>\r\n    state.snapshot && state.snapshot.current,\r\n\r\n  isCbgSnapshot: (state: IYyxState) =>\r\n    state.snapshot && state.snapshot.current && !!state.snapshot.current.cbg_url\r\n};\r\n","import { IAction, IDispatch, IYyxState } from \"../../store\";\r\nimport { createSelector } from \"reselect\";\r\nimport {\r\n  IHeroEquip,\r\n  HeroEquipAttrType,\r\n  IHeroEquipPreset,\r\n  IHero,\r\n  IHeroEquipSuitData\r\n} from \"../../interfaces\";\r\nimport { defaultSorter } from \"./sorters\";\r\nimport { getEquipSuiteData } from \"./data\";\r\nimport { HeroSelectors } from \"../hero\";\r\nimport { getTimestampFromObjectId, Filter, combineFilters } from \"../../utils\";\r\nimport { getEquipScoreData } from \"./score\";\r\nimport { SnapshotSelectors } from \"../snapshot/selectors\";\r\n\r\nexport interface IState {\r\n  listOptions: IEquipListOptions | null;\r\n}\r\n\r\nconst initialState: IState = {\r\n  listOptions: null\r\n};\r\n\r\nexport enum ActionType {\r\n  SetListOptions = \"Equip.etListOptions\"\r\n}\r\n\r\nexport const EquipActions = {\r\n  setListOptions(opts: IEquipListOptions) {\r\n    return {\r\n      type: ActionType.SetListOptions,\r\n      payload: opts\r\n    };\r\n  }\r\n};\r\n\r\nexport function reducer(state = initialState, action: IAction<ActionType>) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ActionType.SetListOptions: {\r\n      return {\r\n        ...state,\r\n        listOptions: payload\r\n      };\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nconst selectEquippedByMap = createSelector(\r\n  HeroSelectors.selectAll,\r\n  heroes => {\r\n    const equippedByMap = new Map<string, IHero>();\r\n    if (heroes) {\r\n      for (let h of heroes) {\r\n        for (let id of h.equips) {\r\n          equippedByMap.set(id, h);\r\n        }\r\n      }\r\n    }\r\n    return equippedByMap;\r\n  }\r\n);\r\n\r\nconst selectPresets = createSelector(\r\n  SnapshotSelectors.currentSnapshot,\r\n  snapshot => {\r\n    if (!snapshot) {\r\n      return null;\r\n    }\r\n    return snapshot.data.hero_equip_presets;\r\n  }\r\n);\r\n\r\nconst selectIncludedInPresetsMap = createSelector(\r\n  selectPresets,\r\n  presets => {\r\n    const map = new Map<string, IHeroEquipPreset[]>();\r\n    if (presets) {\r\n      for (let p of presets) {\r\n        for (let id of p.items) {\r\n          let list = map.get(id);\r\n          if (!list) {\r\n            list = [p];\r\n            map.set(id, list);\r\n          } else {\r\n            list.push(p);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return map;\r\n  }\r\n);\r\n\r\nconst selectAll = createSelector(\r\n  (state: IYyxState) => state.snapshot.current,\r\n  selectEquippedByMap,\r\n  selectIncludedInPresetsMap,\r\n  (snapshot, equippedBy, inPresets) => {\r\n    if (!snapshot) {\r\n      return null;\r\n    }\r\n    return snapshot.data.hero_equips.map(equip => {\r\n      equip.suit_data = getEquipSuiteData(equip.suit_id);\r\n      equip.equipped_by = equippedBy.get(equip.id);\r\n      equip.included_in_presets = inPresets.get(equip.id);\r\n      equip.timestamp_from_id = getTimestampFromObjectId(equip.id);\r\n      return equip;\r\n    });\r\n  }\r\n);\r\n\r\nconst selectAllSorted = createSelector(\r\n  selectAll,\r\n  equips => {\r\n    if (!equips) {\r\n      return null;\r\n    }\r\n    return equips.slice().sort(defaultSorter);\r\n  }\r\n);\r\n\r\nconst selectMaps = createSelector(\r\n  selectAllSorted,\r\n  equips => {\r\n    if (!equips) {\r\n      return null;\r\n    }\r\n\r\n    const idMap = new Map<string, IHeroEquip>();\r\n    const qualityMap = new Map<number, IHeroEquip[]>();\r\n    const levelMap = new Map<number, IHeroEquip[]>();\r\n    const suitMap = new Map<number, IHeroEquip[]>();\r\n    const posMap = new Map<number, IHeroEquip[]>();\r\n    const baseAttrMap = new Map<HeroEquipAttrType, IHeroEquip[]>();\r\n\r\n    function push<K>(\r\n      map: Map<K, IHeroEquip[]>,\r\n      i: IHeroEquip,\r\n      selector: (i: IHeroEquip) => K\r\n    ) {\r\n      const key = selector(i);\r\n      let list = map.get(key);\r\n      if (!list) {\r\n        list = [i];\r\n        map.set(key, list);\r\n      } else {\r\n        list.push(i);\r\n      }\r\n    }\r\n\r\n    for (let e of equips) {\r\n      idMap.set(e.id, e);\r\n      push(qualityMap, e, e => e.quality);\r\n      push(levelMap, e, e => e.level);\r\n      push(suitMap, e, e => e.suit_id);\r\n      push(posMap, e, e => e.pos);\r\n      push(baseAttrMap, e, e => e.base_attr.type);\r\n    }\r\n\r\n    return {\r\n      id: idMap,\r\n      quality: qualityMap,\r\n      level: levelMap,\r\n      suit: suitMap,\r\n      base_attr: baseAttrMap\r\n    };\r\n  }\r\n);\r\n\r\nexport enum EquipLevelFilter {\r\n  Any,\r\n  Zero,\r\n  Max\r\n}\r\n\r\nexport enum EquipEquippedFilter {\r\n  Any,\r\n  Equipped,\r\n  NotEquipped\r\n}\r\n\r\nexport interface IEquipListOptions {\r\n  id: string;\r\n  types: number[] | null;\r\n  positions: number[];\r\n  stars: number[];\r\n  baseAttrs: HeroEquipAttrType[] | null;\r\n  trashed: boolean | null;\r\n  level: EquipLevelFilter;\r\n  equipped: EquipEquippedFilter;\r\n  creationTimeFrom: Date | null;\r\n  creationTimeTo: Date | null;\r\n  scores: number[];\r\n}\r\n\r\nconst selectDisplay = createSelector(\r\n  selectAllSorted,\r\n  (state: IYyxState) => state.equip.listOptions,\r\n  (equips, opts) => {\r\n    if (!opts) {\r\n      return null;\r\n    }\r\n\r\n    if (!equips) {\r\n      return null;\r\n    }\r\n\r\n    if (opts.id) {\r\n      return equips.filter(e => e.id === opts.id);\r\n    }\r\n\r\n    const filters: Array<Filter<IHeroEquip>> = [];\r\n\r\n    if (opts.types && opts.types.length) {\r\n      filters.push(i => !!(opts.types && opts.types.includes(i.suit_id)));\r\n    }\r\n\r\n    if (opts.positions && opts.positions.length) {\r\n      filters.push(\r\n        i => !!(opts.positions && opts.positions.includes(i.pos + 1))\r\n      );\r\n    }\r\n\r\n    if (opts.stars && opts.stars.length) {\r\n      filters.push(i => !!(opts.stars && opts.stars.includes(i.quality)));\r\n    }\r\n\r\n    if (opts.baseAttrs && opts.baseAttrs.length) {\r\n      filters.push(\r\n        i => !!(opts.baseAttrs && opts.baseAttrs.includes(i.base_attr.type))\r\n      );\r\n    }\r\n\r\n    if (opts.level !== EquipLevelFilter.Any) {\r\n      if (opts.level === EquipLevelFilter.Zero) {\r\n        filters.push(i => i.level === 0);\r\n      } else {\r\n        filters.push(i => i.level === 15);\r\n      }\r\n    }\r\n\r\n    if (opts.equipped !== EquipEquippedFilter.Any) {\r\n      if (opts.equipped === EquipEquippedFilter.Equipped) {\r\n        filters.push(i => !!i.equipped_by);\r\n      } else {\r\n        filters.push(i => !i.equipped_by);\r\n      }\r\n    }\r\n\r\n    if (opts.trashed !== null) {\r\n      filters.push(i => i.garbage === opts.trashed);\r\n    }\r\n\r\n    if (opts.scores.length) {\r\n      filters.push(i => {\r\n        const scoreData = getEquipScoreData(i);\r\n        if (!scoreData) {\r\n          return false;\r\n        } else {\r\n          return opts.scores.includes(scoreData.score);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (opts.creationTimeFrom) {\r\n      const t = opts.creationTimeFrom.getTime() / 1000;\r\n      filters.push(i => getTimestampFromObjectId(i.id) >= t);\r\n    }\r\n\r\n    if (opts.creationTimeTo) {\r\n      const t = opts.creationTimeTo.getTime() / 1000;\r\n      filters.push(i => getTimestampFromObjectId(i.id) < t);\r\n    }\r\n\r\n    if (filters.length) {\r\n      return equips.filter(combineFilters(...filters));\r\n    }\r\n\r\n    return equips;\r\n  }\r\n);\r\n\r\nexport type IEquipPresetItem = IHeroEquipPreset & IEquipSetInfo;\r\n\r\nexport interface IEquipSetInfo {\r\n  equips: IHeroEquip[];\r\n  suits: IHeroEquipSuitData[];\r\n  attrMap: Map<HeroEquipAttrType, number>;\r\n}\r\n\r\nexport const computeEquipSetInfo = (equips: IHeroEquip[]) => {\r\n  const suitCount = new Map<number, number>();\r\n  const attrMap = new Map<HeroEquipAttrType, number>();\r\n  const suits = [];\r\n  suitCount.clear();\r\n  for (const equip of equips) {\r\n    for (const attr of equip.random_attrs) {\r\n      const v = attrMap.get(attr.type) || 0;\r\n      attrMap.set(attr.type, v + attr.value);\r\n    }\r\n\r\n    {\r\n      const v = attrMap.get(equip.base_attr.type) || 0;\r\n      attrMap.set(equip.base_attr.type, v + equip.base_attr.value);\r\n    }\r\n\r\n    for (let attr of equip.single_attrs) {\r\n      const v = attrMap.get(attr.type) || 0;\r\n      attrMap.set(attr.type, v + attr.value);\r\n    }\r\n\r\n    const c = suitCount.get(equip.suit_id) || 0;\r\n    suitCount.set(equip.suit_id, c + 1);\r\n  }\r\n  for (let [suitId, count] of suitCount.entries()) {\r\n    if (count >= 2) {\r\n      const data = getEquipSuiteData(suitId);\r\n      if (data) {\r\n        if (data.effect[1].length) {\r\n          suits.push(data);\r\n        }\r\n        if (data.attr[1].length) {\r\n          for (let attr of data.attr[1]) {\r\n            const v = attrMap.get(attr.type) || 0;\r\n            attrMap.set(attr.type, v + attr.value);\r\n          }\r\n        }\r\n        if (data.effect[3].length && count >= 4) {\r\n          suits.push(data);\r\n        }\r\n      } else {\r\n        console.warn(`unknown equip suit id: ${suitId}`);\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    suits,\r\n    equips,\r\n    attrMap\r\n  } as IEquipSetInfo;\r\n};\r\n\r\nconst selectPresetItems = createSelector(\r\n  selectPresets,\r\n  selectMaps,\r\n  (presets, maps) => {\r\n    if (!presets || !maps) {\r\n      return null;\r\n    }\r\n    return presets.map(p => {\r\n      const equips = p.items\r\n        .map(id => maps.id.get(id))\r\n        .filter(v => !!v) as IHeroEquip[];\r\n      return {\r\n        ...p,\r\n        ...computeEquipSetInfo(equips)\r\n      } as IEquipPresetItem;\r\n    });\r\n  }\r\n);\r\n\r\nexport const EquipSelectors = {\r\n  selectAllSorted,\r\n  selectMaps,\r\n  selectDisplay,\r\n  selectPresetItems\r\n};\r\n","export const ACTION_ACCOUNT_SET_LOADING = \"ACTION_ACCOUNT_SET_LOADING\";\r\nexport const ACTION_ACCOUNT_SET_ERROR = \"ACTION_ACCOUNT_SET_ERROR\";\r\nexport const ACTION_ACCOUNT_SET_ACCOUNTS = \"ACTION_ACCOUNT_SET_ACCOUNTS\";\r\nexport const ACTION_ACCOUNT_SELECT = \"ACTION_ACCOUNT_SELECT\";\r\nexport const ACTION_ACCOUNT_SET_ACTIVE_STATES =\r\n  \"ACTION_ACCOUNT_SET_ACTIVE_STATES\";\r\nexport const ACTION_ACCOUNT_DELETE_ID = \"ACTION_ACCOUNT_DELETE_ID\";\r\n","import { AccountId } from \"./types\";\r\n\r\nexport const AccountService = {\r\n  getAccountPath: (id: AccountId) => {\r\n    switch (id.type) {\r\n      case \"Yyx\": {\r\n        return `/yyx/${id.server_id}/${id.player_id}`;\r\n      }\r\n      case \"Cbg\": {\r\n        return `/cbg/${id.server_id}/${id.order_sn}`;\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { IAction } from \"../../store\";\r\nimport {\r\n  IAccount,\r\n  YyxAccountId,\r\n  CbgAccountId,\r\n  AccountId,\r\n  IAccountActiveState\r\n} from \"./types\";\r\nimport {\r\n  ACTION_ACCOUNT_SET_ERROR,\r\n  ACTION_ACCOUNT_SET_LOADING,\r\n  ACTION_ACCOUNT_SET_ACCOUNTS,\r\n  ACTION_ACCOUNT_SELECT,\r\n  ACTION_ACCOUNT_SET_ACTIVE_STATES,\r\n  ACTION_ACCOUNT_DELETE_ID\r\n} from \"./constants\";\r\nimport { AccountService } from \"./service\";\r\n\r\nexport interface IAccountState {\r\n  loading: boolean;\r\n  error: Error | null;\r\n  accounts: IAccount[];\r\n  activeStates: IAccountActiveState[];\r\n  current: IAccount | null;\r\n  currentNotFound: boolean;\r\n}\r\n\r\nconst initialState: IAccountState = {\r\n  loading: true,\r\n  error: null,\r\n  accounts: [],\r\n  activeStates: [],\r\n  current: null,\r\n  currentNotFound: false\r\n};\r\n\r\nexport function accountReducer(state = initialState, action: IAction) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ACTION_ACCOUNT_SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: payload,\r\n        current: null,\r\n        currentNotFound: false\r\n      };\r\n    case ACTION_ACCOUNT_SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      };\r\n    case ACTION_ACCOUNT_SET_ACCOUNTS:\r\n      return {\r\n        ...state,\r\n        accounts: payload\r\n      };\r\n    case ACTION_ACCOUNT_SELECT: {\r\n      const id = payload as AccountId;\r\n      const current =\r\n        state.accounts.find(a => {\r\n          return (\r\n            AccountService.getAccountPath(id) ===\r\n            AccountService.getAccountPath(a.id)\r\n          );\r\n        }) || null;\r\n      return {\r\n        ...state,\r\n        current,\r\n        currentNotFound: !current\r\n      };\r\n    }\r\n    case ACTION_ACCOUNT_SET_ACTIVE_STATES: {\r\n      const states = payload as Array<Omit<IAccountActiveState, \"path\">>;\r\n      return {\r\n        ...state,\r\n        activeStates: states.map(state => {\r\n          return {\r\n            ...state,\r\n            path: AccountService.getAccountPath(state.id)\r\n          };\r\n        })\r\n      };\r\n    }\r\n    case ACTION_ACCOUNT_DELETE_ID: {\r\n      return {\r\n        ...state,\r\n        accounts: state.accounts.filter(\r\n          a =>\r\n            AccountService.getAccountPath(a.id) !==\r\n            AccountService.getAccountPath(payload)\r\n        )\r\n      };\r\n    }\r\n  }\r\n  return state;\r\n}\r\n","export const ACTION_SNAPSHOT_SET_CURRENT = \"SNAPSHOT_SET_CURRENT\";\r\n","import { IAction } from \"../../store\";\r\nimport { ACTION_SNAPSHOT_SET_CURRENT } from \"./constants\";\r\nimport { ISnapshot } from \"../../interfaces\";\r\n\r\nexport interface ISnapshotState {\r\n  currentNotSelected: boolean;\r\n  current: ISnapshot | null;\r\n}\r\n\r\nconst initialState: ISnapshotState = {\r\n  currentNotSelected: false,\r\n  current: null\r\n};\r\n\r\nexport function snapshotReducer(state = initialState, action: IAction) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ACTION_SNAPSHOT_SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        currentNotSelected: !payload,\r\n        current: payload\r\n      };\r\n  }\r\n  return state;\r\n}\r\n","import {\r\n  createStore,\r\n  combineReducers,\r\n  applyMiddleware,\r\n  compose,\r\n  Dispatch\r\n} from \"redux\";\r\nimport thunk, { ThunkDispatch, ThunkAction } from \"redux-thunk\";\r\n\r\nimport * as error from \"../modules/error\";\r\nimport * as hero from \"../modules/hero\";\r\nimport * as equip from \"../modules/equip\";\r\nimport { IAccountState, accountReducer } from \"../modules/account/reducer\";\r\nimport { ISnapshotState, snapshotReducer } from \"../modules/snapshot/reducer\";\r\n\r\nexport interface IAction<T = string> {\r\n  type: T;\r\n  payload?: any;\r\n}\r\n\r\nexport type IDispatch<T = string, S = any> = ThunkDispatch<S, void, IAction<T>>;\r\n\r\nexport interface IYyxState {\r\n  error: error.IState;\r\n  account: IAccountState;\r\n  snapshot: ISnapshotState;\r\n  hero: hero.IState;\r\n  equip: equip.IState;\r\n}\r\n\r\nconst composeEnhancers =\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const YyxStore = createStore<IYyxState, any, {}, {}>(\r\n  combineReducers({\r\n    error: error.reducer,\r\n    account: accountReducer,\r\n    snapshot: snapshotReducer,\r\n    hero: hero.reducer,\r\n    equip: equip.reducer\r\n  }),\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport { YyxStore } from \"../store\";\r\nimport { ErrorActions } from \"./error\";\r\n\r\nexport const HttpClient = axios.create();\r\n\r\nHttpClient.interceptors.response.use(\r\n  res => res,\r\n  err => {\r\n    const error = err.response ? extractError(err.response) : err;\r\n    YyxStore.dispatch(ErrorActions.setError(error));\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nfunction extractError(res: AxiosResponse) {\r\n  if (res.data && res.data.message) {\r\n    return new Error(res.data.message);\r\n  }\r\n  return new Error(`未知错误 (HTTP ${res.status})`);\r\n}\r\n","import { HttpClient } from \"../http\";\r\n\r\nexport const pullCbg = (url: string) => {\r\n  return HttpClient.put(\"/api/snapshot-cbg\", {\r\n    url\r\n  }).then(res => res.data);\r\n};\r\n","import { HttpClient } from \"../http\";\r\nimport { ISnapshot } from \"../../interfaces\";\r\nimport { IAccount } from \"../account/types\";\r\n\r\nexport const SnapshotService = {\r\n  select: async (snapshot: ISnapshot | File) => {\r\n    return HttpClient.post<IAccount>(\"/api/import\", snapshot).then(\r\n      res => res.data\r\n    );\r\n  }\r\n};\r\n","import { IDispatch } from \"../../store\";\r\n\r\nimport { HttpClient } from \"../http\";\r\n\r\nimport {\r\n  ACTION_ACCOUNT_SET_ERROR,\r\n  ACTION_ACCOUNT_SET_LOADING,\r\n  ACTION_ACCOUNT_SET_ACCOUNTS,\r\n  ACTION_ACCOUNT_SELECT,\r\n  ACTION_ACCOUNT_SET_ACTIVE_STATES,\r\n  ACTION_ACCOUNT_DELETE_ID\r\n} from \"./constants\";\r\nimport { AccountId } from \"./types\";\r\nimport { AccountService } from \"./service\";\r\nimport { batch } from \"react-redux\";\r\n\r\nasync function loadActive() {\r\n  return HttpClient.get(\"/api/active-account\").then(res => {\r\n    return res.data;\r\n  });\r\n}\r\n\r\nfunction load() {\r\n  return async (dispatch: IDispatch) => {\r\n    dispatch({\r\n      type: ACTION_ACCOUNT_SET_ERROR,\r\n      payload: null\r\n    });\r\n    dispatch({\r\n      type: ACTION_ACCOUNT_SET_LOADING,\r\n      payload: true\r\n    });\r\n    try {\r\n      const [accounts, states] = await Promise.all([\r\n        HttpClient.get(\"/api/account\").then(res => res.data),\r\n        loadActive()\r\n      ]);\r\n      batch(() => {\r\n        dispatch({\r\n          type: ACTION_ACCOUNT_SET_ACCOUNTS,\r\n          payload: accounts\r\n        });\r\n        dispatch({\r\n          type: ACTION_ACCOUNT_SET_ACTIVE_STATES,\r\n          payload: states\r\n        });\r\n      });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: ACTION_ACCOUNT_SET_ERROR,\r\n        payload: e\r\n      });\r\n    }\r\n    dispatch({\r\n      type: ACTION_ACCOUNT_SET_LOADING,\r\n      payload: false\r\n    });\r\n  };\r\n}\r\n\r\nfunction loadId(id: AccountId) {\r\n  return async (dispatch: IDispatch) => {\r\n    dispatch({\r\n      type: ACTION_ACCOUNT_SET_ERROR,\r\n      payload: null\r\n    });\r\n    dispatch({\r\n      type: ACTION_ACCOUNT_SET_LOADING,\r\n      payload: true\r\n    });\r\n    try {\r\n      let path = AccountService.getAccountPath(id);\r\n      const [accounts, states] = await Promise.all([\r\n        HttpClient.get(`/api/account${path}`).then(res => {\r\n          return res.data ? [res.data] : [];\r\n        }),\r\n        loadActive()\r\n      ]);\r\n      batch(() => {\r\n        dispatch({\r\n          type: ACTION_ACCOUNT_SET_ACCOUNTS,\r\n          payload: accounts\r\n        });\r\n        dispatch({\r\n          type: ACTION_ACCOUNT_SET_ACTIVE_STATES,\r\n          payload: states\r\n        });\r\n      });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: ACTION_ACCOUNT_SET_ERROR,\r\n        payload: e\r\n      });\r\n    }\r\n    dispatch({\r\n      type: ACTION_ACCOUNT_SET_LOADING,\r\n      payload: false\r\n    });\r\n  };\r\n}\r\n\r\nfunction select(id: AccountId) {\r\n  return {\r\n    type: ACTION_ACCOUNT_SELECT,\r\n    payload: id\r\n  };\r\n}\r\n\r\nexport const AccountActions = {\r\n  select,\r\n  load,\r\n  loadId,\r\n  loadAndSelectId(id: AccountId) {\r\n    return async (dispatch: IDispatch) => {\r\n      await dispatch(loadId(id));\r\n      dispatch(select(id));\r\n    };\r\n  },\r\n  close(id: AccountId) {\r\n    const path = AccountService.getAccountPath(id);\r\n    return async (dispatch: IDispatch) => {\r\n      try {\r\n        await HttpClient.put(`/api/account${path}/close`);\r\n        dispatch({\r\n          type: ACTION_ACCOUNT_SET_ACTIVE_STATES,\r\n          payload: await loadActive()\r\n        });\r\n      } catch (e) {\r\n        dispatch({\r\n          type: ACTION_ACCOUNT_SET_ERROR,\r\n          payload: e\r\n        });\r\n      }\r\n    };\r\n  },\r\n  remove(id: AccountId) {\r\n    const path = AccountService.getAccountPath(id);\r\n    return async (dispatch: IDispatch) => {\r\n      try {\r\n        await HttpClient.delete(`/api/account${path}`);\r\n        dispatch({\r\n          type: ACTION_ACCOUNT_DELETE_ID,\r\n          payload: id\r\n        });\r\n      } catch (e) {\r\n        dispatch({\r\n          type: ACTION_ACCOUNT_SET_ERROR,\r\n          payload: e\r\n        });\r\n      }\r\n    };\r\n  }\r\n};\r\n","import { ACTION_SNAPSHOT_SET_CURRENT } from \"./constants\";\r\nimport { IDispatch } from \"../../store\";\r\nimport { HttpClient } from \"../http\";\r\nimport { ISnapshot } from \"../../interfaces\";\r\nimport { SnapshotService } from \"./service\";\r\nimport { AccountService } from \"../account/service\";\r\nimport { IAccount } from \"../account/types\";\r\nimport { AccountActions } from \"../account/actions\";\r\n\r\nexport const SnapshotActions = {\r\n  import(file: File | ISnapshot) {\r\n    return async (dispatch: IDispatch) => {\r\n      const account = await SnapshotService.select(file);\r\n      await dispatch(AccountActions.load());\r\n      return dispatch(SnapshotActions.load(account));\r\n    };\r\n  },\r\n  reset() {\r\n    return (dispatch: IDispatch) => {\r\n      dispatch({\r\n        type: ACTION_SNAPSHOT_SET_CURRENT,\r\n        payload: null\r\n      });\r\n    };\r\n  },\r\n  load(account: IAccount) {\r\n    const path = AccountService.getAccountPath(account.id);\r\n    return async (dispatch: IDispatch) => {\r\n      const snapshot = await HttpClient.get<IAccount>(\r\n        `/api${path}/snapshot`\r\n      ).then(res => res.data);\r\n      dispatch({\r\n        type: ACTION_SNAPSHOT_SET_CURRENT,\r\n        payload: snapshot\r\n      });\r\n      return snapshot;\r\n    };\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  Classes,\r\n  Colors,\r\n  TextArea,\r\n  Intent,\r\n  Button,\r\n  Spinner,\r\n  Callout,\r\n  Card\r\n} from \"@blueprintjs/core\";\r\nimport classNames from \"classnames\";\r\nimport { ICbgSnapshot } from \"../../interfaces\";\r\nimport { pullCbg } from \"../../modules/cbg\";\r\nimport { formatCurrency } from \"../../utils\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SnapshotActions } from \"../../modules/snapshot/actions\";\r\n\r\nexport interface Props {\r\n  open: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst SnapshopPreview: React.SFC<{\r\n  snapshot: ICbgSnapshot;\r\n}> = ({ snapshot }) => {\r\n  return (\r\n    <Card>\r\n      <h4 className={Classes.HEADING}>\r\n        卖家: {snapshot.listing_info.player_name}\r\n      </h4>\r\n      <p>\r\n        {snapshot.listing_info.server_name}\r\n        <br />\r\n        <strong className={Classes.TEXT_MUTED}>\r\n          {snapshot.listing_info.player_level}级\r\n        </strong>\r\n        <br />\r\n        <strong style={{ color: Colors.RED1 }}>\r\n          {formatCurrency(snapshot.listing_info.price)}\r\n        </strong>\r\n      </p>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst OpenCbgUrl: React.SFC<Props> = props => {\r\n  const { open, onClose } = props;\r\n  const dispatch = useDispatch();\r\n  const [url, setUrl] = React.useState(\"\");\r\n  const [snapshot, setSnapshot] = React.useState<ICbgSnapshot | null>(null);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [error, setError] = React.useState<Error | null>(null);\r\n\r\n  const onPull = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const snapshot = await pullCbg(url);\r\n      setSnapshot(snapshot);\r\n    } catch (e) {\r\n      setError(e);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const onOpen = async (snapshot: ICbgSnapshot) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await dispatch(SnapshotActions.import(snapshot.snapshot));\r\n    } catch (e) {\r\n      setError(e);\r\n    }\r\n    setSnapshot(null);\r\n    setLoading(false);\r\n    onClose();\r\n  };\r\n\r\n  const load = (\r\n    <>\r\n      <div className={Classes.DIALOG_BODY}>\r\n        {error && (\r\n          <div className=\"yyx-space-v\">\r\n            <Callout title=\"读取藏宝阁数据失败\" intent=\"danger\">\r\n              {error.message}\r\n            </Callout>\r\n          </div>\r\n        )}\r\n\r\n        <p className={classNames(Classes.TEXT_SMALL, Classes.TEXT_MUTED)}>\r\n          打开任意藏宝阁商品详情页面，复制粘贴如下格式的整个网址:\r\n          https://yys.cbg.163.com/cgi/mweb/equip/10/201907131401616...\r\n        </p>\r\n        <TextArea\r\n          className={classNames(Classes.FILL)}\r\n          growVertically={true}\r\n          large={true}\r\n          intent={Intent.PRIMARY}\r\n          placeholder=\"粘贴藏宝阁商品链接\"\r\n          value={url}\r\n          onChange={v => setUrl(v.target.value.trim())}\r\n          disabled={loading}\r\n        />\r\n      </div>\r\n      <div className={Classes.DIALOG_FOOTER}>\r\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n          {loading ? (\r\n            <Spinner size={24} />\r\n          ) : (\r\n            <Button intent=\"primary\" onClick={onPull} disabled={!url}>\r\n              读取藏宝阁数据\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  const preview = snapshot && (\r\n    <>\r\n      <div className={Classes.DIALOG_BODY}>\r\n        <SnapshopPreview snapshot={snapshot} />\r\n      </div>\r\n      <div className={Classes.DIALOG_FOOTER}>\r\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n          {loading ? (\r\n            <Spinner size={24} />\r\n          ) : (\r\n            <>\r\n              <Button\r\n                intent=\"primary\"\r\n                onClick={() => onOpen(snapshot)}\r\n                disabled={!url}\r\n              >\r\n                打开\r\n              </Button>\r\n              <Button onClick={() => setSnapshot(null)}>重新输入链接</Button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Dialog isOpen={open} onClose={onClose} title=\"打开藏宝阁链接\">\r\n      {snapshot ? preview : load}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport { OpenCbgUrl };\r\n","import DATA from \"./SERVER_DATA.json\";\r\n\r\nconst map = new Map<number, string>(\r\n  DATA.map(item => {\r\n    return [parseInt(item.id), item.name] as [number, string];\r\n  })\r\n);\r\n\r\nexport function getServerName(id: number): string {\r\n  return map.get(id) || \"未知服务器\";\r\n}\r\n","import React, { SFC } from \"react\";\r\nimport \"./Star.scss\";\r\nimport classNames from \"classnames\";\r\n\r\nexport interface StarProps {\r\n  type: StarType;\r\n}\r\n\r\nexport enum StarType {\r\n  Grey = \"grey\",\r\n  Orange = \"orange\",\r\n  Purple = \"purple\",\r\n  Blue = \"blue\"\r\n}\r\n\r\nconst renderStar = (i: number, type: StarType) => {\r\n  return <i key={i} className={classNames(\"star\", `star-${type}`)} />;\r\n};\r\n\r\nconst Elements: { [key: string]: JSX.Element[][] } = {\r\n  [StarType.Orange]: [],\r\n  [StarType.Purple]: [],\r\n  [StarType.Blue]: []\r\n};\r\nfor (let i = 0; i < 6; i++) {\r\n  const orangeElems = [];\r\n  const purpleElems = [];\r\n  const blueElems = [];\r\n  for (let ii = 0; ii <= i; ii++) {\r\n    orangeElems.push(renderStar(ii, StarType.Orange));\r\n    purpleElems.push(renderStar(ii, StarType.Purple));\r\n    blueElems.push(renderStar(ii, StarType.Blue));\r\n  }\r\n  for (let ii = i + 1; ii < 6; ii++) {\r\n    orangeElems.push(renderStar(ii, StarType.Grey));\r\n    purpleElems.push(renderStar(ii, StarType.Grey));\r\n    blueElems.push(renderStar(ii, StarType.Grey));\r\n  }\r\n  Elements[StarType.Orange].push(orangeElems);\r\n  Elements[StarType.Purple].push(purpleElems);\r\n  Elements[StarType.Blue].push(blueElems);\r\n}\r\n\r\nexport const Stars: SFC<StarProps & { level: number }> = props => {\r\n  return <span className=\"stars\">{Elements[props.type][props.level - 1]}</span>;\r\n};\r\n","import React, { SyntheticEvent, useState } from \"react\";\r\nimport \"./AccountSelector.scss\";\r\n\r\nimport { IAccountInfo, AccountId } from \"../../modules/account/types\";\r\nimport { AccountService } from \"../../modules/account/service\";\r\nimport { getServerName } from \"../../modules/server/data\";\r\nimport { formatUtcDate } from \"../../utils\";\r\nimport {\r\n  Icon,\r\n  Classes,\r\n  Button,\r\n  Dialog,\r\n  Alert,\r\n  Intent,\r\n  Card,\r\n  Callout\r\n} from \"@blueprintjs/core\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AccountActions } from \"../../modules/account/actions\";\r\nexport interface Props {\r\n  accounts: IAccountInfo[];\r\n}\r\n\r\nexport const AccountSelectorImpl: React.SFC<Props & RouteComponentProps> = ({\r\n  accounts,\r\n  history\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [deleting, setDeleting] = useState<IAccountInfo | null>(null);\r\n\r\n  const open = (id: AccountId) => {\r\n    history.push(AccountService.getAccountPath(id));\r\n  };\r\n\r\n  const close = (id: AccountId) => {\r\n    dispatch(AccountActions.close(id));\r\n  };\r\n\r\n  const remove = (id: AccountId) => {\r\n    dispatch(AccountActions.remove(id));\r\n    setDeleting(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"account-selector\">\r\n      <table className=\"bp3-html-table bp3-interactive\">\r\n        <thead>\r\n          <tr>\r\n            <th>用户名</th>\r\n            <th>服务器</th>\r\n            <th>等级</th>\r\n            <th>最近快照</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {accounts.length === 0 && (\r\n            <tr>\r\n              <td colSpan={5}>没有已保存的账户。</td>\r\n            </tr>\r\n          )}\r\n          {accounts.map((a, i) => {\r\n            const serverName =\r\n              a.id.type === \"Yyx\" ? getServerName(a.id.server_id) : \"藏宝阁\";\r\n            return (\r\n              <tr key={i} onClick={() => open(a.id)}>\r\n                <td className=\"name\">\r\n                  <Icon\r\n                    icon=\"user\"\r\n                    className={a.state ? \"\" : \"inactive\"}\r\n                    intent={a.state ? \"success\" : \"none\"}\r\n                  />\r\n                  &nbsp;\r\n                  {a.name}\r\n                </td>\r\n                <td>{serverName}</td>\r\n                <td>{a.level}级</td>\r\n                <td>{formatUtcDate(a.latest_snapshot_date)}</td>\r\n                <td>\r\n                  {a.state && (\r\n                    <Button\r\n                      disabled={a.state.busy}\r\n                      onClick={(e: SyntheticEvent) => {\r\n                        e.stopPropagation();\r\n                        close(a.id);\r\n                      }}\r\n                    >\r\n                      关闭\r\n                    </Button>\r\n                  )}\r\n                  {!a.state && (\r\n                    <Button\r\n                      intent=\"danger\"\r\n                      onClick={(e: SyntheticEvent) => {\r\n                        e.stopPropagation();\r\n                        setDeleting(a);\r\n                      }}\r\n                    >\r\n                      删除\r\n                    </Button>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <Alert\r\n        cancelButtonText=\"取消\"\r\n        confirmButtonText=\"确认删除\"\r\n        icon=\"trash\"\r\n        intent={Intent.DANGER}\r\n        isOpen={!!deleting}\r\n        onCancel={() => setDeleting(null)}\r\n        onConfirm={() => deleting && remove(deleting.id)}\r\n      >\r\n        {deleting && (\r\n          <p>\r\n            确认删除账号 <strong>{deleting.name}</strong> ?\r\n          </p>\r\n        )}\r\n      </Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const AccountSelector = withRouter(AccountSelectorImpl);\r\n","import { IYyxState } from \"../../store\";\r\nimport { createSelector } from \"reselect\";\r\nimport { IAccountInfo } from \"./types\";\r\nimport { AccountService } from \"./service\";\r\n\r\nconst accounts = (state: IYyxState) => state.account.accounts;\r\nconst activeStates = (state: IYyxState) => state.account.activeStates;\r\nconst accountsSelector = createSelector(\r\n  accounts,\r\n  activeStates,\r\n  (accounts, states) => {\r\n    return accounts.map(a => {\r\n      const path = AccountService.getAccountPath(a.id);\r\n      return {\r\n        ...a,\r\n        path,\r\n        state: states.find(s => s.path === path)\r\n      };\r\n    }) as IAccountInfo[];\r\n  }\r\n);\r\n\r\nexport const AccountSelectors = {\r\n  accounts: accountsSelector,\r\n  current: (state: IYyxState) => state.account.current,\r\n  currentNotFound: (state: IYyxState) => state.account.currentNotFound,\r\n  loading: (state: IYyxState) => state.account.loading,\r\n  error: (state: IYyxState) => state.account.error\r\n};\r\n","import React, {\r\n  SFC,\r\n  ChangeEvent,\r\n  FormEventHandler,\r\n  useState,\r\n  useEffect\r\n} from \"react\";\r\nimport \"./SnapshotSelectScreen.scss\";\r\nimport logo from \"../../assets/logo.svg\";\r\nimport {\r\n  FileInput,\r\n  Callout,\r\n  Spinner,\r\n  Button,\r\n  Divider,\r\n  Dialog\r\n} from \"@blueprintjs/core\";\r\nimport { YyxStore, IDispatch } from \"../../store\";\r\nimport { OpenCbgUrl } from \"./OpenCbgUrl\";\r\nimport { IAccount } from \"../../modules/account/types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SnapshotActions } from \"../../modules/snapshot/actions\";\r\nimport { version } from \"../../../package.json\";\r\nimport { AccountSelector } from \"../Account/AccountSelector\";\r\nimport { AccountSelectors } from \"../../modules/account/selectors\";\r\nimport { AccountActions } from \"../../modules/account/actions\";\r\n\r\nexport const SnapshotSelectScreen: SFC = () => {\r\n  const dispatch = useDispatch<IDispatch>();\r\n  const loadingAccounts = useSelector(AccountSelectors.loading);\r\n  const loadAccountsError = useSelector(AccountSelectors.error);\r\n  const accounts = useSelector(AccountSelectors.accounts);\r\n  const [error, setError] = useState<Error | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [openCbg, setOpenCbg] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(SnapshotActions.reset());\r\n    dispatch(AccountActions.load());\r\n  }, []);\r\n\r\n  const handleSelectFile: FormEventHandler<HTMLInputElement> = e => {\r\n    const { files } = e.target as any;\r\n    if (files.length) {\r\n      setError(null);\r\n      setLoading(true);\r\n      dispatch(SnapshotActions.import(files[0]))\r\n        // .finally(() => setLoading(false))\r\n        .catch((err: Error) => {\r\n          setLoading(false);\r\n          setError(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  if (loadingAccounts) {\r\n    return (\r\n      <div style={{ marginTop: \"20%\" }}>\r\n        <Spinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"snapshot-select-screen\">\r\n        <div className=\"left\">\r\n          <div className=\"bp3-non-ideal-state-visual\">\r\n            <img src={logo} className=\"logo\" />\r\n          </div>\r\n          <div className=\"bp3-text-small bp3-text-muted\">v{version}</div>\r\n          <br />\r\n          {error && (\r\n            <Callout title=\"打开快照失败\" intent=\"danger\">\r\n              {error.message}\r\n            </Callout>\r\n          )}\r\n          {loading ? (\r\n            <Spinner />\r\n          ) : (\r\n            <>\r\n              <FileInput text=\"导入快照文件\" onInputChange={handleSelectFile} />\r\n              <br />\r\n              <br />\r\n              <Button minimal intent=\"primary\" onClick={() => setOpenCbg(true)}>\r\n                打开藏宝阁网址\r\n              </Button>\r\n            </>\r\n          )}\r\n        </div>\r\n        {/* <Divider className=\"divider\" /> */}\r\n        <div className=\"right\">\r\n          {loadAccountsError && (\r\n            <Callout title=\"读取账户列表失败\" intent=\"danger\">\r\n              {loadAccountsError.message}\r\n            </Callout>\r\n          )}\r\n          <AccountSelector accounts={accounts} />\r\n        </div>\r\n      </div>\r\n      <OpenCbgUrl open={openCbg} onClose={() => setOpenCbg(false)} />\r\n    </>\r\n  );\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { ReactElement, SFC } from \"react\";\r\nimport { IYyxState } from \"../../store\";\r\nimport { ISnapshot } from \"../../interfaces\";\r\n\r\ninterface RenderProps {\r\n  current: ISnapshot | null;\r\n  notSelected: boolean;\r\n  render: (info: ISnapshot | null) => ReactElement | null;\r\n}\r\n\r\nconst Render: SFC<RenderProps> = (props: RenderProps) => {\r\n  return props.render(props.current);\r\n};\r\n\r\nexport interface SnapshotInfoProps {\r\n  render: (info: ISnapshot | null) => ReactElement | null;\r\n}\r\n\r\nexport const SnapshotInfo = connect(\r\n  (state: IYyxState) => ({\r\n    current: state.snapshot.current,\r\n    notSelected: state.snapshot.currentNotSelected\r\n  }),\r\n  null,\r\n  (stateProps, dispatchProps, ownProps: SnapshotInfoProps) => ({\r\n    ...stateProps,\r\n    render: ownProps.render\r\n  })\r\n)(Render);\r\n","import React, { SFC } from \"react\";\r\nimport \"./OverviewPage.scss\";\r\nimport { SnapshotInfo } from \"../Snapshot/SnapshotInfo\";\r\nimport { Card } from \"@blueprintjs/core\";\r\nimport { ISnapshot } from \"../../interfaces\";\r\nimport { formatDate } from \"../../utils\";\r\n\r\nconst render = (info: ISnapshot | null) => {\r\n  if (!info) {\r\n    return null;\r\n  }\r\n\r\n  const { player, currency, heroes, hero_equips } = info.data;\r\n\r\n  return (\r\n    <table className=\"bp3-html-table bp3-html-table-striped yyx-prop-table\">\r\n      <tbody>\r\n        <tr>\r\n          <td>快照版本</td>\r\n          <td>{info.version}</td>\r\n        </tr>\r\n        {info.cbg_url && (\r\n          <tr>\r\n            <td>藏宝阁地址</td>\r\n            <td>\r\n              <a target=\"_blank\" href={info.cbg_url}>\r\n                {info.cbg_url}\r\n              </a>\r\n            </td>\r\n          </tr>\r\n        )}\r\n        <tr>\r\n          <td>快照日期</td>\r\n          <td>{formatDate(info.timestamp)}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>玩家</td>\r\n          <td>\r\n            {player.name} Lv.{player.level}\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>资产</td>\r\n          <td>\r\n            <ul className=\"bp3-list-unstyled\">\r\n              <li>金币: {currency.coin}</li>\r\n              <li>勾玉: {currency.jade}</li>\r\n              <li>体力: {currency.action_point}</li>\r\n              <li>樱饼: {currency.auto_point}</li>\r\n              <li>荣誉: {currency.honor}</li>\r\n              <li>勋章: {currency.medal}</li>\r\n              {!info.cbg_url && <li>功勋: {currency.contrib}</li>}\r\n              <li>御灵境之钥: {currency.totem_pass}</li>\r\n              <li>魂玉: {currency.s_jade}</li>\r\n              <li>皮肤券: {currency.skin_token}</li>\r\n              {!info.cbg_url && <li>突破券: {currency.realm_raid_pass}</li>}\r\n            </ul>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>式神数量</td>\r\n          <td>{heroes.length}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>御魂数量</td>\r\n          <td>{hero_equips.length}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nconst OverviewPage: SFC = props => {\r\n  return <SnapshotInfo render={render} />;\r\n};\r\n\r\nexport { OverviewPage };\r\n","import { useSelector } from \"react-redux\";\r\nimport { AccountSelectors } from \"./selectors\";\r\nimport { AccountService } from \"./service\";\r\n\r\nexport const useAccountPath = () => {\r\n  const account = useSelector(AccountSelectors.current);\r\n  return account ? AccountService.getAccountPath(account.id) : null;\r\n};\r\n","import React, { SFC, MouseEventHandler } from \"react\";\r\nimport \"./SubNav.scss\";\r\nimport classNames from \"classnames\";\r\nimport { Menu, Classes, MenuItem, MenuDivider, Icon } from \"@blueprintjs/core\";\r\nimport { withRouter, RouteComponentProps, Link } from \"react-router-dom\";\r\nimport { useAccountPath } from \"../../modules/account/hooks\";\r\n\r\nexport interface SubNavLink {\r\n  label: string;\r\n  to: string;\r\n}\r\n\r\nconst Render: SFC<RouteComponentProps & { links: SubNavLink[] }> = props => {\r\n  const accountPath = useAccountPath();\r\n  const path = props.location.pathname;\r\n  return (\r\n    <Menu large className=\"sub-nav\">\r\n      {props.links.map((link, i) => {\r\n        const to = `${accountPath}${link.to}`;\r\n        return (\r\n          <MenuItem\r\n            key={i}\r\n            active={path === to}\r\n            text={link.label}\r\n            href={to}\r\n            onClick={(e: React.MouseEvent) => handleLinkClick(e, props, to)}\r\n          />\r\n        );\r\n      })}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst handleLinkClick = (\r\n  e: React.MouseEvent,\r\n  route: RouteComponentProps,\r\n  to: string\r\n) => {\r\n  e.preventDefault();\r\n  route.history.push(to);\r\n};\r\n\r\nexport const SubNav = withRouter(Render);\r\n","import React, { SFC } from \"react\";\r\nimport \"./HeroIcon.scss\";\r\nimport { IHero, HeroRarity, IHeroData } from \"../../interfaces\";\r\nimport classNames from \"classnames\";\r\nimport { HERO_MAX_LEVEL } from \"../../constants\";\r\nimport { Stars, StarType } from \"../Common/Star\";\r\n\r\nconst getStarType = (h: { rarity: HeroRarity; awake: number }) => {\r\n  if (h.rarity === HeroRarity.N) {\r\n    return StarType.Blue;\r\n  } else if (h.rarity === HeroRarity.SP) {\r\n    return StarType.Purple;\r\n  } else {\r\n    return h.awake > 0 ? StarType.Purple : StarType.Orange;\r\n  }\r\n};\r\n\r\nexport interface IHeroIconItem {\r\n  id?: string;\r\n  hero_id: number;\r\n  level: number;\r\n  star: number;\r\n  rarity: HeroRarity;\r\n  awake: number;\r\n}\r\n\r\nexport const HeroIcon: SFC<{\r\n  hero: IHeroIconItem;\r\n  className?: string;\r\n  onClickHero?: (item: IHeroIconItem) => void;\r\n  childHeros?: IHero[];\r\n}> = props => {\r\n  const h = props.hero;\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        \"hero-icon\",\r\n        `rarity-${h.rarity.toLowerCase()}`,\r\n        !props.childHeros && props.onClickHero && \"clickable\",\r\n        props.className\r\n      )}\r\n      key={h.id}\r\n      onClick={() => props.onClickHero && props.onClickHero(h)}\r\n    >\r\n      <img src={`/res/hero/${h.hero_id}.png`} />\r\n      <div className=\"level\">{h.level === HERO_MAX_LEVEL ? \"满\" : h.level}</div>\r\n      {props.childHeros && (\r\n        <div className=\"children-count\">\r\n          <span>{props.childHeros.length}</span>\r\n        </div>\r\n      )}\r\n      <div className=\"star-level\">\r\n        <Stars type={getStarType(h)} level={h.star} />\r\n      </div>\r\n      {h.awake > 0 && <div className=\"awake\">觉</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const HeroDataIcon: SFC<{\r\n  data: IHeroData;\r\n  className?: string;\r\n}> = props => {\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        \"hero-icon\",\r\n        `rarity-${props.data.rarity.toLowerCase()}`,\r\n        props.className\r\n      )}\r\n      key={props.data.id}\r\n    >\r\n      <img src={`/res/hero/${props.data.id}.png`} />\r\n      <div className=\"name\">{props.data.name}</div>\r\n    </div>\r\n  );\r\n};\r\n","export const HERO_MAX_LEVEL = 40;\r\n","import React, { SFC } from \"react\";\r\nimport \"./HeroGrid.scss\";\r\nimport { HeroIcon, IHeroIconItem } from \"./HeroIcon\";\r\nimport { IHero } from \"../../interfaces\";\r\n\r\nexport interface HeroGridProps {\r\n  items: (IHeroIconItem & { heroes?: IHero[] })[];\r\n  onClickHero: (item: IHeroIconItem) => void;\r\n}\r\n\r\nexport const HeroGrid: SFC<HeroGridProps> = props => {\r\n  return (\r\n    <div className=\"hero-grid\">\r\n      <div className=\"hero-grid-container\">\r\n        {props.items.map((i, idx) =>\r\n          i.heroes ? (\r\n            <HeroIcon\r\n              key={idx}\r\n              className=\"hero-grid-item\"\r\n              hero={i}\r\n              childHeros={i.heroes}\r\n            />\r\n          ) : (\r\n            <HeroIcon\r\n              key={idx}\r\n              className=\"hero-grid-item\"\r\n              hero={i}\r\n              onClickHero={props.onClickHero}\r\n            />\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { SFC } from \"react\";\r\nimport \"./Rarity.scss\";\r\nimport classNames from \"classnames\";\r\nimport { HeroRarity } from \"../../interfaces\";\r\n\r\nconst ClassNames = {\r\n  [HeroRarity.SP]: \"sp\",\r\n  [HeroRarity.SSR]: \"ssr\",\r\n  [HeroRarity.SR]: \"sr\",\r\n  [HeroRarity.R]: \"r\",\r\n  [HeroRarity.N]: \"n\"\r\n};\r\n\r\nexport const Rarity: SFC<{\r\n  rarity: HeroRarity;\r\n  className?: string;\r\n}> = props => {\r\n  return (\r\n    <i\r\n      className={classNames(\r\n        \"rarity\",\r\n        `rarity-${ClassNames[props.rarity]}`,\r\n        props.className\r\n      )}\r\n    />\r\n  );\r\n};\r\n","import React, { SFC } from \"react\";\r\nimport \"./Rating.scss\";\r\nimport classNames from \"classnames\";\r\nimport { Ratings } from \"../../interfaces\";\r\n\r\nexport interface RatingProps {\r\n  rating: Ratings;\r\n  className?: string;\r\n}\r\n\r\nexport const Rating: SFC<RatingProps> = props => {\r\n  return (\r\n    <i\r\n      className={classNames(\r\n        \"rating\",\r\n        `rating-${props.rating}`,\r\n        props.className\r\n      )}\r\n    />\r\n  );\r\n};\r\n","import React, { SFC } from \"react\";\r\nimport \"./EquipIcon.scss\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const EquipIcon: SFC<{\r\n  suit_id: number;\r\n  pos: number;\r\n  className?: string;\r\n}> = props => {\r\n  const { suit_id, pos, className } = props;\r\n  return (\r\n    <div className={classNames(\"hero-equip-icon\", className)}>\r\n      <div className={classNames(\"icon\", `pos-${pos + 1}`)}>\r\n        <EquipTypeIcon id={suit_id} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const EquipTypeIcon: SFC<{\r\n  id: number;\r\n  size?: number;\r\n  className?: string;\r\n}> = ({ id, size = 80, className }) => {\r\n  return (\r\n    <img\r\n      className={className}\r\n      src={`/res/suit/${id}.png`}\r\n      width={size}\r\n      height={size}\r\n    />\r\n  );\r\n};\r\n","import React, { SFC } from \"react\";\r\nimport \"./EquipDetail.scss\";\r\nimport { IHeroEquip, IHero, IHeroEquipPreset } from \"../../interfaces\";\r\nimport { EquipIcon } from \"./EquipIcon\";\r\nimport { Stars, StarType } from \"../Common/Star\";\r\nimport { formatEquipAttr } from \"../../modules/equip/attr\";\r\nimport { formatTimestamp } from \"../../utils\";\r\nimport { getEquipScoreData } from \"../../modules/equip/score\";\r\n\r\nexport const EquipDetail: SFC<{\r\n  equip: IHeroEquip;\r\n  equippedBy?: IHero;\r\n  presets?: IHeroEquipPreset[];\r\n}> = props => {\r\n  const { equip } = props;\r\n  const [baseAttrName, baseAttrValue] = formatEquipAttr(\r\n    equip.base_attr.type,\r\n    equip.base_attr.value\r\n  );\r\n\r\n  const scoreData = getEquipScoreData(equip);\r\n\r\n  return (\r\n    <div className=\"equip-detail\">\r\n      <header className=\"yyx-layout row\">\r\n        <div className=\"item icon\">\r\n          <EquipIcon suit_id={equip.suit_id} pos={equip.pos} />\r\n        </div>\r\n        <div className=\"item title\">\r\n          {equip.suit_data && equip.suit_data.name}\r\n          {equip.level > 0 && (\r\n            <>\r\n              &nbsp;<span>+{equip.level}</span>\r\n            </>\r\n          )}\r\n          <br />\r\n          <Stars type={StarType.Orange} level={equip.quality} />\r\n        </div>\r\n      </header>\r\n      <div className=\"attrs\">\r\n        <div className=\"yyx-layout row base-attr\">\r\n          <div className=\"name\">{baseAttrName}</div>\r\n          <div className=\"value\">+{baseAttrValue}</div>\r\n        </div>\r\n        {equip.random_attrs.map(attr => {\r\n          const [name, value] = formatEquipAttr(attr.type, attr.value);\r\n          return (\r\n            <div key={attr.type} className=\"yyx-layout row\">\r\n              <div className=\"name\">{name}</div>\r\n              <div className=\"value\">{value}</div>\r\n            </div>\r\n          );\r\n        })}\r\n        {equip.single_attrs.length ? (\r\n          <div className=\"single-attrs bp3-text-muted\">\r\n            {equip.single_attrs.map(attr => {\r\n              const [name, value] = formatEquipAttr(attr.type, attr.value);\r\n              return (\r\n                <div key={name} className=\"yyx-layout row\">\r\n                  <div className=\"name\">固有属性</div>\r\n                  <div className=\"value\">\r\n                    {name} {value}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <div className=\"props\">\r\n        <div className=\"yyx-layout row\">\r\n          <div className=\"name\">ID</div>\r\n          <div className=\"value id\">{equip.id}</div>\r\n        </div>\r\n        {/* <div className=\"yyx-layout row\">\r\n          <a\r\n            href=\"http://nga.178.com/read.php?tid=15853326\"\r\n            target=\"_blank\"\r\n            className=\"name\"\r\n          >\r\n            副属性评分\r\n          </a>\r\n          <div className=\"value\">{scoreData ? scoreData.score : \"无\"}</div>\r\n        </div> */}\r\n        <div className=\"yyx-layout row\">\r\n          <div className=\"name\">获取时间</div>\r\n          <div className=\"value\">\r\n            {formatTimestamp(equip.timestamp_from_id)}\r\n          </div>\r\n        </div>\r\n        {equip.equipped_by && (\r\n          <div className=\"yyx-layout row\">\r\n            <div className=\"name\">装备式神</div>\r\n            <div className=\"value\">\r\n              {equip.equipped_by.nick_name ||\r\n                (equip.equipped_by.data && equip.equipped_by.data.name)}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {equip.included_in_presets && (\r\n          <div className=\"yyx-layout row\">\r\n            <div className=\"name\">所属方案</div>\r\n            <div className=\"value\">\r\n              <ul className=\"preset-list\">\r\n                {equip.included_in_presets.map((p, i) => (\r\n                  <li key={i}>{p.name}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { SFC, useState } from \"react\";\r\nimport \"./EquipItem.scss\";\r\nimport { IHeroEquip } from \"../../interfaces\";\r\nimport classNames from \"classnames\";\r\nimport { Stars, StarType } from \"../Common/Star\";\r\nimport { Popover, Classes } from \"@blueprintjs/core\";\r\nimport { EquipDetail } from \"./EquipDetail\";\r\n\r\nexport const EquipItem: SFC<{\r\n  equip: IHeroEquip;\r\n  className?: string;\r\n  minimal?: boolean;\r\n  onClickEquip?: (equip: IHeroEquip) => void;\r\n}> = props => {\r\n  const { equip, className } = props;\r\n  return (\r\n    <Popover\r\n      content={<EquipDetail equip={equip} />}\r\n      minimal\r\n      popoverClassName={classNames(Classes.POPOVER_CONTENT_SIZING)}\r\n      portalClassName=\"hero-equip-item-popover\"\r\n    >\r\n      <div\r\n        className={classNames(\r\n          \"hero-equip-item\",\r\n          props.onClickEquip && \"clickable\",\r\n          equip.garbage && \"trashed\",\r\n          props.minimal && \"minimal\",\r\n          className\r\n        )}\r\n        onClick={() => props.onClickEquip && props.onClickEquip(equip)}\r\n      >\r\n        {equip.level > 0 && <label>+{equip.level}</label>}\r\n        {equip.equipped_by && <div className=\"equipped\">装备</div>}\r\n        <div className=\"stars\">\r\n          <Stars type={StarType.Orange} level={equip.quality} />\r\n        </div>\r\n        <div className={classNames(\"icon\", `pos-${equip.pos + 1}`)}>\r\n          <img src={`/res/suit/${equip.suit_id}.png`} />\r\n        </div>\r\n      </div>\r\n    </Popover>\r\n  );\r\n};\r\n","import React, { SFC, useState, useEffect } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./EquipSet.scss\";\r\nimport { IHeroEquip } from \"../../interfaces\";\r\nimport { EquipItem } from \"./EquipItem\";\r\nimport { Popover, Classes, PopperModifiers } from \"@blueprintjs/core\";\r\nimport { EquipDetail } from \"./EquipDetail\";\r\n\r\nexport const EquipSet: SFC<{\r\n  className?: string;\r\n  equips: IHeroEquip[];\r\n}> = props => {\r\n  const [items, setItems] = useState<(IHeroEquip | null)[]>([]);\r\n\r\n  useEffect(() => {\r\n    const list = new Array(6).fill(null);\r\n    for (let equip of equips) {\r\n      list[equip.pos] = equip;\r\n    }\r\n    setItems(list);\r\n  }, [props.equips]);\r\n\r\n  const { equips } = props;\r\n\r\n  return (\r\n    <div className=\"equip-set\">\r\n      {items.map(i => {\r\n        return (\r\n          i && (\r\n            <div key={i.id} className={`equip-set-item pos-${i.pos + 1}`}>\r\n              <EquipItem minimal equip={i} />\r\n            </div>\r\n          )\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { ReactElement, SFC } from \"react\";\r\nimport { IYyxState } from \"../../store\";\r\nimport { IHeroEquip } from \"../../interfaces\";\r\nimport { EquipSelectors } from \"../../modules/equip\";\r\n\r\ninterface RenderProps {\r\n  equips: IHeroEquip[];\r\n  render: (equips: IHeroEquip[]) => ReactElement | null;\r\n}\r\n\r\nconst Render: SFC<RenderProps> = (props: RenderProps) => {\r\n  return props.render(props.equips);\r\n};\r\n\r\nexport interface EquipsProps {\r\n  ids: string[];\r\n  render: (equips: IHeroEquip[]) => ReactElement | null;\r\n}\r\n\r\nexport const Equips = connect((state: IYyxState, props: EquipsProps) => {\r\n  const maps = EquipSelectors.selectMaps(state);\r\n  return {\r\n    equips:\r\n      maps && maps.id\r\n        ? (props.ids\r\n            .map(id => maps.id.get(id))\r\n            .filter(v => !!v) as IHeroEquip[])\r\n        : [],\r\n    render: props.render\r\n  };\r\n})(Render);\r\n","import React, { SFC } from \"react\";\r\nimport \"./HeroDetail.scss\";\r\nimport {\r\n  IHero,\r\n  IHeroAttrRating,\r\n  IHeroAttrs,\r\n  IHeroAttr\r\n} from \"../../interfaces\";\r\nimport { HeroIcon } from \"./HeroIcon\";\r\nimport { Rarity } from \"../Common/Rarity\";\r\nimport classNames from \"classnames\";\r\nimport { Rating } from \"../Common/Rating\";\r\nimport { AttrValueType, formatAttrValue, formatTimestamp } from \"../../utils\";\r\nimport { Divider } from \"@blueprintjs/core\";\r\nimport { EquipSet } from \"../Equip/EquipSet\";\r\nimport { Equips } from \"../Equip/Equips\";\r\n\r\nconst renderIconName = (hero: IHero) => (\r\n  <div className=\"icon-name yyx-layout row\">\r\n    <div className=\"icon item\">\r\n      <HeroIcon hero={hero} />\r\n    </div>\r\n    <div className=\"name item yyx-layout column\">\r\n      <div className=\"yyx-layout row yyx-space-v\">\r\n        <Rarity rarity={hero.rarity} className=\"item\" />\r\n        <div className=\"item hero\" style={{ flex: \"0 0 auto\" }}>\r\n          {hero.data && hero.data.name}\r\n        </div>\r\n      </div>\r\n      {hero.nick_name && <div>昵称: {hero.nick_name}</div>}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst attrs: Array<[string, string, string, AttrValueType]> = [\r\n  [\"attack\", \"攻击\", \"attack\", AttrValueType.Float],\r\n  [\"max_hp\", \"生命\", \"max-hp\", AttrValueType.Float],\r\n  [\"defense\", \"防御\", \"defense\", AttrValueType.Float],\r\n  [\"speed\", \"速度\", \"speed\", AttrValueType.Float],\r\n  [\"crit_rate\", \"暴击\", \"crit-rate\", AttrValueType.Percentage]\r\n];\r\n\r\nconst renderAttrs = (hero: IHero, ratings: IHeroAttrRating) => (\r\n  <div className=\"attrs yyx-layout column\">\r\n    {attrs.map(([key, label, className, type]) => {\r\n      const attr = hero.attrs[key as keyof IHeroAttrs] as IHeroAttr;\r\n      return (\r\n        <div key={key} className=\"yyx-layout row\">\r\n          <i className={classNames(\"attr-icon item yyx-space-h\", className)} />\r\n          <Rating\r\n            className=\"item rating\"\r\n            rating={ratings[key as keyof IHeroAttrRating]}\r\n          />\r\n          <span className=\"item label\">{label}</span>\r\n          <span className=\"item attr-value\">\r\n            {formatAttrValue(attr.base, type)}\r\n            {attr.value > attr.base && (\r\n              <span className=\"plus-value\">\r\n                +{formatAttrValue(attr.value - attr.base, type)}\r\n              </span>\r\n            )}\r\n          </span>\r\n        </div>\r\n      );\r\n    })}\r\n    <div className=\"yyx-layout row\">\r\n      <span className=\"item label\">暴击伤害</span>\r\n      <span className=\"item attr-value\">\r\n        {formatAttrValue(\r\n          1 + hero.attrs.crit_power.value,\r\n          AttrValueType.Percentage\r\n        )}\r\n      </span>\r\n    </div>\r\n    <div className=\"yyx-layout row\">\r\n      <span className=\"item label\">效果命中</span>\r\n      <span className=\"item attr-value\">\r\n        {formatAttrValue(\r\n          1 + hero.attrs.effect_hit_rate - 1,\r\n          AttrValueType.Percentage\r\n        )}\r\n      </span>\r\n    </div>\r\n    <div className=\"yyx-layout row yyx-space-v\">\r\n      <span className=\"item label\">效果抵抗</span>\r\n      <span className=\"item attr-value\">\r\n        {formatAttrValue(\r\n          1 + hero.attrs.effect_resist_rate - 1,\r\n          AttrValueType.Percentage\r\n        )}\r\n      </span>\r\n    </div>\r\n    <div className=\"yyx-layout row\">\r\n      <span className=\"item label\">攻击 x 暴伤</span>\r\n      <span className=\"item attr-value\">\r\n        {formatAttrValue(\r\n          hero.attrs.attack.value * (1 + hero.attrs.crit_power.value)\r\n        )}\r\n      </span>\r\n    </div>\r\n    <div className=\"yyx-layout row\">\r\n      <span className=\"item label\">生命 x 暴伤</span>\r\n      <span className=\"item attr-value\">\r\n        {formatAttrValue(\r\n          hero.attrs.max_hp.value * (1 + hero.attrs.crit_power.value)\r\n        )}\r\n      </span>\r\n    </div>\r\n    <div className=\"yyx-layout row\">\r\n      <span className=\"item label\">获取时间</span>\r\n      <span className=\"item attr-value\">\r\n        {formatTimestamp(hero.timestamp_from_id)}\r\n      </span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport const HeroDetail: SFC<{\r\n  hero: IHero;\r\n}> = props => {\r\n  const { hero } = props;\r\n\r\n  if (!hero.data) {\r\n    return null;\r\n  }\r\n\r\n  const ratings =\r\n    hero.awake > 0\r\n      ? hero.data.attr_rating.awake\r\n      : hero.data.attr_rating.unawake;\r\n\r\n  return (\r\n    <div className=\"hero-detail yyx-layout row\">\r\n      <div className=\"item\">\r\n        {renderIconName(hero)}\r\n        {renderAttrs(hero, ratings)}\r\n      </div>\r\n      <div className=\"item equips\">\r\n        <Equips\r\n          ids={hero.equips}\r\n          render={equips => <EquipSet equips={equips} />}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { SFC, useRef } from \"react\";\r\nimport \"./HeroDetailOverlay.scss\";\r\nimport { IHero } from \"../../interfaces\";\r\nimport { Overlay } from \"@blueprintjs/core\";\r\nimport { HeroDetail } from \"./HeroDetail\";\r\nimport { getHeroData } from \"../../modules/hero/data\";\r\n\r\nexport interface HeroDetailOverlayProps {\r\n  hero: IHero | null;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const HeroDetailOverlay: SFC<HeroDetailOverlayProps> = props => {\r\n  const contentEl = useRef<HTMLDivElement>(null);\r\n\r\n  return (\r\n    <Overlay\r\n      className=\"hero-detail-overlay\"\r\n      backdropClassName=\"hero-detail-overlay-backdrop\"\r\n      isOpen={!!props.hero}\r\n      onClose={() => {\r\n        if (contentEl.current) {\r\n          contentEl.current.classList.add(\"closing\");\r\n        }\r\n        props.onClose();\r\n      }}\r\n    >\r\n      {props.hero && (\r\n        <div ref={contentEl} className=\"content\">\r\n          <div style={{ flex: \"0 0 auto\" }}>\r\n            <HeroDetail hero={props.hero} />\r\n          </div>\r\n          {/* <pre\r\n            style={{ height: 400, maxWidth: 600, overflow: \"auto\", flex: \"1\" }}\r\n          >\r\n            {JSON.stringify(props.hero, null, \"  \")}\r\n          </pre> */}\r\n        </div>\r\n      )}\r\n    </Overlay>\r\n  );\r\n};\r\n","// https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n// Our hook\r\nexport function useDebounce<T>(value: T, delay: number) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    // Set debouncedValue to value (passed in) after the specified delay\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    // Return a cleanup function that will be called every time ...\r\n    // ... useEffect is re-called. useEffect will only be re-called ...\r\n    // ... if value changes (see the inputs array below).\r\n    // This is how we prevent debouncedValue from changing if value is ...\r\n    // ... changed within the delay period. Timeout gets cleared and restarted.\r\n    // To put it in context, if the user is typing within our app's ...\r\n    // ... search box, we don't want the debouncedValue to update until ...\r\n    // ... they've stopped typing for more than 500ms.\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, // Only re-call effect if value changes\r\n  // You could also add the \"delay\" var to inputs array if you ...\r\n  // ... need to be able to change that dynamically.\r\n  [value]);\r\n\r\n  return debouncedValue;\r\n}\r\n","import React, { SFC, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { IHero, HeroRarity } from \"../../interfaces\";\r\nimport { IYyxState, IDispatch } from \"../../store\";\r\nimport { HeroGrid } from \"./HeroGrid\";\r\nimport { HeroDetailOverlay } from \"./HeroDetailOverlay\";\r\nimport {\r\n  HeroSelectors,\r\n  RarityOption,\r\n  IHeroFolded,\r\n  IHeroListOptions,\r\n  HeroActions,\r\n  ActionType\r\n} from \"../../modules/hero\";\r\nimport { Card, Switch, Button, MenuItem, InputGroup } from \"@blueprintjs/core\";\r\nimport { Select, ItemRenderer } from \"@blueprintjs/select\";\r\nimport { Rarity } from \"../Common/Rarity\";\r\nimport { useDebounce } from \"../../hooks/debounce\";\r\n\r\nconst RaritySelect = Select.ofType<RarityOption>();\r\nconst RarityOptions = [\r\n  \"*\",\r\n  HeroRarity.SP,\r\n  HeroRarity.SSR,\r\n  HeroRarity.SR,\r\n  HeroRarity.R,\r\n  HeroRarity.N,\r\n  \"M\"\r\n] as Array<RarityOption>;\r\n\r\nconst getRarityElem = (option: RarityOption) => {\r\n  let elem;\r\n  if (option === \"M\") {\r\n    elem = \"素材\";\r\n  } else if (option === \"*\") {\r\n    elem = \"全部\";\r\n  } else {\r\n    elem = <Rarity rarity={option} />;\r\n  }\r\n  return elem;\r\n};\r\n\r\nconst renderRarityOption: ItemRenderer<RarityOption> = (option, params) => {\r\n  let text = getRarityElem(option);\r\n  return (\r\n    <MenuItem\r\n      key={option}\r\n      text={text}\r\n      onClick={params.handleClick}\r\n      active={params.modifiers.active}\r\n    />\r\n  );\r\n};\r\n\r\nconst StarSelect = Select.ofType<number>();\r\nconst StarOptions = [0, 6, 5, 4, 3, 2];\r\nconst renderStarOption: ItemRenderer<number> = (option, params) => {\r\n  let text;\r\n  if (option === 0) {\r\n    text = \"全部\";\r\n  } else {\r\n    text = `${option}星`;\r\n  }\r\n  return (\r\n    <MenuItem\r\n      key={option}\r\n      text={text}\r\n      onClick={params.handleClick}\r\n      active={params.modifiers.active}\r\n    />\r\n  );\r\n};\r\n\r\nconst Render: SFC<{\r\n  heroes: (IHero | IHeroFolded)[] | null;\r\n  count: number;\r\n  mapById: Map<string, IHero> | null;\r\n  dispatch: IDispatch;\r\n}> = props => {\r\n  const { dispatch } = props;\r\n\r\n  const [activeHero, setActiveHero] = useState<IHero | null>(null);\r\n  const [fold, setFold] = useState(true);\r\n  const [rarity, setRarity] = useState<RarityOption>(\"*\");\r\n  const [star, setStar] = useState(0);\r\n  const [term, setTerm] = useState(\"\");\r\n  const debouncedTerm = useDebounce(term, 300);\r\n\r\n  // useEffect(() => {\r\n  //   if (props.heroes) {\r\n  //     setActiveHero(\r\n  //       (props.heroes.find(\r\n  //         i => \"id\" in i && i.id === \"5c3b92123938a33e4fa654e1\"\r\n  //       ) as IHero) || null\r\n  //     );\r\n  //   }\r\n  // }, [props.heroes]);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      HeroActions.setListOptions({\r\n        fold: fold && !debouncedTerm,\r\n        rarity,\r\n        star,\r\n        term: debouncedTerm\r\n      })\r\n    );\r\n  }, [fold, rarity, star, debouncedTerm]);\r\n\r\n  if (!props.heroes) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HeroDetailOverlay\r\n        hero={activeHero}\r\n        onClose={() => setActiveHero(null)}\r\n      />\r\n      <Card className=\"yyx-space-v yyx-layout wrap row yyx-options\">\r\n        <div className=\"item\">\r\n          <InputGroup\r\n            leftIcon=\"filter\"\r\n            placeholder=\"搜索式神名称/昵称...\"\r\n            value={term}\r\n            onChange={(e: any) => setTerm(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"item\">\r\n          <RaritySelect\r\n            filterable={false}\r\n            items={RarityOptions}\r\n            itemRenderer={renderRarityOption}\r\n            onItemSelect={item => {\r\n              setRarity(item);\r\n            }}\r\n          >\r\n            <Button>\r\n              <div className=\"yyx-layout row\">\r\n                稀有度: {getRarityElem(rarity)}\r\n              </div>\r\n            </Button>\r\n          </RaritySelect>\r\n        </div>\r\n        <div className=\"item\">\r\n          <StarSelect\r\n            filterable={false}\r\n            items={StarOptions}\r\n            itemRenderer={renderStarOption}\r\n            onItemSelect={item => setStar(item)}\r\n          >\r\n            <Button>星级: {star ? `${star}星` : \"全部\"}</Button>\r\n          </StarSelect>\r\n        </div>\r\n        <div style={{ flex: 1 }}>数量: {props.count}</div>\r\n        <div className=\"item\">\r\n          <Switch\r\n            checked={fold}\r\n            onChange={() => setFold(!fold)}\r\n            className=\"item\"\r\n            label=\"折叠\"\r\n          />\r\n        </div>\r\n      </Card>\r\n      <HeroGrid\r\n        items={props.heroes}\r\n        onClickHero={item => {\r\n          item.id &&\r\n            setActiveHero(\r\n              (props.mapById && props.mapById.get(item.id)) || null\r\n            );\r\n          console.log(item);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const HeroList = connect((state: IYyxState) => ({\r\n  heroes: HeroSelectors.selectList(state),\r\n  count: HeroSelectors.selectCount(state),\r\n  mapById: HeroSelectors.selectMapById(state)\r\n}))(Render);\r\n","import { createSelector } from \"reselect\";\r\nimport { IHeroBookShard } from \"../../interfaces\";\r\nimport { sortDesc, combineSorters } from \"../../utils\";\r\nimport { getHeroData, RarityRank } from \"../hero/data\";\r\nimport { SnapshotSelectors } from \"../snapshot/selectors\";\r\n\r\nconst selectAll = createSelector(\r\n  SnapshotSelectors.currentSnapshot,\r\n  snapshot => {\r\n    if (!snapshot) {\r\n      return null;\r\n    }\r\n    return snapshot.data.hero_book_shards.map(i => {\r\n      i.hero_data = getHeroData(i.hero_id);\r\n      return i;\r\n    });\r\n  }\r\n);\r\n\r\nconst getRarityRank = (s: IHeroBookShard) =>\r\n  s.hero_data ? RarityRank[s.hero_data.rarity] : 999;\r\n\r\nconst defaultSorter = combineSorters<IHeroBookShard>(\r\n  sortDesc((a, b) => getRarityRank(a) - getRarityRank(b)),\r\n  sortDesc((a, b) => a.hero_id - b.hero_id)\r\n);\r\n\r\nconst selectSorted = createSelector(\r\n  selectAll,\r\n  items => {\r\n    if (!items) {\r\n      return null;\r\n    }\r\n\r\n    return items\r\n      .slice()\r\n      .filter(i => i.shards > 0 || i.books > 0)\r\n      .sort(defaultSorter);\r\n  }\r\n);\r\n\r\nexport const ShardSelectors = {\r\n  selectSorted\r\n};\r\n","import React, { SFC, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { IYyxState } from \"../../../store\";\r\nimport { ShardSelectors } from \"../../../modules/shard\";\r\nimport { IHeroBookShard } from \"../../../interfaces\";\r\nimport { Rarity } from \"../../Common/Rarity\";\r\n\r\nconst Render: SFC<{\r\n  items: IHeroBookShard[] | null;\r\n}> = props => {\r\n  if (!props.items) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <table className=\"bp3-html-table bp3-html-table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>式神</th>\r\n            <th>拥有碎片</th>\r\n            <th>所需碎片</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.items.map(\r\n            i =>\r\n              i.hero_data && (\r\n                <tr key={i.hero_id}>\r\n                  <td\r\n                    className=\"yyx-layout row\"\r\n                    style={{ justifyContent: \"flex-start\" }}\r\n                  >\r\n                    <Rarity\r\n                      rarity={i.hero_data.rarity}\r\n                      className=\"yyx-space-h\"\r\n                    />\r\n                    {i.hero_data.name}\r\n                  </td>\r\n                  <td>{i.shards + i.books * i.book_max_shards}</td>\r\n                  <td>{i.book_max_shards}</td>\r\n                </tr>\r\n              )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const ShardPage = connect((state: IYyxState) => ({\r\n  items: ShardSelectors.selectSorted(state)\r\n}))(Render);\r\n","import SKILL_LEVEL_DATA from \"./SKILL_LEVEL_DATA.json\";\r\nimport { number } from \"prop-types\";\r\nimport { computeOnce } from \"../../utils\";\r\n\r\nexport const getSkillMaxLevelMap = computeOnce(() => {\r\n  return SKILL_LEVEL_DATA.reduce((m, i) => {\r\n    m.set(i[0], i[2]);\r\n    return m;\r\n  }, new Map<number, number>());\r\n});\r\n","import React, { SFC, useState } from \"react\";\r\nimport \"./SkillPage.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { IYyxState } from \"../../../store\";\r\nimport {\r\n  IHeroBookShard,\r\n  IHeroData,\r\n  HeroRarity,\r\n  IHero\r\n} from \"../../../interfaces\";\r\nimport { ALL_HERO_DATA, RarityRank } from \"../../../modules/hero/data\";\r\nimport { HeroDataIcon } from \"../HeroIcon\";\r\nimport { computeOnce } from \"../../../utils\";\r\nimport { getSkillMaxLevelMap } from \"../../../modules/skill/data\";\r\nimport { HeroSelectors } from \"../../../modules/hero\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\n\r\ninterface Item {\r\n  data: IHeroData;\r\n  all_skills: number[];\r\n  skill_max_levels: number[];\r\n}\r\n\r\nconst getDataList = computeOnce<Item[]>(() => {\r\n  const SkillMaxLevelMap = getSkillMaxLevelMap();\r\n  return ALL_HERO_DATA.filter(\r\n    i => RarityRank[i.rarity] >= RarityRank[HeroRarity.SR]\r\n  )\r\n    .sort((a, b) => -(RarityRank[a.rarity] - RarityRank[b.rarity]))\r\n    .map(data => {\r\n      const all_skills = [\r\n        ...data.skills,\r\n        ...(data.awake_skill ? [data.awake_skill] : [])\r\n      ].sort();\r\n      return {\r\n        data,\r\n        all_skills,\r\n        skill_max_levels: all_skills.map(s => SkillMaxLevelMap.get(s) || 0)\r\n      };\r\n    });\r\n});\r\n\r\nconst formatUpgrade = (hero: IHero, item: Item) => {\r\n  let done = true;\r\n  const numbers = item.all_skills.map((s, i) => {\r\n    const skill = hero.skills.find(skill => skill.id === s);\r\n    const max = item.skill_max_levels[i];\r\n    const level = skill ? skill.level : 1;\r\n    const color =\r\n      level === max ? \"#0A6640\" : level === 1 ? \"#BFCCD6\" : \"#FFC940\";\r\n    done = done && level === max;\r\n    return (\r\n      <span key={s} style={{ color }}>\r\n        {level}\r\n      </span>\r\n    );\r\n  });\r\n  return <div className=\"levels\">{numbers}</div>;\r\n};\r\n\r\nconst Render: SFC<{\r\n  heroesMap: Map<number, IHero[]> | null;\r\n}> = props => {\r\n  if (!props.heroesMap) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <table className=\"bp3-html-table bp3-html-table-striped skill-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>式神</th>\r\n            <th>技能最大等级</th>\r\n            <th>升级</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {getDataList().map(i => {\r\n            const heroes =\r\n              (props.heroesMap && props.heroesMap.get(i.data.id)) || [];\r\n            return (\r\n              <tr key={i.data.id}>\r\n                <td>\r\n                  <HeroDataIcon data={i.data} />\r\n                </td>\r\n                <td>\r\n                  <div className=\"levels big\">\r\n                    {i.skill_max_levels.map((l, i) => (\r\n                      <span key={i}>{l}</span>\r\n                    ))}\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  {heroes.length ? (\r\n                    <ul className=\"bp3-list bp3-list-unstyled\">\r\n                      {heroes.map(h => (\r\n                        <li key={h.id}>{formatUpgrade(h, i)}</li>\r\n                      ))}\r\n                    </ul>\r\n                  ) : (\r\n                    <span className=\"bp3-text-muted\">未获取</span>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const SkillPage = connect((state: IYyxState) => ({\r\n  heroesMap: HeroSelectors.selectMapByHeroId(state)\r\n}))(Render);\r\n","import { IStoryTaskData, IHeroStoryTaskData } from \"../../interfaces\";\r\nimport { computeOnce } from \"../../utils\";\r\n\r\nexport const DATA: IHeroStoryTaskData[] = require(\"./STORY_TASK_DATA.json\");\r\n\r\nexport const getStoryTaskMap = computeOnce(() => {\r\n  return DATA.reduce((m, i) => {\r\n    m.set(i.hero_id, i.tasks.slice(0, 3));\r\n    return m;\r\n  }, new Map<number, IStoryTaskData[]>());\r\n});\r\n","import { createSelector } from \"reselect\";\r\nimport { SnapshotSelectors } from \"../snapshot/selectors\";\r\n\r\nconst selectProgressMap = createSelector(\r\n  SnapshotSelectors.currentSnapshot,\r\n  s => {\r\n    if (!s) {\r\n      return null;\r\n    }\r\n    return s.data.story_tasks.reduce((m, i) => {\r\n      m.set(i.id, [i.progress.value, i.progress.max_value]);\r\n      return m;\r\n    }, new Map<number, [number, number]>());\r\n  }\r\n);\r\n\r\nexport const StorySelectors = {\r\n  selectProgressMap\r\n};\r\n","import React, { SFC, useState } from \"react\";\r\nimport \"./StoryPage.scss\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { IYyxState } from \"../../../store\";\r\nimport {\r\n  IHeroBookShard,\r\n  IHeroData,\r\n  HeroRarity,\r\n  IHero,\r\n  IStoryTask,\r\n  IStoryTaskData\r\n} from \"../../../interfaces\";\r\nimport { ALL_HERO_DATA, RarityRank } from \"../../../modules/hero/data\";\r\nimport { HeroDataIcon } from \"../HeroIcon\";\r\nimport { computeOnce } from \"../../../utils\";\r\nimport { HeroSelectors } from \"../../../modules/hero\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport { getStoryTaskMap } from \"../../../modules/story/data\";\r\nimport { StorySelectors } from \"../../../modules/story\";\r\n\r\ninterface Item {\r\n  data: IHeroData;\r\n  tasks: IStoryTaskData[];\r\n}\r\n\r\nconst getDataList = computeOnce<Item[]>(() => {\r\n  const TaskMap = getStoryTaskMap();\r\n  return ALL_HERO_DATA.sort(\r\n    (a, b) => -(RarityRank[a.rarity] - RarityRank[b.rarity])\r\n  )\r\n    .map(data => {\r\n      return {\r\n        data,\r\n        tasks: TaskMap.get(data.id) || []\r\n      };\r\n    })\r\n    .filter(i => i.tasks.length > 0);\r\n});\r\n\r\nconst formatProgress = (v: number, max: number) => {\r\n  const color = v === max ? \"#0A6640\" : v === 0 ? \"#BFCCD6\" : \"#FFC940\";\r\n  return (\r\n    <strong style={{ color }}>\r\n      {v} / {max}\r\n    </strong>\r\n  );\r\n};\r\n\r\nexport const StoryPage = () => {\r\n  const progressMap = useSelector(StorySelectors.selectProgressMap);\r\n  const items = React.useMemo(() => {\r\n    if (!progressMap) {\r\n      return null;\r\n    }\r\n    return getDataList().map(item => {\r\n      const taskStatus = item.tasks.map(t => {\r\n        const [v, max_v] = progressMap.get(t.id) || [0, t.cond_var];\r\n        return {\r\n          id: t.id,\r\n          v,\r\n          max_v\r\n        };\r\n      });\r\n      return {\r\n        ...item,\r\n        taskTotal: taskStatus.length,\r\n        taskDone: taskStatus.filter(s => s.v >= s.max_v).length,\r\n        vTotal: taskStatus.map(s => s.max_v).reduce((t, v) => t + v, 0),\r\n        vDone: taskStatus.map(s => s.v).reduce((t, v) => t + v, 0)\r\n      };\r\n    });\r\n  }, [progressMap]);\r\n\r\n  if (!progressMap || !items) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <table className=\"bp3-html-table bp3-html-table-striped story-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>式神</th>\r\n            <th>传记</th>\r\n            <th>完成度</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {items.map(i => {\r\n            return (\r\n              <tr key={i.data.id}>\r\n                <td>\r\n                  <HeroDataIcon data={i.data} />\r\n                </td>\r\n                <td>\r\n                  <ul className=\"task-list\">\r\n                    {i.tasks.map((t, i) => {\r\n                      const [v, max] = progressMap.get(t.id);\r\n                      return (\r\n                        <li key={i}>\r\n                          {t.content} ({formatProgress(v, max)})\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </td>\r\n                <td>\r\n                  {formatProgress(i.taskDone, i.taskTotal)}\r\n                  <br />\r\n                  <small>{formatProgress(i.vDone, i.vTotal)}</small>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n","import React, { SFC } from \"react\";\r\nimport { SubNav, SubNavLink } from \"../Common/SubNav\";\r\nimport { HeroList } from \"./HeroList\";\r\nimport { Route } from \"react-router\";\r\nimport { ShardPage } from \"./Shard/ShardPage\";\r\nimport { SkillPage } from \"./Skill/SkillPage\";\r\nimport { StoryPage } from \"./Story/StoryPage\";\r\nimport { useAccountPath } from \"../../modules/account/hooks\";\r\n\r\nconst SubPages: (SubNavLink & { component: any })[] = [\r\n  {\r\n    label: \"式神列表\",\r\n    to: \"/hero\",\r\n    component: HeroList\r\n  },\r\n  {\r\n    label: \"碎片\",\r\n    to: \"/hero/shard\",\r\n    component: ShardPage\r\n  },\r\n  {\r\n    label: \"技能升级\",\r\n    to: \"/hero/skill\",\r\n    component: SkillPage\r\n  },\r\n  {\r\n    label: \"传记解锁\",\r\n    to: \"/hero/story\",\r\n    component: StoryPage\r\n  }\r\n];\r\n\r\nexport const HeroPage: SFC = props => {\r\n  const accountPath = useAccountPath();\r\n  return (\r\n    <div className=\"yyx-full-height yyx-layout row\">\r\n      <div className=\"item yyx-nav-left\">\r\n        <SubNav links={SubPages} />\r\n      </div>\r\n      <div className=\"item yyx-content yyx-content-scroll\">\r\n        <div className=\"yyx-padding\">\r\n          {SubPages.map(page => (\r\n            <Route\r\n              key={page.to}\r\n              path={`${accountPath}${page.to}`}\r\n              exact={page.to === \"/hero\"}\r\n              component={page.component}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { SFC } from \"react\";\r\nimport \"./EquipGrid.scss\";\r\nimport { IHeroEquip } from \"../../interfaces\";\r\nimport { EquipItem } from \"./EquipItem\";\r\n\r\nexport interface EquipGridProps {\r\n  items: IHeroEquip[];\r\n  onClickEquip?: (equip: IHeroEquip) => void;\r\n}\r\n\r\nexport const EquipGrid: SFC<EquipGridProps> = props => {\r\n  return (\r\n    <div className=\"hero-equip-grid\">\r\n      <div className=\"hero-equip-grid-container\">\r\n        {props.items.map(i => (\r\n          <EquipItem\r\n            key={i.id}\r\n            className=\"hero-equip-grid-item\"\r\n            equip={i}\r\n            onClickEquip={props.onClickEquip}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { SFC, useState, useEffect } from \"react\";\r\nimport \"./EquipTypeSelector.scss\";\r\n\r\nimport {\r\n  Button,\r\n  MenuItem,\r\n  Dialog,\r\n  Classes,\r\n  Intent,\r\n  Tag,\r\n  Icon\r\n} from \"@blueprintjs/core\";\r\nimport { IHeroEquipSuitData } from \"../../interfaces\";\r\nimport { ALL_SUIT_DATA, getEquipSuiteData } from \"../../modules/equip/data\";\r\nimport { EquipTypeIcon } from \"./EquipIcon\";\r\nimport { getEquipSuitAttrName } from \"../../modules/equip/attr\";\r\n\r\nexport interface EquipTypeSelectorProps {\r\n  value?: IHeroEquipSuitData;\r\n  onChange?: (suitId: number) => void;\r\n}\r\n\r\nexport const EquipTypeSelector: SFC<EquipTypeSelectorProps> = props => {\r\n  return null;\r\n};\r\n\r\nexport interface EquipTypeMultiSelectorProps {\r\n  className?: string;\r\n  value?: number[];\r\n  onChange?: (suitIds: number[]) => void;\r\n}\r\n\r\n// const renderEquipType: ItemRenderer<IHeroEquipSuitData> = (option, params) => {\r\n//   return (\r\n//     <MenuItem\r\n//       key={option.id}\r\n//       text={option.name}\r\n//       onClick={params.handleClick}\r\n//       active={params.modifiers.active}\r\n//       labelElement={<EquipTypeIcon id={option.id} />}\r\n//     />\r\n//   );\r\n// };\r\n\r\nconst renderEquipTypeTag = (i: IHeroEquipSuitData) => {\r\n  return null;\r\n};\r\n\r\nconst EquipTypeDialog: SFC<{\r\n  multiple: boolean;\r\n  selected: number[];\r\n  setIdSelected: (id: number, selected: boolean) => void;\r\n  isOpen: boolean;\r\n  onOk: () => void;\r\n  onCancel: () => void;\r\n}> = props => {\r\n  return (\r\n    <Dialog isOpen={props.isOpen} onClose={() => props.onCancel()}>\r\n      <div className={Classes.DIALOG_BODY}>\r\n        <ul className=\"equip-type-dialog-type-list\">\r\n          {ALL_SUIT_DATA.map(i => {\r\n            const selected = props.selected.includes(i.id);\r\n            return (\r\n              <li\r\n                className={selected ? \"selected\" : \"\"}\r\n                key={i.id}\r\n                onClick={() => props.setIdSelected(i.id, !selected)}\r\n              >\r\n                <div className=\"content\">\r\n                  <EquipTypeIcon id={i.id} size={50} />\r\n                  <div className=\"description\">\r\n                    <span className=\"name\">{i.name}</span>\r\n                    <br />\r\n                    <Tag>{getEquipSuitAttrName(i)}</Tag>\r\n                  </div>\r\n                </div>\r\n                <div className=\"tick\">\r\n                  <Icon icon=\"small-tick\" />\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <div className={Classes.DIALOG_FOOTER}>\r\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n          <Button onClick={() => props.onCancel()}>取消</Button>\r\n          <Button intent={Intent.PRIMARY} onClick={() => props.onOk()}>\r\n            确定\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst EmptyList: number[] = [];\r\n\r\nconst renderTypeList = (ids: number[]) => {\r\n  return (\r\n    <ul className=\"bp3-list-unstyled icon-list\">\r\n      {ids.map(id => {\r\n        return (\r\n          <li key={id}>\r\n            <EquipTypeIcon id={id} size={24} />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport const EquipTypeMultiSelector: SFC<\r\n  EquipTypeMultiSelectorProps\r\n> = props => {\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [dialogSelected, setDialogSelected] = useState(EmptyList);\r\n  const [selected, setSelected] = useState(props.value || EmptyList);\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      <EquipTypeDialog\r\n        isOpen={dialogOpen}\r\n        onCancel={() => {\r\n          setDialogOpen(false);\r\n        }}\r\n        onOk={() => {\r\n          setDialogOpen(false);\r\n          setSelected(dialogSelected);\r\n          if (props.onChange) {\r\n            props.onChange(dialogSelected);\r\n          }\r\n        }}\r\n        multiple\r\n        selected={dialogSelected}\r\n        setIdSelected={(id, idSelected) => {\r\n          setDialogSelected(\r\n            idSelected\r\n              ? [...dialogSelected.filter(v => v !== id), id]\r\n              : dialogSelected.filter(v => v !== id)\r\n          );\r\n        }}\r\n      />\r\n      <Button\r\n        className=\"equip-type-selector-button\"\r\n        onClick={() => {\r\n          setDialogSelected(selected);\r\n          setDialogOpen(true);\r\n        }}\r\n      >\r\n        <div className=\"yyx-layout row wrap\">\r\n          {selected.length ? renderTypeList(selected) : <span>全部</span>}\r\n        </div>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { SFC, useState, useEffect } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./EquipPosition.scss\";\r\n\r\nconst Labels = [\"\", \"壹\", \"贰\", \"叁\", \"肆\", \"伍\", \"陆\"];\r\n\r\nexport const EquipPosition: SFC<{\r\n  className?: string;\r\n  labelElement?: (pos: number) => React.ReactNode;\r\n  position: number;\r\n  active?: boolean;\r\n  onClick?: (pos: number) => void;\r\n}> = props => {\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        \"equip-position\",\r\n        `pos-${props.position}`,\r\n        props.onClick && \"clickable\",\r\n        props.active && \"active\",\r\n        props.className\r\n      )}\r\n      onClick={() => props.onClick && props.onClick(props.position)}\r\n    >\r\n      <div className=\"content\">\r\n        {props.labelElement ? (\r\n          props.labelElement(props.position)\r\n        ) : (\r\n          <div className=\"equip-position-text\">{Labels[props.position]}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { HttpClient } from \"../http\";\r\n\r\nexport function exportJson(filename: string, value: any) {\r\n  return HttpClient.post<string>(\"/api/export/json\", value, {\r\n    params: {\r\n      filename\r\n    }\r\n  }).then(res => res.data);\r\n}\r\n","import {\r\n  IHeroEquip,\r\n  HeroEquipAttrType,\r\n  ISnapshot,\r\n  IHeroEquipSuitData\r\n} from \"../../interfaces\";\r\nconst DATA = require(\"./EQUIP_SUIT_DATA.json\");\r\n\r\nexport const ALL_SUIT_DATA: IHeroEquipSuitData[] = DATA;\r\nexport interface Ocr2Item {\r\n  御魂ID: string;\r\n  御魂等级: number;\r\n  御魂星级: number;\r\n  御魂类型: string;\r\n  位置: number;\r\n  生命?: number;\r\n  防御?: number;\r\n  攻击?: number;\r\n  生命加成?: number;\r\n  防御加成?: number;\r\n  攻击加成?: number;\r\n  速度?: number;\r\n  暴击?: number;\r\n  暴击伤害?: number;\r\n  效果命中?: number;\r\n  效果抵抗?: number;\r\n}\r\n\r\nconst AttrNameMap = {\r\n  Hp: \"生命\",\r\n  Defense: \"防御\",\r\n  Attack: \"攻击\",\r\n  HpRate: \"生命加成\",\r\n  DefenseRate: \"防御加成\",\r\n  AttackRate: \"攻击加成\",\r\n  Speed: \"速度\",\r\n  CritRate: \"暴击\",\r\n  CritPower: \"暴击伤害\",\r\n  EffectHitRate: \"效果命中\",\r\n  EffectResistRate: \"效果抵抗\"\r\n};\r\n\r\nconst SuitMap: { [id: string]: string } = ALL_SUIT_DATA.reduce(\r\n  (map, i) => {\r\n    map[String(i.id)] = i.name;\r\n    return map;\r\n  },\r\n  {} as { [id: string]: string }\r\n);\r\n\r\nexport function equipsToOcr2(\r\n  equips: IHeroEquip[]\r\n): (\"yuhun_ocr2.0\" | Ocr2Item)[] {\r\n  const items = equips.map(equip => {\r\n    const item = {\r\n      御魂ID: equip.id,\r\n      御魂等级: equip.level,\r\n      御魂星级: equip.quality,\r\n      御魂类型: SuitMap[String(equip.suit_id)],\r\n      位置: equip.pos + 1\r\n    };\r\n    const attrMap: { [key: string]: number } = {};\r\n    for (let attr of [\r\n      equip.base_attr,\r\n      ...equip.random_attrs,\r\n      ...equip.single_attrs\r\n    ]) {\r\n      const v = attrMap[attr.type] || 0;\r\n      attrMap[attr.type] = v + attr.value;\r\n    }\r\n    Object.keys(attrMap).forEach(k => {\r\n      (item as any)[(AttrNameMap as any)[k] as any] = attrMap[k];\r\n    });\r\n    return item;\r\n  });\r\n  return [\"yuhun_ocr2.0\", ...items];\r\n}\r\n\r\nexport function snapshotToOcr2(\r\n  shanpshot: ISnapshot\r\n): (\"yuhun_ocr2.0\" | Ocr2Item)[] {\r\n  return equipsToOcr2(shanpshot.data.hero_equips);\r\n}\r\n","import React, { SFC, useState, useEffect, EventHandler } from \"react\";\r\nimport \"./EquipList.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { IHeroEquip, HeroEquipAttrType, ISnapshot } from \"../../interfaces\";\r\nimport { IYyxState, IDispatch } from \"../../store\";\r\nimport {\r\n  EquipSelectors,\r\n  EquipActions,\r\n  IEquipListOptions,\r\n  EquipLevelFilter,\r\n  EquipEquippedFilter\r\n} from \"../../modules/equip\";\r\nimport { EquipGrid } from \"./EquipGrid\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Divider,\r\n  ButtonGroup,\r\n  InputGroup,\r\n  Callout\r\n} from \"@blueprintjs/core\";\r\nimport { EquipTypeMultiSelector } from \"./EquipTypeSelector\";\r\nimport { EquipPosition } from \"./EquipPosition\";\r\nimport {\r\n  HeroEquipPosAttrBaseTypes,\r\n  getEquipAttrName\r\n} from \"../../modules/equip/attr\";\r\nimport { useDebounce } from \"../../hooks/debounce\";\r\nimport classNames from \"classnames\";\r\nimport { DateInput } from \"@blueprintjs/datetime\";\r\nimport { formatDate, parseDate } from \"../../utils\";\r\nimport { SnapshotInfo } from \"../Snapshot/SnapshotInfo\";\r\nimport { exportJson } from \"../../modules/equip/export\";\r\nimport { equipsToOcr2 } from \"../../modules/equip/ocr2\";\r\n\r\nconst renderPositions = (\r\n  value: number[],\r\n  onClick: (value: number, active: boolean) => void\r\n) => {\r\n  const nodes = [];\r\n  for (let i = 1; i <= 6; i++) {\r\n    const active = value.includes(i);\r\n    nodes.push(\r\n      <EquipPosition\r\n        key={i}\r\n        active={active}\r\n        position={i}\r\n        onClick={() => onClick(i, active)}\r\n      />\r\n    );\r\n  }\r\n  return <ButtonGroup>{nodes}</ButtonGroup>;\r\n};\r\n\r\nconst renderStars = (\r\n  value: number[],\r\n  onClick: (value: number, active: boolean) => void\r\n) => {\r\n  const nodes = [];\r\n  for (let i = 1; i <= 6; i++) {\r\n    const active = value.includes(i);\r\n    nodes.push(\r\n      <Button key={i} active={active} onClick={() => onClick(i, active)}>\r\n        {i}星\r\n      </Button>\r\n    );\r\n  }\r\n  return <ButtonGroup>{nodes}</ButtonGroup>;\r\n};\r\n\r\nfunction getBaseAttrList(positions: number[]): HeroEquipAttrType[] {\r\n  return Array.from(\r\n    new Set(\r\n      positions\r\n        .map(pos => HeroEquipPosAttrBaseTypes.get(pos) || [])\r\n        .reduce((l, r) => [...l, ...r], [])\r\n    )\r\n  );\r\n}\r\n\r\nconst renderBaseAttrs = (\r\n  positions: number[],\r\n  value: HeroEquipAttrType[] | null,\r\n  onChange: (value: HeroEquipAttrType, active: boolean) => void\r\n) => {\r\n  if (!positions.length) {\r\n    return (\r\n      <Button minimal disabled alignText=\"left\">\r\n        请选择位置\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  const attrs = getBaseAttrList(positions);\r\n  return (\r\n    <ButtonGroup>\r\n      {attrs.map(type => {\r\n        const active = !!(value && value.includes(type));\r\n        return (\r\n          <Button\r\n            active={active}\r\n            key={type}\r\n            onClick={() => onChange(type, active)}\r\n            disabled={attrs.length === 1}\r\n          >\r\n            {getEquipAttrName(type)}\r\n          </Button>\r\n        );\r\n      })}\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nconst renderScores = (\r\n  value: number[],\r\n  onClick: (value: number, active: boolean) => void\r\n) => {\r\n  const nodes = [];\r\n  for (let i = 3; i <= 9; i++) {\r\n    const active = value.includes(i);\r\n    nodes.push(\r\n      <Button key={i} active={active} onClick={() => onClick(i, active)}>\r\n        {i}分\r\n      </Button>\r\n    );\r\n  }\r\n  return <ButtonGroup>{nodes}</ButtonGroup>;\r\n};\r\n\r\nconst DefaultListOptions: IEquipListOptions = {\r\n  id: \"\",\r\n  types: null,\r\n  positions: [],\r\n  stars: [6],\r\n  baseAttrs: null,\r\n  trashed: false,\r\n  level: EquipLevelFilter.Max,\r\n  equipped: EquipEquippedFilter.Any,\r\n  creationTimeFrom: null,\r\n  creationTimeTo: null,\r\n  scores: []\r\n};\r\n\r\nconst Render: SFC<{\r\n  equips: IHeroEquip[] | null;\r\n  dispatch: IDispatch;\r\n}> = props => {\r\n  const [options, _setOptions] = useState<IEquipListOptions>(\r\n    DefaultListOptions\r\n  );\r\n  const debouncedOptions = useDebounce(options, 500);\r\n  const [loading, setLoading] = useState(false);\r\n  const [exporting, setExporting] = useState(false);\r\n  const [exported, setExported] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (debouncedOptions) {\r\n      props.dispatch(EquipActions.setListOptions(debouncedOptions));\r\n      setLoading(false);\r\n    }\r\n  }, [debouncedOptions]);\r\n\r\n  const setOptions = (v: IEquipListOptions) => {\r\n    _setOptions(v);\r\n    setLoading(true);\r\n  };\r\n\r\n  if (!props.equips) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"yyx-full-height yyx-layout row\">\r\n      <Card className=\"yyx-nav-left item yyx-options equip-list-options\">\r\n        <div className=\"item\">\r\n          <InputGroup\r\n            leftIcon=\"filter\"\r\n            placeholder=\"搜索御魂ID\"\r\n            value={options.id}\r\n            onChange={(e: any) =>\r\n              setOptions({\r\n                ...options,\r\n                id: e.target.value\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <Divider className=\"item\" />\r\n        <div className=\"yyx-layout row item\">\r\n          <label className=\"item\">类型: </label>\r\n          <EquipTypeMultiSelector\r\n            className=\"item\"\r\n            onChange={types =>\r\n              setOptions({\r\n                ...options,\r\n                types\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"item yyx-layout row\">\r\n          <label className=\"item\">位置: </label>\r\n          <div className=\"item pos-icons\">\r\n            {renderPositions(options.positions, (pos, active) => {\r\n              let positions;\r\n              if (active) {\r\n                positions = options.positions.filter(p => p !== pos);\r\n              } else {\r\n                positions = [...options.positions.filter(p => p !== pos), pos];\r\n              }\r\n              setOptions({\r\n                ...options,\r\n                positions\r\n              });\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"item yyx-layout row\">\r\n          <label className=\"item\">星级: </label>\r\n          <div className=\"item\">\r\n            {renderStars(options.stars, (star, active) => {\r\n              let stars;\r\n              if (active) {\r\n                stars = options.stars.filter(s => s !== star);\r\n              } else {\r\n                stars = [...options.stars.filter(s => s !== star), star];\r\n              }\r\n              setOptions({\r\n                ...options,\r\n                stars\r\n              });\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"item yyx-layout row \">\r\n          <label className=\"item\">主属性:</label>\r\n          <div className=\"item\">\r\n            {renderBaseAttrs(\r\n              options.positions,\r\n              options.baseAttrs,\r\n              (attr, active) => {\r\n                let attrs;\r\n                if (active) {\r\n                  attrs = options.baseAttrs\r\n                    ? options.baseAttrs.filter(a => a !== attr)\r\n                    : [];\r\n                } else {\r\n                  attrs = options.baseAttrs\r\n                    ? [...options.baseAttrs.filter(a => a !== attr), attr]\r\n                    : [attr];\r\n                }\r\n                setOptions({\r\n                  ...options,\r\n                  baseAttrs: attrs\r\n                });\r\n              }\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"item yyx-layout row\">\r\n          <label className=\"item\">强化:</label>\r\n          <div className=\"item\">\r\n            <ButtonGroup>\r\n              <Button\r\n                active={options.level === EquipLevelFilter.Zero}\r\n                onClick={() => {\r\n                  setOptions({\r\n                    ...options,\r\n                    level:\r\n                      options.level === EquipLevelFilter.Zero\r\n                        ? EquipLevelFilter.Any\r\n                        : EquipLevelFilter.Zero\r\n                  });\r\n                }}\r\n              >\r\n                未强化\r\n              </Button>\r\n              <Button\r\n                active={options.level === EquipLevelFilter.Max}\r\n                onClick={() => {\r\n                  setOptions({\r\n                    ...options,\r\n                    level:\r\n                      options.level === EquipLevelFilter.Max\r\n                        ? EquipLevelFilter.Any\r\n                        : EquipLevelFilter.Max\r\n                  });\r\n                }}\r\n              >\r\n                +15\r\n              </Button>\r\n            </ButtonGroup>\r\n          </div>\r\n        </div>\r\n        <div className=\"item yyx-layout row\">\r\n          <label className=\"item\">装备:</label>\r\n          <div className=\"item\">\r\n            <ButtonGroup>\r\n              <Button\r\n                active={options.equipped === EquipEquippedFilter.NotEquipped}\r\n                onClick={() => {\r\n                  setOptions({\r\n                    ...options,\r\n                    equipped:\r\n                      options.equipped === EquipEquippedFilter.NotEquipped\r\n                        ? EquipEquippedFilter.Any\r\n                        : EquipEquippedFilter.NotEquipped\r\n                  });\r\n                }}\r\n              >\r\n                未装备\r\n              </Button>\r\n              <Button\r\n                active={options.equipped === EquipEquippedFilter.Equipped}\r\n                onClick={() => {\r\n                  setOptions({\r\n                    ...options,\r\n                    equipped:\r\n                      options.equipped === EquipEquippedFilter.Equipped\r\n                        ? EquipEquippedFilter.Any\r\n                        : EquipEquippedFilter.Equipped\r\n                  });\r\n                }}\r\n              >\r\n                装备\r\n              </Button>\r\n            </ButtonGroup>\r\n          </div>\r\n        </div>\r\n        <div className=\"item yyx-layout row\">\r\n          <label className=\"item\">弃置:</label>\r\n          <div className=\"item\">\r\n            <ButtonGroup>\r\n              <Button\r\n                active={options.trashed === false}\r\n                onClick={() => {\r\n                  setOptions({\r\n                    ...options,\r\n                    trashed: options.trashed === false ? null : false\r\n                  });\r\n                }}\r\n              >\r\n                未弃置\r\n              </Button>\r\n              <Button\r\n                active={options.trashed === true}\r\n                onClick={() => {\r\n                  setOptions({\r\n                    ...options,\r\n                    trashed: options.trashed === true ? null : true\r\n                  });\r\n                }}\r\n              >\r\n                已弃置\r\n              </Button>\r\n            </ButtonGroup>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"item yyx-layout row \">\r\n          <label className=\"item\">评分: </label>\r\n          <div className=\"item\">\r\n            {renderScores(options.scores, (score, active) => {\r\n              let scores;\r\n              if (active) {\r\n                scores = options.scores\r\n                  ? options.scores.filter(s => s !== score)\r\n                  : [];\r\n              } else {\r\n                scores = options.scores\r\n                  ? [...options.scores.filter(s => s !== score), score]\r\n                  : [score];\r\n              }\r\n              setOptions({\r\n                ...options,\r\n                scores\r\n              });\r\n            })}\r\n          </div>\r\n        </div> */}\r\n        <div className=\"item yyx-layout row\">\r\n          <label className=\"item\">获取时间:</label>\r\n          <div className=\"item\">\r\n            <DateInput\r\n              showActionsBar\r\n              placeholder=\"起始时间\"\r\n              timePrecision=\"minute\"\r\n              formatDate={formatDate}\r\n              parseDate={parseDate}\r\n              onChange={date =>\r\n                setOptions({\r\n                  ...options,\r\n                  creationTimeFrom: date\r\n                })\r\n              }\r\n              value={options.creationTimeFrom || undefined}\r\n            />\r\n            <br />\r\n            <DateInput\r\n              showActionsBar\r\n              formatDate={formatDate}\r\n              parseDate={parseDate}\r\n              placeholder=\"结束时间\"\r\n              timePrecision=\"minute\"\r\n              onChange={date =>\r\n                setOptions({\r\n                  ...options,\r\n                  creationTimeTo: date\r\n                })\r\n              }\r\n              value={options.creationTimeTo || undefined}\r\n            />\r\n          </div>\r\n          <div />\r\n        </div>\r\n        <Divider className=\"item\" />\r\n        <div className=\"item\">数量: {props.equips.length}</div>\r\n        <div className=\"item\">\r\n          <SnapshotInfo\r\n            render={info => (\r\n              <Button\r\n                intent={\"primary\"}\r\n                disabled={exporting}\r\n                onClick={async () => {\r\n                  if (info) {\r\n                    setExporting(true);\r\n                    const path = await exportOcr2Json(\r\n                      info,\r\n                      props.equips as IHeroEquip[]\r\n                    );\r\n                    setExported(path);\r\n                    setExporting(false);\r\n                  }\r\n                }}\r\n              >\r\n                导出JSON (御魂导出器)\r\n              </Button>\r\n            )}\r\n          />\r\n          <br />\r\n          <br />\r\n          {exported && (\r\n            <Callout intent={\"success\"}>\r\n              导出成功: <br />\r\n              <a href={`/export-files/${exported}`} target=\"_blank\">\r\n                {exported}\r\n              </a>\r\n            </Callout>\r\n          )}\r\n        </div>\r\n      </Card>\r\n      <Divider />\r\n      <div\r\n        className={classNames(\r\n          \"yyx-content yyx-content-scroll\",\r\n          \"item\",\r\n          loading && \"equip-list-loading\"\r\n        )}\r\n      >\r\n        <EquipGrid\r\n          items={props.equips}\r\n          onClickEquip={equip => {\r\n            console.log(equip);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nasync function exportOcr2Json(\r\n  snapshotInfo: ISnapshot,\r\n  equips: IHeroEquip[]\r\n): Promise<string> {\r\n  const filename = `${snapshotInfo.data.player.name}_${\r\n    snapshotInfo.data.player.id\r\n  }_${formatDate(new Date(), \"YYYYMMDD_HHmm\")}.json`;\r\n  return exportJson(filename, equipsToOcr2(equips));\r\n}\r\n\r\nexport const EquipList = connect((state: IYyxState) => ({\r\n  equips: EquipSelectors.selectDisplay(state)\r\n}))(Render);\r\n","import React, { SFC, useState, useEffect } from \"react\";\r\nimport \"./EquipSetAttrs.scss\";\r\nimport { IEquipSetInfo } from \"../../modules/equip\";\r\n\r\nimport {\r\n  getEquipAttrName,\r\n  formatEquipAttrValue\r\n} from \"../../modules/equip/attr\";\r\nimport { formatAttrValue } from \"../../utils\";\r\nimport { HeroEquipAttrType } from \"../../interfaces\";\r\nimport classNames from \"classnames\";\r\nimport { EquipTypeIcon } from \"./EquipIcon\";\r\n\r\nconst AttrTable = [\r\n  [HeroEquipAttrType.Attack, HeroEquipAttrType.CritRate],\r\n  [HeroEquipAttrType.AttackRate, HeroEquipAttrType.CritPower],\r\n  [HeroEquipAttrType.Hp, HeroEquipAttrType.EffectHitRate],\r\n  [HeroEquipAttrType.HpRate, HeroEquipAttrType.EffectResistRate],\r\n  [HeroEquipAttrType.Defense, HeroEquipAttrType.Speed],\r\n  [HeroEquipAttrType.DefenseRate, null]\r\n];\r\n\r\nexport const EquipSetAttrs: SFC<{\r\n  className?: string;\r\n  info: IEquipSetInfo;\r\n}> = ({ className, info }) => {\r\n  return (\r\n    <div className={classNames(\"equip-set-attrs\", className)}>\r\n      <ul className=\"attr-list\">\r\n        {AttrTable.map(([l, r], idx) => {\r\n          return (\r\n            <li key={idx} className=\"yyx-layout row\">\r\n              {l && (\r\n                <div className=\"item yyx-layout row\">\r\n                  <label className=\"item\">{getEquipAttrName(l)}</label>\r\n                  <span className=\"item value\">\r\n                    {formatEquipAttrValue(l, info.attrMap.get(l) || 0, true)}\r\n                  </span>\r\n                </div>\r\n              )}\r\n              {r && (\r\n                <div className=\"item yyx-layout row\">\r\n                  <label className=\"item\">{getEquipAttrName(r)}</label>\r\n                  <span className=\"item value\">\r\n                    {formatEquipAttrValue(r, info.attrMap.get(r) || 0, true)}\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <ul className=\"suit-effect-list\">\r\n        {info.suits.map(data => {\r\n          return (\r\n            <li key={data.id} className=\"yyx-layout row\">\r\n              <div className=\"item icon\">\r\n                <EquipTypeIcon id={data.id} size={24} />\r\n              </div>\r\n              <div className=\"item effect-desc\">\r\n                {data.effect[3][0] || data.effect[1][0]}\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React, { SFC } from \"react\";\r\nimport \"./EquipPage.scss\";\r\nimport { SubNavLink, SubNav } from \"../Common/SubNav\";\r\nimport { EquipList } from \"./EquipList\";\r\nimport { Route } from \"react-router\";\r\nimport { EquipPresets } from \"./EquipPresets\";\r\nimport { useAccountPath } from \"../../modules/account/hooks\";\r\n\r\nconst SubPages: (SubNavLink & { component: any })[] = [\r\n  {\r\n    label: \"御魂列表\",\r\n    to: \"/equip\",\r\n    component: EquipList\r\n  },\r\n  {\r\n    label: \"御魂方案\",\r\n    to: \"/equip/preset\",\r\n    component: EquipPresets\r\n  }\r\n];\r\n\r\nexport const EquipPage: SFC = props => {\r\n  const accountPath = useAccountPath();\r\n  return (\r\n    <div className=\"yyx-full-height yyx-layout row\">\r\n      <div className=\"item yyx-nav-left\">\r\n        <SubNav links={SubPages} />\r\n      </div>\r\n      <div className=\"item yyx-content yyx-content-scroll\">\r\n        {SubPages.map(page => (\r\n          <Route\r\n            key={page.to}\r\n            path={`${accountPath}${page.to}`}\r\n            exact={page.to === \"/equip\"}\r\n            component={page.component}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { SFC, useState, useEffect } from \"react\";\r\nimport \"./EquipPresets.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  IHeroEquip,\r\n  IHeroEquipPreset,\r\n  HeroEquipAttrType\r\n} from \"../../interfaces\";\r\nimport { IYyxState } from \"../../store\";\r\nimport { EquipSelectors, IEquipPresetItem } from \"../../modules/equip\";\r\nimport { Card, InputGroup, Divider } from \"@blueprintjs/core\";\r\nimport { Equips } from \"./Equips\";\r\nimport { EquipSet } from \"./EquipSet\";\r\nimport { useDebounce } from \"../../hooks/debounce\";\r\nimport { EquipSetAttrs } from \"./EquipSetAttrs\";\r\nimport { EquipTypeMultiSelector } from \"./EquipTypeSelector\";\r\n\r\nconst Render: SFC<{\r\n  presets: IEquipPresetItem[] | null;\r\n}> = props => {\r\n  const [term, setTerm] = useState(\"\");\r\n  const [suites, setSuites] = useState<number[]>([]);\r\n  const termDebounced = useDebounce(term.trim(), 300);\r\n  const [list, setList] = useState(props.presets);\r\n\r\n  useEffect(() => {\r\n    if (!props.presets) {\r\n      return;\r\n    }\r\n    let filteredList = props.presets;\r\n\r\n    if (suites.length) {\r\n      filteredList = filteredList.filter(p =>\r\n        suites.length < p.suits.length\r\n          ? p.suits.some(data => suites.includes(data.id))\r\n          : p.suits.length == suites.length &&\r\n            p.suits.every(data => suites.includes(data.id))\r\n      );\r\n    }\r\n\r\n    if (termDebounced) {\r\n      filteredList = filteredList.filter(p => p.name.includes(termDebounced));\r\n    }\r\n\r\n    setList(filteredList);\r\n  }, [props.presets, termDebounced, suites]);\r\n\r\n  const { presets } = props;\r\n\r\n  if (!presets || !list) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"yyx-padding\">\r\n      <Card className=\"yyx-layout row wrap yyx-options yyx-space-v\">\r\n        <div className=\"item\">\r\n          <InputGroup\r\n            leftIcon=\"filter\"\r\n            placeholder=\"搜索名称...\"\r\n            value={term}\r\n            onChange={(e: any) => setTerm(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"yyx-layout row item\">\r\n          <label className=\"item\">套装: </label>\r\n          <EquipTypeMultiSelector\r\n            className=\"item\"\r\n            onChange={types => setSuites(types)}\r\n          />\r\n        </div>\r\n        <div className=\"item\">数量: {list.length}</div>\r\n      </Card>\r\n      <ul className=\"bp3-list-unstyled equip-preset-list\">\r\n        {list.map((i, idx) => (\r\n          <li key={idx}>\r\n            <div className=\"yyx-layout row title\">\r\n              <div className=\"item name\">{i.name}</div>\r\n              <div className=\"item right\" />\r\n            </div>\r\n            <EquipSet equips={i.equips} />\r\n            <EquipSetAttrs info={i} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const EquipPresets = connect((state: IYyxState) => ({\r\n  presets: EquipSelectors.selectPresetItems(state)\r\n}))(Render);\r\n","import { IRealmCardData } from \"../../interfaces\";\r\n\r\nconst DATA = require(\"./REALM_CARD_DATA.json\");\r\n\r\nexport const RealmCardNames = [\r\n  \"太鼓\",\r\n  \"斗鱼\",\r\n  \"伞室内\",\r\n  \"太阴符咒\",\r\n  \"太阳符咒\",\r\n  \"伞结界\",\r\n  \"夜屏风\",\r\n  \"白桃林\",\r\n  \"胧车\",\r\n  \"鬼火烧\",\r\n  \"葫芦酒\",\r\n  \"口水蛙\",\r\n  \"孟婆汤\",\r\n  \"绵绵冰\",\r\n  \"千年笛\",\r\n  \"神乐铃\",\r\n  \"天雷鼓\",\r\n  \"阎琵琶\",\r\n  \"炼妖琴\"\r\n];\r\n\r\nconst DataMap: Map<number, IRealmCardData> = DATA.reduce(\r\n  (m: Map<number, IRealmCardData>, i: any) => {\r\n    m.set(i.id, i);\r\n    return m;\r\n  },\r\n  new Map()\r\n);\r\n\r\nexport const getRealmCardData = (itemId: number) => DataMap.get(itemId);\r\n","import { IAction, IDispatch, IYyxState } from \"../../store\";\r\nimport { createSelector } from \"reselect\";\r\nimport { IRealmCard, IRealmCardData } from \"../../interfaces\";\r\nimport { getRealmCardData, RealmCardNames } from \"./data\";\r\nimport { sortDesc } from \"../../utils\";\r\nimport { SnapshotSelectors } from \"../snapshot/selectors\";\r\n\r\nconst selectAll = createSelector(\r\n  SnapshotSelectors.currentSnapshot,\r\n  snapshot => {\r\n    if (!snapshot) {\r\n      return null;\r\n    }\r\n    return snapshot.data.realm_cards.map(c => {\r\n      c.data = getRealmCardData(c.item_id);\r\n      return c;\r\n    });\r\n  }\r\n);\r\n\r\nexport type IRealmCardGroupMapByName = Map<\r\n  string, // name\r\n  Array<{\r\n    item_id: number;\r\n    star: number;\r\n    count: number;\r\n  }>\r\n>;\r\n\r\nconst selectGroupMapByName = createSelector(\r\n  selectAll,\r\n  cards => {\r\n    if (!cards) {\r\n      return null;\r\n    }\r\n    const map: IRealmCardGroupMapByName = new Map();\r\n\r\n    cards\r\n      .slice()\r\n      .sort(\r\n        sortDesc((a, b) => {\r\n          return (a.data ? a.data.star : 0) - (b.data ? b.data.star : 0);\r\n        })\r\n      )\r\n      .forEach(c => {\r\n        const name = c.data && c.data.name;\r\n        const star = c.data && c.data.star;\r\n\r\n        if (name && star) {\r\n          let list = map.get(name);\r\n          if (!list) {\r\n            map.set(name, [\r\n              {\r\n                item_id: c.item_id,\r\n                star,\r\n                count: 1\r\n              }\r\n            ]);\r\n          } else {\r\n            const entry = list.find(i => i.item_id === c.item_id);\r\n            if (entry) {\r\n              entry.count++;\r\n            } else {\r\n              list.push({\r\n                item_id: c.item_id,\r\n                star,\r\n                count: 1\r\n              });\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n    return map;\r\n  }\r\n);\r\n\r\nexport interface IRealmCardGroup {\r\n  name: string;\r\n  items: Array<{\r\n    item_id: number;\r\n    star: number;\r\n    count: number;\r\n  }>;\r\n}\r\n\r\nconst selectGroups = createSelector(\r\n  selectGroupMapByName,\r\n  map => {\r\n    if (!map) {\r\n      return null;\r\n    }\r\n\r\n    return RealmCardNames.map(name => [name, map.get(name)])\r\n      .filter(v => !!v[1])\r\n      .map(([name, items]) => {\r\n        return {\r\n          name,\r\n          items\r\n        };\r\n      }) as IRealmCardGroup[];\r\n  }\r\n);\r\n\r\nexport const RealmCardSelectors = {\r\n  selectGroups\r\n};\r\n","import React, { SFC, useState } from \"react\";\r\nimport \"./RealmCardPage.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { IYyxState } from \"../../store\";\r\nimport { RealmCardSelectors, IRealmCardGroup } from \"../../modules/realm_card\";\r\n\r\nconst Render: SFC<{\r\n  groups: IRealmCardGroup[] | null;\r\n}> = props => {\r\n  if (!props.groups) {\r\n    return null;\r\n  }\r\n\r\n  const columns = [];\r\n  const rows = [];\r\n  for (let i = 0; i < 6; i++) {\r\n    columns.push(<th key={i}>{6 - i}星</th>);\r\n  }\r\n\r\n  for (let g of props.groups) {\r\n    rows.push(\r\n      <tr key={g.name}>\r\n        <td>\r\n          <strong>{g.name}</strong>\r\n        </td>\r\n        {columns.map((c, idx) => {\r\n          const gi = g.items.find(i => i.star === 6 - idx);\r\n          return <td key={idx}>{gi ? gi.count : 0}</td>;\r\n        })}\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <table className=\"bp3-html-table bp3-html-table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>结界卡</th>\r\n            {columns}\r\n          </tr>\r\n        </thead>\r\n        <tbody>{rows}</tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const RealmCardPage = connect((state: IYyxState) => ({\r\n  groups: RealmCardSelectors.selectGroups(state)\r\n}))(Render);\r\n","import React, { ReactElement, SFC, useState, useEffect, lazy } from \"react\";\r\nimport pkg from \"../../../package.json\";\r\nimport { HttpClient } from \"../../modules/http\";\r\nimport {\r\n  Popover,\r\n  Icon,\r\n  Spinner,\r\n  Intent,\r\n  Button,\r\n  Tag,\r\n  Divider\r\n} from \"@blueprintjs/core\";\r\nimport \"./UpdateInfo.scss\";\r\nconst os: string = require(\"platform\").os.family;\r\nconst Markdown = require(\"react-markdown\");\r\n\r\nconst MyTargets: string[] =\r\n  os === \"OS X\"\r\n    ? [\"macOS\"]\r\n    : os.includes(\"Windows\")\r\n    ? [\r\n        \"Windows\",\r\n        \"Windows-32bit\",\r\n        \"Windows-64bit\",\r\n        \"Steam\",\r\n        \"Facebook-Gameroom\"\r\n      ]\r\n    : [\"Ubuntu\", \"Debian\", \"Fedora\", \"Red Hat\"].some(v => os.includes(v))\r\n    ? [\"Linux\"]\r\n    : [];\r\n\r\nconst R_FILENAME = /^(yyx|yyx-snapshot)-(\\d+\\.\\d+.\\d+)-([^.]+)\\.(.+)$/;\r\n\r\nfunction getProxyUrl(url: string): string {\r\n  return url.replace(\r\n    \"https://github.com/OnmyojiX/yyx/\",\r\n    \"http://yyx.cloud/github/\"\r\n  );\r\n}\r\n\r\nfunction getAssetElement(asset: GithubAsset) {\r\n  const parts = asset.name.match(R_FILENAME);\r\n  if (!parts) {\r\n    return null;\r\n  }\r\n  const [_, product, version, target] = parts;\r\n  const myTarget = MyTargets.includes(target);\r\n  const productName = product === \"yyx\" ? \"痒痒熊主程序\" : \"痒痒熊快照\";\r\n  return (\r\n    <>\r\n      <a href={asset.browser_download_url} target=\"_blank\">\r\n        <Icon icon=\"download\" />\r\n        &nbsp;\r\n        {myTarget ? <strong>{productName}</strong> : productName}\r\n      </a>\r\n      &nbsp;\r\n      <Tag intent={Intent.PRIMARY} minimal={!myTarget}>\r\n        {target.replace(\"-\", \" \")}\r\n      </Tag>\r\n      &nbsp;v{version}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface GithubAsset {\r\n  browser_download_url: string;\r\n  content_type: string;\r\n  name: string;\r\n  size: number;\r\n}\r\n\r\ninterface GithubRelease {\r\n  tag_name: string;\r\n  name: string;\r\n  published_at: string;\r\n  body: string;\r\n  assets: Array<GithubAsset>;\r\n  prerelease: boolean;\r\n  draft: boolean;\r\n}\r\n\r\nconst ReleaseInfo: SFC<{ release: GithubRelease }> = ({ release }) => {\r\n  return (\r\n    <div className=\"release-info\">\r\n      <h2>{release.name}</h2>\r\n      <p>\r\n        <small>v{release.tag_name}</small>\r\n      </p>\r\n      <Markdown source={release.body} />\r\n      <Divider />\r\n      <ul className=\"asset-list\">\r\n        {release.assets.map(a => (\r\n          <li key={a.browser_download_url}>{getAssetElement(a)}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst R_VERSION = /^(\\d+)\\.(\\d+)\\.(\\d+)$/;\r\n\r\nconst isLargerVersion = (l: string, r: string) => {\r\n  const ver1 = l.match(R_VERSION);\r\n  const ver2 = r.match(R_VERSION);\r\n\r\n  if (!ver1 || !ver2) {\r\n    console.warn(`Cannot compare version: '${l}', '${r}'`);\r\n    return false;\r\n  }\r\n\r\n  for (let i = 0; i < 3; i++) {\r\n    const l = parseInt(ver1[i]);\r\n    const r = parseInt(ver2[i]);\r\n    if (l < r) {\r\n      return false;\r\n    } else if (l > r) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport const UpdateInfo: SFC = props => {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [latest, setLatest] = useState<GithubRelease | null>(null);\r\n  const [error, setError] = useState<Error | null>(null);\r\n\r\n  useEffect(() => {\r\n    Promise.race([\r\n      HttpClient.get<GithubRelease>(\r\n        \"http://yyx.cloud/github-api/releases/latest\"\r\n      ).then(res => {\r\n        res.data.assets.forEach(\r\n          a => (a.browser_download_url = getProxyUrl(a.browser_download_url))\r\n        );\r\n        return res;\r\n      }),\r\n      HttpClient.get<GithubRelease>(\r\n        \"https://api.github.com/repos/OnmyojiX/yyx/releases/latest\"\r\n      )\r\n    ]).then(\r\n      res => {\r\n        if (res.data) {\r\n          if (\r\n            isLargerVersion(res.data.tag_name, pkg.version) &&\r\n            !res.data.draft &&\r\n            !res.data.prerelease\r\n          ) {\r\n            setLatest(res.data);\r\n          }\r\n        }\r\n        setLoading(false);\r\n      },\r\n      err => {\r\n        setError(err);\r\n        setLoading(false);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Spinner size={16} />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <a href=\"http://nga.178.com/read.php?tid=16557282\" target=\"_blank\">\r\n        检查更新\r\n      </a>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span className=\"bp3-text-muted\">\r\n      {!latest && pkg.version}\r\n      {latest && (\r\n        <Popover defaultIsOpen={true}>\r\n          <Button minimal intent={Intent.PRIMARY}>\r\n            <Icon icon=\"info-sign\" />\r\n            &nbsp; <strong>有更新</strong>\r\n          </Button>\r\n          <ReleaseInfo release={latest} />\r\n        </Popover>\r\n      )}\r\n    </span>\r\n  );\r\n};\r\n","import \"./About.scss\";\r\nimport React, { ReactElement, SFC, useState, useEffect } from \"react\";\r\nimport logo from \"../../assets/logo.svg\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport pkg from \"../../../package.json\";\r\n\r\nexport const About: SFC = props => {\r\n  return (\r\n    <div className=\"about\">\r\n      <div className=\"yyx-layout row\">\r\n        <div className=\"item logo\">\r\n          <img width={100} height={100} src={logo} />\r\n          <br />\r\n          <small className=\"bp3-text-muted\">v{pkg.version}</small>\r\n        </div>\r\n        <div className=\"item content\">\r\n          <dl>\r\n            <dt>作者</dt>\r\n            <dd>海外加速区 | AD钙奶猫</dd>\r\n            <dt>NGA</dt>\r\n            <dd>\r\n              <a\r\n                target=\"_blank\"\r\n                href=\"http://nga.178.com/read.php?tid=16557282\"\r\n              >\r\n                链接 <Icon icon={\"link\"} />\r\n              </a>\r\n            </dd>\r\n            <dt>GitHub</dt>\r\n            <dd>\r\n              <a target=\"_blank\" href=\"https://github.com/OnmyojiX/yyx\">\r\n                链接 <Icon icon={\"link\"} />\r\n              </a>\r\n            </dd>\r\n            {/* <dt>QQ群</dt>\r\n            <dd>496107455</dd>\r\n            <dt>微博</dt>\r\n            <dd>\r\n              <a\r\n                target=\"_blank\"\r\n                href=\"https://www.weibo.com/p/1005056044720097/home\"\r\n              >\r\n                链接 <Icon icon={\"link\"} />\r\n              </a>\r\n            </dd> */}\r\n          </dl>\r\n\r\n          <h2 className=\"important\">求赞</h2>\r\n          <div className=\"important\">\r\n            请给我老婆 <strong>AD钙奶熊</strong> 点赞\r\n          </div>\r\n          <div className=\"important\">\r\n            请给我老婆 <strong>AD钙奶熊</strong> 点赞\r\n          </div>\r\n          <div className=\"important\">\r\n            请给我老婆 <strong>AD钙奶熊</strong> 点赞\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { SFC, ComponentClass, useEffect } from \"react\";\r\nimport \"./Main.scss\";\r\nimport logo from \"../../assets/logo.svg\";\r\n\r\nimport {\r\n  Alignment,\r\n  Button,\r\n  Classes,\r\n  Navbar,\r\n  NavbarDivider,\r\n  NavbarGroup,\r\n  ButtonGroup,\r\n  Popover,\r\n  Callout,\r\n  Spinner\r\n} from \"@blueprintjs/core\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  RouteComponentProps,\r\n  withRouter,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { YyxStore } from \"../../store\";\r\nimport { OverviewPage } from \"../Overview/OverviewPage\";\r\nimport { SnapshotInfo } from \"../Snapshot/SnapshotInfo\";\r\nimport { ISnapshot } from \"../../interfaces\";\r\n\r\nimport { HeroPage } from \"../Hero/HeroPage\";\r\nimport { EquipPage } from \"../Equip/EquipPage\";\r\nimport { RealmCardPage } from \"../RealmCard/RealmCardPage\";\r\nimport { UpdateInfo } from \"../Update/UpdateInfo\";\r\nimport { About } from \"../About/About\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SnapshotSelectors } from \"../../modules/snapshot/selectors\";\r\nimport { SnapshotActions } from \"../../modules/snapshot/actions\";\r\nimport {\r\n  YyxAccountId,\r\n  CbgAccountId,\r\n  AccountId\r\n} from \"../../modules/account/types\";\r\nimport { AccountActions } from \"../../modules/account/actions\";\r\nimport { AccountSelectors } from \"../../modules/account/selectors\";\r\nimport { AccountService } from \"../../modules/account/service\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    component: OverviewPage,\r\n    renderLabel: () => \"概况\",\r\n    show: (_: ISnapshot) => true\r\n  },\r\n  {\r\n    path: \"/hero\",\r\n    component: HeroPage,\r\n    renderLabel: (snapshot: ISnapshot) =>\r\n      `式神 (${snapshot.data.heroes.length})`,\r\n    show: (s: ISnapshot) => !s.cbg_url\r\n  },\r\n  {\r\n    path: \"/equip\",\r\n    component: EquipPage,\r\n    renderLabel: (snapshot: ISnapshot) =>\r\n      `御魂 (${snapshot.data.hero_equips.length})`,\r\n    show: (s: ISnapshot) => true\r\n  },\r\n  {\r\n    path: \"/realm-card\",\r\n    component: RealmCardPage,\r\n    renderLabel: (snapshot: ISnapshot) =>\r\n      `结界卡 (${snapshot.data.realm_cards.length})`,\r\n    show: (s: ISnapshot) => !s.cbg_url\r\n  }\r\n];\r\n\r\nconst Main: SFC<{\r\n  id: AccountId;\r\n  route: RouteComponentProps;\r\n}> = ({ id, route }) => {\r\n  const accountPath = AccountService.getAccountPath(id);\r\n\r\n  const dispach = useDispatch();\r\n  const account = useSelector(AccountSelectors.current);\r\n  const notFound = useSelector(AccountSelectors.currentNotFound);\r\n  useEffect(() => {\r\n    dispach(AccountActions.loadAndSelectId(id));\r\n  }, [accountPath]);\r\n  useEffect(() => {\r\n    if (account && AccountService.getAccountPath(account.id) === accountPath) {\r\n      dispach(SnapshotActions.load(account));\r\n    } else {\r\n      dispach(SnapshotActions.reset());\r\n    }\r\n  }, [account]);\r\n  const current = useSelector(SnapshotSelectors.currentSnapshot);\r\n  const exportUrl = React.useMemo(() => {\r\n    if (!current) {\r\n      return null;\r\n    }\r\n    const ts = Math.floor(new Date(current.timestamp).getTime() / 1000);\r\n    if (current.cbg_url) {\r\n      const name = `yyx_snapshot_cbg_${current.data.player.name}.json`;\r\n      return `/api${accountPath}/snapshot-export/${encodeURIComponent(name)}`;\r\n    } else {\r\n      return `/api${accountPath}/snapshot-export/yyx_snapshot_${ts}_${current.data.player.server_id}_${current.data.player.id}.json`;\r\n    }\r\n  }, [current]);\r\n\r\n  if (notFound) {\r\n    return (\r\n      <Callout intent=\"warning\">\r\n        账号快照不存在。\r\n        <Link to=\"/\">\r\n          <Button>重新选择</Button>\r\n        </Link>\r\n      </Callout>\r\n    );\r\n  }\r\n\r\n  if (!current) {\r\n    return (\r\n      <div style={{ marginTop: \"20%\" }}>\r\n        <Spinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const path = route.location.pathname;\r\n  return (\r\n    <main>\r\n      <Navbar>\r\n        <NavbarGroup align={Alignment.LEFT}>\r\n          <a className=\"navbar-left\">\r\n            <img className=\"logo\" src={logo} />\r\n          </a>\r\n          <NavbarDivider />\r\n          <SnapshotInfo\r\n            render={info =>\r\n              info && (\r\n                <>\r\n                  <span>\r\n                    {info.data.player.name}\r\n                    {info.cbg_url && (\r\n                      <>\r\n                        &nbsp;\r\n                        <a href={info.cbg_url} target=\"_blank\">\r\n                          [藏宝阁]\r\n                        </a>\r\n                      </>\r\n                    )}\r\n                  </span>\r\n                  <NavbarDivider />\r\n                  <ButtonGroup large>\r\n                    {routes.map((r, i) => {\r\n                      const rpath = accountPath + r.path;\r\n                      return r.show(info) ? (\r\n                        <Button\r\n                          key={i}\r\n                          onClick={() => route.history.push(rpath)}\r\n                          active={\r\n                            r.path === \"/\"\r\n                              ? path === rpath\r\n                              : path.startsWith(rpath)\r\n                          }\r\n                          text={r.renderLabel(info)}\r\n                        />\r\n                      ) : null;\r\n                    })}\r\n                  </ButtonGroup>\r\n                </>\r\n              )\r\n            }\r\n          />\r\n        </NavbarGroup>\r\n        <NavbarGroup align={Alignment.RIGHT}>\r\n          <UpdateInfo />\r\n          <NavbarDivider />\r\n          <Popover>\r\n            <Button minimal>关于</Button>\r\n            <About />\r\n          </Popover>\r\n          <NavbarDivider />\r\n          {exportUrl && (\r\n            <>\r\n              <a href={exportUrl} target=\"_blank\">\r\n                导出当前快照\r\n              </a>\r\n              <NavbarDivider />\r\n            </>\r\n          )}\r\n          <Button\r\n            icon=\"folder-open\"\r\n            onClick={() => {\r\n              route.history.push(\"/\");\r\n            }}\r\n          >\r\n            打开其他快照\r\n          </Button>\r\n        </NavbarGroup>\r\n      </Navbar>\r\n      <div className=\"yyx-container\">\r\n        {routes.map((r, i) => (\r\n          <Route\r\n            key={i}\r\n            path={route.match.path + r.path}\r\n            component={r.component}\r\n            exact={r.path === \"/\"}\r\n          />\r\n        ))}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport const YyxMain = withRouter(props => {\r\n  const id = {\r\n    type: \"Yyx\",\r\n    server_id: Number(props.match.params[\"serverId\"]),\r\n    player_id: Number(props.match.params[\"playerId\"])\r\n  } as YyxAccountId;\r\n  return <Main id={id} route={props} />;\r\n});\r\nexport const CbgMain = withRouter(props => {\r\n  const id = {\r\n    type: \"Cbg\",\r\n    server_id: props.match.params[\"serverId\"],\r\n    order_sn: props.match.params[\"orderSn\"]\r\n  } as CbgAccountId;\r\n  return <Main id={id} route={props} />;\r\n});\r\n","import React, { SFC, useEffect } from \"react\";\r\nimport \"./App.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { SnapshotSelectScreen } from \"./Snapshot/SnapshotSelectScreen\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { CbgMain, YyxMain } from \"./Main/Main\";\r\n\r\nconst App: SFC = props => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Route path=\"/\" exact={true} component={SnapshotSelectScreen} />\r\n      <Route path=\"/yyx/:serverId/:playerId\" component={YyxMain} />\r\n      <Route path=\"/cbg/:serverId/:orderSn\" component={CbgMain} />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./styles/yyx.scss\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { YyxStore } from \"./store\";\r\n\r\nconst container = document.getElementById(\"root\") as HTMLElement;\r\n\r\nReactDOM.render(\r\n  <Provider store={YyxStore}>\r\n    <App />\r\n  </Provider>,\r\n  container\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.e6addb46.svg\";"],"sourceRoot":""}