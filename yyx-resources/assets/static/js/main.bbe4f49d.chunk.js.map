{"version":3,"sources":["modules/error.ts","modules/http.ts","modules/snapshot/index.ts","utils.ts","interfaces.ts","modules/hero/data.ts","modules/hero/index.ts","modules/hero/sorters.ts","components/Common/Star.tsx","store.ts","components/Snapshot/SnapshotInfo.tsx","components/Overview/OverviewPage.tsx","components/Hero/HeroIcon.tsx","constants.ts","components/Hero/HeroGrid.tsx","components/Common/Rarity.tsx","components/Common/Rating.tsx","components/Hero/HeroDetail.tsx","components/Hero/HeroDetailOverlay.tsx","components/Hero/HeroPage.tsx","modules/equip/sorters.ts","modules/equip/data.ts","modules/equip/index.ts","components/Equip/EquipItem.tsx","components/Equip/EquipIcon.tsx","modules/equip/attr.ts","components/Equip/EquipDetail.tsx","components/Equip/EquipGrid.tsx","components/Equip/EquipPage.tsx","modules/realm_card/data.ts","modules/realm_card/index.ts","components/RealmCard/RealmCardPage.tsx","modules/shard/index.ts","components/Main/Main.tsx","components/Shard/ShardPage.tsx","components/Snapshot/SnapshotSelectScreen.tsx","components/App.tsx","serviceWorker.ts","index.tsx","assets/logo.svg"],"names":["ActionType","initialState","currentError","ErrorActions","error","type","SetError","payload","HttpClient","axios","create","interceptors","response","use","res","err","data","message","Error","concat","status","extractError","YyxStore","dispatch","Promise","reject","currentNotSelected","current","AttrValueType","SnapshotSelectors","state","snapshot","SnapshotActions","select","file","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","put","loadCurrent","stop","this","_x","apply","arguments","resetCurrent","SetCurrent","_ref2","_callee2","_context2","t0","t1","get","then","t2","sent","t3","_x2","composeSorters","_len","length","sorters","Array","_key","b","_i","r","sorter","sortDesc","formatAttrValue","v","undefined","Float","toFixed","Percentage","Math","round","Ratings","HeroRarity","HeroEquipAttrType","DATE_FORMAT","DATA","require","mapAttrRating","list","attack","max_hp","defense","speed","crit_rate","DataMap","reduce","m","i","set","id","name","attr_rating","unawake","awake","rarity","skills","Map","RarityRank","SP","SSR","SR","R","N","reverse","getHeroData","heroId","defaultSorter","star","level","hero_id","StarType","selectAll","heroes","map","hero","selectMapById","createSelector","selectAllSorted","slice","sort","HeroSelectors","selectMapByRarity","push","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","combineReducers","action","objectSpread","applyMiddleware","thunk","SnapshotInfo","connect","notSelected","stateProps","dispatchProps","ownProps","render","props","info","date","_info$data","player","currency","hero_equips","react_default","createElement","card","className","version","timestamp","moment","local","format","coin","jade","action_point","renderStar","key","classNames","Elements","_Elements","defineProperty","Orange","Purple","Blue","orangeElems","purpleElems","blueElems","ii","Grey","Stars","getStarType","h","HeroIcon","toLowerCase","onClickHero","onClick","src","Star_Stars","HeroGrid","items","HeroIcon_HeroIcon","ClassNames","_ClassNames","Rarity","Rating","rating","attrs","HeroDetail","ratings","Rarity_Rarity","style","flex","nick_name","renderIconName","slicedToArray","label","attr","Rating_Rating","base","value","crit_power","effect_hit_rate","effect_resist_rate","renderAttrs","HeroDetailOverlay","contentEl","useRef","overlay","backdropClassName","isOpen","onClose","classList","add","ref","HeroDetail_HeroDetail","HeroPage","_useState","useState","_useState2","activeHero","setActiveHero","Fragment","HeroDetailOverlay_HeroDetailOverlay","HeroGrid_HeroGrid","quality","suit_id","selectEquippedByMap","equippedByMap","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","equips","return","selectPresets","hero_equip_presets","selectIncludedInPresetsMap","presets","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","p","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","equippedBy","inPresets","equip","suit_data","equipped_by","included_in_presets","EquipSelectors","selectMaps","qualityMap","levelMap","suitMap","posMap","baseAttrMap","selector","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","e","pos","base_attr","suit","selectDisplay","filter","garbage","EquipItem","onClickEquip","EquipIcon","AttrNames","_AttrNames","Hp","Defense","Attack","HpRate","DefenseRate","AttackRate","Speed","CritRate","CritPower","EffectHitRate","EffectResistRate","PercentageAttrs","formatEquipAttr","includes","EquipDetail","_formatEquipAttr","_formatEquipAttr2","baseAttrName","baseAttrValue","EquipIcon_EquipIcon","random_attrs","_formatEquipAttr3","_formatEquipAttr4","single_attrs","_formatEquipAttr5","_formatEquipAttr6","born","Date","setTime","EquipGrid","popover","content","EquipDetail_EquipDetail","minimal","popoverClassName","Classes","POPOVER_CONTENT_SIZING","portalClassName","EquipItem_EquipItem","EquipPage","setActiveEquip","EquipGrid_EquipGrid","RealmCardNames","realm_cards","c","itemId","item_id","selectGroupMapByName","cards","forEach","entry","find","count","RealmCardSelectors","selectGroups","RealmCardPage","groups","columns","rows","_loop","g","idx","gi","hero_book_shards","hero_data","getRarityRank","s","ShardSelectors","selectSorted","routes","path","component","renderLabel","shards","book_max_shards","LayoutImpl","withRouter","location","pathname","navbar","fixedToTop","navbarGroup","align","Alignment","LEFT","logo","navbarDivider","buttonGroup","large","buttons","history","active","text","RIGHT","pkg","icon","route","Route","exact","Main","BrowserRouter","SnapshotSelectScreen","setError","_useState3","_useState4","loading","setLoading","callout","title","intent","spinner","fileInput","onInputChange","files","target","catch","App","load","main","useEffect","Main_Main_Main","SnapshotSelectScreen_SnapshotSelectScreen","Boolean","hostname","match","container","document","getElementById","ReactDOM","es","store","components_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.bbe4f49d.chunk.js","sourcesContent":["import { IAction } from \"../store\";\n\nexport interface IState {\n  currentError: Error | null;\n}\n\nconst initialState: IState = {\n  currentError: null\n};\n\nexport enum ActionType {\n  SetError = \"ERROR_SET_ERROR\"\n}\n\nexport function reducer(state = initialState, action: IAction<ActionType>) {\n  const { type, payload } = action;\n  switch (type) {\n    case ActionType.SetError:\n      return {\n        ...state,\n        currentError: payload\n      };\n  }\n  return state;\n}\n\nexport const ErrorActions = {\n  setError(error: Error) {\n    return {\n      type: ActionType.SetError,\n      payload: error\n    };\n  },\n  clearError() {\n    return {\n      type: ActionType.SetError,\n      payload: null\n    };\n  }\n};\n","import axios, { AxiosResponse } from \"axios\";\nimport { YyxStore } from \"../store\";\nimport { ErrorActions } from \"./error\";\n\nexport const HttpClient = axios.create();\n\nHttpClient.interceptors.response.use(\n  res => res,\n  err => {\n    const error = err.response ? extractError(err.response) : err;\n    YyxStore.dispatch(ErrorActions.setError(error));\n    return Promise.reject(error);\n  }\n);\n\nfunction extractError(res: AxiosResponse) {\n  if (res.data && res.data.message) {\n    return new Error(res.data.message);\n  }\n  return new Error(`未知错误 (HTTP ${res.status})`);\n}\n","import { IAction, IDispatch, IYyxState } from \"../../store\";\nimport { HttpClient } from \"../http\";\nimport { ISnapshot } from \"../../interfaces\";\nimport { HeroActions } from \"../hero\";\n\nexport interface IState {\n  currentNotSelected: boolean;\n  current: ISnapshot | null;\n}\n\nconst initialState: IState = {\n  currentNotSelected: false,\n  current: null\n};\n\nexport enum ActionType {\n  SetCurrent = \"SNAPSHOT_SET_CURRENT\"\n}\n\nexport function reducer(state = initialState, action: IAction<ActionType>) {\n  const { type, payload } = action;\n  switch (type) {\n    case ActionType.SetCurrent:\n      return {\n        ...state,\n        currentNotSelected: !payload,\n        current: payload\n      };\n  }\n  return state;\n}\n\nconst selectCurrentSnapshot = (state: IYyxState) =>\n  state.snapshot && state.snapshot.current;\n\nexport const SnapshotSelectors = {\n  selectCurrentSnapshot\n};\n\nexport const SnapshotActions = {\n  select(file: File) {\n    return async (dispatch: IDispatch<ActionType>) => {\n      await HttpClient.put(\"/api/snapshot\", file);\n      dispatch(SnapshotActions.loadCurrent());\n    };\n  },\n  resetCurrent() {\n    return (dispatch: IDispatch) => {\n      dispatch({\n        type: ActionType.SetCurrent,\n        payload: null\n      });\n    };\n  },\n  loadCurrent() {\n    return async (dispatch: IDispatch<ActionType>) => {\n      dispatch({\n        type: ActionType.SetCurrent,\n        payload: await HttpClient.get(\"/api/snapshot\").then(res => res.data)\n      });\n    };\n  }\n};\n","import moment from \"moment\";\n\nexport type Sorter<T> = (a: T, b: T) => number;\n\nexport function composeSorters<T>(...sorters: Array<Sorter<T>>): Sorter<T> {\n  return (a, b) => {\n    for (let sorter of sorters) {\n      const r = sorter(a, b);\n      if (r !== 0) {\n        return r;\n      }\n    }\n    return 0;\n  };\n}\n\nexport function sortDesc<T>(sorter: Sorter<T>): Sorter<T> {\n  return (a, b) => -sorter(a, b);\n}\n\nexport enum AttrValueType {\n  Float,\n  Percentage\n}\n\nexport function formatAttrValue(\n  v: number,\n  type: AttrValueType = AttrValueType.Float\n): string {\n  switch (type) {\n    case AttrValueType.Float:\n      return v.toFixed(2);\n    case AttrValueType.Percentage:\n      return `${(Math.round(v * 10000) / 100).toFixed(2)}%`;\n  }\n}\n\nconst DATE_FORMAT = \"YYYY-MM-DD HH:mm\";\n\nexport function formatTimestamp(v: number) {\n  if (!v) return \"很久以前\";\n  return moment(new Date().setTime(v * 1000))\n    .local()\n    .format(DATE_FORMAT);\n}\n\nexport function formatDate(date: string | Date) {\n  return moment(date)\n    .local()\n    .format(DATE_FORMAT);\n}\n","export interface IPlayer {\n  id: number;\n  name: string;\n  level: string;\n}\n\nexport interface IPlayerCurrency {\n  coin: number;\n  jade: number;\n  action_point: number;\n}\n\nexport interface IHero {\n  id: string;\n  hero_id: number;\n  equips: string[];\n  level: number;\n  awake: number;\n  star: number;\n  exp: number;\n  exp_rate: number;\n  nick_name: string;\n  born: number;\n  lock: boolean;\n  rarity: HeroRarity;\n  skills: HeroSkill[];\n  attrs: IHeroAttrs;\n  data?: IHeroData;\n}\n\nexport interface IHeroAttrs {\n  max_hp: IHeroAttr;\n  speed: IHeroAttr;\n  crit_power: IHeroAttr;\n  crit_rate: IHeroAttr;\n  defense: IHeroAttr;\n  attack: IHeroAttr;\n  effect_hit_rate: number;\n  effect_resist_rate: number;\n}\n\nexport interface IHeroAttr {\n  base: number;\n  add_value: number;\n  add_rate: number;\n  value: number;\n}\n\nexport interface IHeroData {\n  id: number;\n  name: string;\n  attr_rating: {\n    unawake: IHeroAttrRating;\n    awake: IHeroAttrRating;\n  };\n  rarity: HeroRarity;\n  skills: number[];\n}\n\nexport enum Ratings {\n  SS = \"ss\",\n  S = \"s\",\n  A = \"a\",\n  B = \"b\",\n  C = \"c\",\n  D = \"d\"\n}\n\nexport interface IHeroAttrRating {\n  attack: Ratings;\n  max_hp: Ratings;\n  defense: Ratings;\n  speed: Ratings;\n  crit_rate: Ratings;\n}\n\nexport enum HeroRarity {\n  N = \"N\",\n  R = \"R\",\n  SR = \"SR\",\n  SSR = \"SSR\",\n  SP = \"SP\"\n}\n\nexport interface HeroSkill {\n  id: number;\n  level: number;\n}\n\nexport interface IHeroEquip {\n  id: string;\n  suit_id: number;\n  quality: number;\n  pos: number;\n  equip_id: number;\n  level: number;\n  born: number;\n  lock: boolean;\n  garbage: boolean;\n  attrs: HeroEquipAttr[];\n  base_attr: HeroEquipAttr;\n  random_attrs: HeroEquipAttr[];\n  random_attr_rates: HeroEquipAttr[];\n  single_attrs: HeroEquipAttr[];\n  suit_data?: IHeroEquipSuitData;\n  equipped_by?: IHero;\n  included_in_presets?: IHeroEquipPreset[];\n}\n\nexport interface IHeroEquipSuitData {\n  id: number;\n  name: string;\n  attr: [\n    IHeroEquipSuiteAttr[],\n    IHeroEquipSuiteAttr[],\n    IHeroEquipSuiteAttr[],\n    IHeroEquipSuiteAttr[]\n  ];\n  effect: [string[], string[], string[], string[]];\n}\n\nexport interface IHeroEquipSuiteAttr {\n  type: HeroEquipAttrType;\n  value: number;\n}\n\nexport interface HeroEquipAttr {\n  type: HeroEquipAttrType;\n  value: number;\n}\n\nexport enum HeroEquipAttrType {\n  Hp = \"Hp\",\n  Defense = \"Defense\",\n  Attack = \"Attack\",\n  HpRate = \"HpRate\",\n  DefenseRate = \"DefenseRate\",\n  AttackRate = \"AttackRate\",\n  Speed = \"Speed\",\n  CritRate = \"CritRate\",\n  CritPower = \"CritPower\",\n  EffectHitRate = \"EffectHitRate\",\n  EffectResistRate = \"EffectResistRate\"\n}\n\nexport interface IHeroEquipPreset {\n  name: string;\n  items: string[];\n}\n\nexport interface IHeroBookShard {\n  hero_id: number;\n  shards: number;\n  books: number;\n  book_max_shards: number;\n  hero_data?: IHeroData;\n}\n\nexport interface IRealmCard {\n  id: string;\n  item_id: number;\n  total_time: number;\n  attrs: {\n    exp: number;\n    bonus: number;\n  };\n  data?: IRealmCardData;\n}\n\nexport interface IRealmCardData {\n  id: number;\n  name: string;\n  star: number;\n}\n\nexport interface ISnapshot {\n  version: string;\n  timestamp: string;\n  data: {\n    player: IPlayer;\n    currency: IPlayerCurrency;\n    heroes: IHero[];\n    hero_equips: IHeroEquip[];\n    hero_equip_presets: IHeroEquipPreset[];\n    hero_book_shards: IHeroBookShard[];\n    realm_cards: IRealmCard[];\n  };\n}\n","import { IHeroAttrRating, IHeroData, HeroRarity } from \"../../interfaces\";\n\nconst DATA = require(\"./HERO_DATA.json\");\n\nconst mapAttrRating = (list: string[]) => {\n  return {\n    attack: list[0],\n    max_hp: list[1],\n    defense: list[2],\n    speed: list[3],\n    crit_rate: list[4]\n  } as IHeroAttrRating;\n};\n\nconst DataMap: Map<number, IHeroData> = DATA.reduce(\n  (m: Map<number, IHeroData>, i: any) => {\n    m.set(i.id, {\n      id: i.id,\n      name: i.name,\n      attr_rating: {\n        unawake: mapAttrRating(i.attr_rating[0]),\n        awake: mapAttrRating(i.attr_rating[1])\n      },\n      rarity: i.rarity,\n      skills: i.skills\n    });\n    return m;\n  },\n  new Map()\n);\n\nexport const RarityRank = [\n  HeroRarity.SP,\n  HeroRarity.SSR,\n  HeroRarity.SR,\n  HeroRarity.R,\n  HeroRarity.N\n]\n  .reverse()\n  .reduce(\n    (m, r, i) => {\n      m[r] = i;\n      return m;\n    },\n    {} as { [key in HeroRarity]: number }\n  );\n\nexport const getHeroData = (heroId: number) => DataMap.get(heroId);\n","import { IAction, IDispatch, IYyxState } from \"../../store\";\nimport { IHero, HeroRarity } from \"../../interfaces\";\nimport { createSelector } from \"reselect\";\nimport { defaultSorter } from \"./sorters\";\nimport { getHeroData } from \"./data\";\n\nexport interface IState {}\n\nconst initialState: IState = {};\n\nexport enum ActionType {}\n\nexport function reducer(state = initialState, action: IAction<ActionType>) {\n  const { type, payload } = action;\n  // switch (type) {\n  // }\n  return state;\n}\n\nexport const HeroActions = {};\n\nconst selectAll = (state: IYyxState) =>\n  state.snapshot.current &&\n  state.snapshot.current.data.heroes.map(hero => {\n    hero.data = getHeroData(hero.hero_id);\n    return hero;\n  });\n\nconst selectMapById = createSelector(\n  selectAll,\n  heroes => {\n    if (!heroes) {\n      return null;\n    }\n    const groups = heroes.reduce((m, i) => {\n      m.set(i.id, i);\n      return m;\n    }, new Map<string, IHero>());\n    return groups;\n  }\n);\n\nconst selectAllSorted = createSelector(\n  selectAll,\n  heroes => {\n    if (!heroes) {\n      return null;\n    }\n    return heroes.slice().sort(defaultSorter);\n  }\n);\n\nconst selectMapByRarity = createSelector(\n  selectAllSorted,\n  heroes => {\n    if (!heroes) {\n      return null;\n    }\n    const groups = heroes.reduce((m, i) => {\n      let list = m.get(i.rarity);\n      if (!list) {\n        list = [];\n        m.set(i.rarity, list);\n      }\n      list.push(i);\n      return m;\n    }, new Map<HeroRarity, IHero[]>());\n    return groups;\n  }\n);\n\nexport const HeroSelectors = {\n  selectAll,\n  selectAllSorted,\n  selectMapById,\n  selectMapByRarity\n};\n","import { IHero, HeroRarity } from \"../../interfaces\";\nimport { composeSorters, sortDesc } from \"../../utils\";\nimport { RarityRank } from \"./data\";\n\nexport const sortByRarity = (a: IHero, b: IHero) =>\n  RarityRank[b.rarity] - RarityRank[a.rarity];\nexport const sortByHeroId = (a: IHero, b: IHero) => a.hero_id - b.hero_id;\nexport const sortByLevel = (a: IHero, b: IHero) => a.level - b.level;\nexport const sortByStar = (a: IHero, b: IHero) => a.star - b.star;\nexport const sortByAwake = (a: IHero, b: IHero) => a.awake - b.awake;\nexport const defaultSorter = composeSorters(\n  sortDesc(sortByStar),\n  sortByRarity,\n  sortDesc(sortByAwake),\n  sortDesc(sortByLevel),\n  sortDesc(sortByHeroId)\n);\n","import React, { SFC } from \"react\";\nimport \"./Star.scss\";\nimport classNames from \"classnames\";\n\nexport interface StarProps {\n  type: StarType;\n}\n\nexport enum StarType {\n  Grey = \"grey\",\n  Orange = \"orange\",\n  Purple = \"purple\",\n  Blue = \"blue\"\n}\n\nconst renderStar = (i: number, type: StarType) => {\n  return <i key={i} className={classNames(\"star\", `star-${type}`)} />;\n};\n\nconst Elements: { [key: string]: JSX.Element[][] } = {\n  [StarType.Orange]: [],\n  [StarType.Purple]: [],\n  [StarType.Blue]: []\n};\nfor (let i = 0; i < 6; i++) {\n  const orangeElems = [];\n  const purpleElems = [];\n  const blueElems = [];\n  for (let ii = 0; ii <= i; ii++) {\n    orangeElems.push(renderStar(ii, StarType.Orange));\n    purpleElems.push(renderStar(ii, StarType.Purple));\n    blueElems.push(renderStar(ii, StarType.Blue));\n  }\n  for (let ii = i + 1; ii < 6; ii++) {\n    orangeElems.push(renderStar(ii, StarType.Grey));\n    purpleElems.push(renderStar(ii, StarType.Grey));\n    blueElems.push(renderStar(ii, StarType.Grey));\n  }\n  Elements[StarType.Orange].push(orangeElems);\n  Elements[StarType.Purple].push(purpleElems);\n  Elements[StarType.Blue].push(blueElems);\n}\n\nexport const Stars: SFC<StarProps & { level: number }> = props => {\n  return <span className=\"stars\">{Elements[props.type][props.level - 1]}</span>;\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk, { ThunkDispatch, ThunkAction } from \"redux-thunk\";\n\nimport * as error from \"./modules/error\";\nimport * as snapshot from \"./modules/snapshot\";\nimport * as hero from \"./modules/hero\";\n\ntype ActionType = error.ActionType | snapshot.ActionType | hero.ActionType;\n\nexport interface IAction<T = ActionType> {\n  type: T;\n  payload: any;\n}\n\nexport type IDispatch<T = ActionType> = ThunkDispatch<\n  IYyxState,\n  void,\n  IAction<T>\n>;\n\nexport interface IYyxState {\n  error: error.IState;\n  snapshot: snapshot.IState;\n  hero: hero.IState;\n}\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const YyxStore = createStore<IYyxState, any, {}, {}>(\n  combineReducers({\n    error: error.reducer,\n    snapshot: snapshot.reducer,\n    hero: hero.reducer\n  }),\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import { connect } from \"react-redux\";\nimport { ReactElement, SFC } from \"react\";\nimport { IYyxState } from \"../../store\";\nimport { ISnapshot } from \"../../interfaces\";\n\ninterface RenderProps {\n  current: ISnapshot | null;\n  notSelected: boolean;\n  render: (info: ISnapshot | null) => ReactElement | null;\n}\n\nconst Render: SFC<RenderProps> = (props: RenderProps) => {\n  return props.render(props.current);\n};\n\nexport interface SnapshotInfoProps {\n  render: (info: ISnapshot | null) => ReactElement | null;\n}\n\nexport const SnapshotInfo = connect(\n  (state: IYyxState) => ({\n    current: state.snapshot.current,\n    notSelected: state.snapshot.currentNotSelected\n  }),\n  null,\n  (stateProps, dispatchProps, ownProps: SnapshotInfoProps) => ({\n    ...stateProps,\n    render: ownProps.render\n  })\n)(Render);\n","import React, { SFC } from \"react\";\nimport \"./OverviewPage.scss\";\nimport { SnapshotInfo } from \"../Snapshot/SnapshotInfo\";\nimport { Card } from \"@blueprintjs/core\";\nimport { ISnapshot } from \"../../interfaces\";\nimport { formatDate } from \"../../utils\";\n\nconst render = (info: ISnapshot | null) => {\n  if (!info) {\n    return null;\n  }\n\n  const { player, currency, heroes, hero_equips } = info.data;\n\n  return (\n    <Card>\n      <table className=\"bp3-html-table yyx-prop-table\">\n        <tbody>\n          <tr>\n            <th>快照版本</th>\n            <td>{info.version}</td>\n          </tr>\n          <tr>\n            <th>快照日期</th>\n            <td>{formatDate(info.timestamp)}</td>\n          </tr>\n          <tr>\n            <th>玩家</th>\n            <td>\n              {player.name} Lv.{player.level}\n            </td>\n          </tr>\n          <tr>\n            <th>资产</th>\n            <td>\n              <ul>\n                <li>金币: {currency.coin}</li>\n                <li>勾玉: {currency.jade}</li>\n                <li>体力: {currency.action_point}</li>\n              </ul>\n            </td>\n          </tr>\n          <tr>\n            <th>式神数量</th>\n            <td>{heroes.length}</td>\n          </tr>\n          <tr>\n            <th>御魂数量</th>\n            <td>{hero_equips.length}</td>\n          </tr>\n        </tbody>\n      </table>\n    </Card>\n  );\n};\n\nconst OverviewPage: SFC = props => {\n  return <SnapshotInfo render={render} />;\n};\n\nexport { OverviewPage };\n","import React, { SFC } from \"react\";\nimport \"./HeroIcon.scss\";\nimport { IHero, HeroRarity } from \"../../interfaces\";\nimport classNames from \"classnames\";\nimport { HERO_MAX_LEVEL } from \"../../constants\";\nimport { Stars, StarType } from \"../Common/Star\";\n\nconst getStarType = (h: IHero) => {\n  if (h.rarity === HeroRarity.N) {\n    return StarType.Blue;\n  } else if (h.rarity === HeroRarity.SP) {\n    return StarType.Purple;\n  } else {\n    return h.awake > 0 ? StarType.Purple : StarType.Orange;\n  }\n};\n\nexport const HeroIcon: SFC<{\n  hero: IHero;\n  className?: string;\n  onClickHero?: (hero: IHero) => void;\n}> = props => {\n  const h = props.hero;\n  return (\n    <div\n      className={classNames(\n        \"hero-icon\",\n        `rarity-${h.rarity.toLowerCase()}`,\n        props.onClickHero && \"clickable\",\n        props.className\n      )}\n      key={h.id}\n      onClick={() => props.onClickHero && props.onClickHero(h)}\n    >\n      <img className={props.className} src={`/res/hero/${h.hero_id}.png`} />\n      <div className=\"level\">{h.level === HERO_MAX_LEVEL ? \"满\" : h.level}</div>\n      <div className=\"star-level\">\n        <Stars type={getStarType(h)} level={h.star} />\n      </div>\n      {h.awake > 0 && <div className=\"awake\">觉</div>}\n    </div>\n  );\n};\n","export const HERO_MAX_LEVEL = 40;\n","import React, { SFC } from \"react\";\nimport \"./HeroGrid.scss\";\nimport { IHero, HeroRarity } from \"../../interfaces\";\nimport classNames from \"classnames\";\nimport { HERO_MAX_LEVEL } from \"../../constants\";\nimport { Stars, StarType } from \"../Common/Star\";\nimport { HeroIcon } from \"./HeroIcon\";\n\nexport interface HeroGridProps {\n  items: IHero[];\n  onClickHero: (hero: IHero) => void;\n}\n\nexport const HeroGrid: SFC<HeroGridProps> = props => {\n  return (\n    <div className=\"hero-grid\">\n      <div className=\"hero-grid-container\">\n        {props.items.map(i => (\n          <HeroIcon\n            key={i.id}\n            className=\"hero-grid-item\"\n            hero={i}\n            onClickHero={props.onClickHero}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { SFC } from \"react\";\nimport \"./Rarity.scss\";\nimport classNames from \"classnames\";\nimport { HeroRarity } from \"../../interfaces\";\n\nconst ClassNames = {\n  [HeroRarity.SP]: \"sp\",\n  [HeroRarity.SSR]: \"ssr\",\n  [HeroRarity.SR]: \"sr\",\n  [HeroRarity.R]: \"r\",\n  [HeroRarity.N]: \"n\"\n};\n\nexport const Rarity: SFC<{\n  rarity: HeroRarity;\n  className?: string;\n}> = props => {\n  return (\n    <i\n      className={classNames(\n        \"rarity\",\n        `rarity-${ClassNames[props.rarity]}`,\n        props.className\n      )}\n    />\n  );\n};\n","import React, { SFC } from \"react\";\nimport \"./Rating.scss\";\nimport classNames from \"classnames\";\nimport { Ratings } from \"../../interfaces\";\n\nexport interface RatingProps {\n  rating: Ratings;\n}\n\nexport const Rating: SFC<RatingProps> = props => {\n  return <i className={classNames(\"rating\", `rating-${props.rating}`)} />;\n};\n","import React, { SFC } from \"react\";\nimport \"./HeroDetail.scss\";\nimport {\n  IHero,\n  IHeroAttrRating,\n  IHeroAttrs,\n  IHeroAttr\n} from \"../../interfaces\";\nimport { HeroIcon } from \"./HeroIcon\";\nimport { Rarity } from \"../Common/Rarity\";\nimport classNames from \"classnames\";\nimport { Rating } from \"../Common/Rating\";\nimport { AttrValueType, formatAttrValue } from \"../../utils\";\nimport { Divider } from \"@blueprintjs/core\";\n\nconst renderIconName = (hero: IHero) => (\n  <div className=\"icon-name yyx-layout row\">\n    <div className=\"icon item\">\n      <HeroIcon hero={hero} />\n    </div>\n    <div className=\"name item yyx-layout column\">\n      <div className=\"yyx-layout row yyx-space-v\">\n        <Rarity rarity={hero.rarity} className=\"item\" />\n        <div className=\"item hero\" style={{ flex: \"0 0 auto\" }}>\n          {hero.data && hero.data.name}\n        </div>\n      </div>\n      {hero.nick_name && <div>昵称: {hero.nick_name}</div>}\n    </div>\n  </div>\n);\n\nconst attrs: Array<[string, string, string, AttrValueType]> = [\n  [\"attack\", \"攻击\", \"attack\", AttrValueType.Float],\n  [\"max_hp\", \"生命\", \"max-hp\", AttrValueType.Float],\n  [\"defense\", \"防御\", \"defense\", AttrValueType.Float],\n  [\"speed\", \"速度\", \"speed\", AttrValueType.Float],\n  [\"crit_rate\", \"暴击\", \"crit-rate\", AttrValueType.Percentage]\n];\n\nconst renderAttrs = (hero: IHero, ratings: IHeroAttrRating) => (\n  <div className=\"attrs yyx-layout column\">\n    {attrs.map(([key, label, className, type]) => {\n      const attr = hero.attrs[key as keyof IHeroAttrs] as IHeroAttr;\n      return (\n        <div key={key} className=\"yyx-layout row\">\n          <i className={classNames(\"attr-icon item yyx-space-h\", className)} />\n          <span className=\"item rating\">\n            <Rating rating={ratings[key as keyof IHeroAttrRating]} />\n          </span>\n          <span className=\"item label\">{label}</span>\n          <span className=\"item attr-value\">\n            {formatAttrValue(attr.base, type)}\n            {attr.value > attr.base && (\n              <span className=\"plus-value\">\n                +{formatAttrValue(attr.value - attr.base, type)}\n              </span>\n            )}\n          </span>\n        </div>\n      );\n    })}\n    <div className=\"yyx-layout row\">\n      <span className=\"item label\">暴击伤害</span>\n      <span className=\"item attr-value\">\n        {formatAttrValue(\n          1 + hero.attrs.crit_power.value,\n          AttrValueType.Percentage\n        )}\n      </span>\n    </div>\n    <div className=\"yyx-layout row\">\n      <span className=\"item label\">效果命中</span>\n      <span className=\"item attr-value\">\n        {formatAttrValue(\n          1 + hero.attrs.effect_hit_rate - 1,\n          AttrValueType.Percentage\n        )}\n      </span>\n    </div>\n    <div className=\"yyx-layout row yyx-space-v\">\n      <span className=\"item label\">效果抵抗</span>\n      <span className=\"item attr-value\">\n        {formatAttrValue(\n          1 + hero.attrs.effect_resist_rate - 1,\n          AttrValueType.Percentage\n        )}\n      </span>\n    </div>\n    <div className=\"yyx-layout row\">\n      <span className=\"item label\">攻击 x 暴伤</span>\n      <span className=\"item attr-value\">\n        {formatAttrValue(\n          hero.attrs.attack.value * (1 + hero.attrs.crit_power.value)\n        )}\n      </span>\n    </div>\n    <div className=\"yyx-layout row\">\n      <span className=\"item label\">生命 x 暴伤</span>\n      <span className=\"item attr-value\">\n        {formatAttrValue(\n          hero.attrs.max_hp.value * (1 + hero.attrs.crit_power.value)\n        )}\n      </span>\n    </div>\n  </div>\n);\n\nexport const HeroDetail: SFC<{\n  hero: IHero;\n}> = props => {\n  const { hero } = props;\n\n  if (!hero.data) {\n    return null;\n  }\n\n  const ratings =\n    hero.awake > 0\n      ? hero.data.attr_rating.awake\n      : hero.data.attr_rating.unawake;\n\n  return (\n    <div className=\"hero-detail\">\n      {renderIconName(hero)}\n      {renderAttrs(hero, ratings)}\n    </div>\n  );\n};\n","import React, { SFC, useRef } from \"react\";\nimport \"./HeroDetailOverlay.scss\";\nimport { IHero } from \"../../interfaces\";\nimport { Overlay } from \"@blueprintjs/core\";\nimport { HeroDetail } from \"./HeroDetail\";\nimport { getHeroData } from \"../../modules/hero/data\";\n\nexport interface HeroDetailOverlayProps {\n  hero: IHero | null;\n  onClose: () => void;\n}\n\nexport const HeroDetailOverlay: SFC<HeroDetailOverlayProps> = props => {\n  const contentEl = useRef<HTMLDivElement>(null);\n\n  return (\n    <Overlay\n      className=\"hero-detail-overlay\"\n      backdropClassName=\"hero-detail-overlay-backdrop\"\n      isOpen={!!props.hero}\n      onClose={() => {\n        if (contentEl.current) {\n          contentEl.current.classList.add(\"closing\");\n        }\n        props.onClose();\n      }}\n    >\n      {props.hero && (\n        <div ref={contentEl} className=\"content\">\n          <div style={{ flex: \"0 0 auto\" }}>\n            <HeroDetail hero={props.hero} />\n          </div>\n          {/* <pre\n            style={{ height: 400, maxWidth: 600, overflow: \"auto\", flex: \"1\" }}\n          >\n            {JSON.stringify(props.hero, null, \"  \")}\n          </pre> */}\n        </div>\n      )}\n    </Overlay>\n  );\n};\n","import React, { SFC, useState } from \"react\";\nimport \"./HeroPage.scss\";\nimport { connect } from \"react-redux\";\nimport { IHero } from \"../../interfaces\";\nimport { IYyxState } from \"../../store\";\nimport { HeroGrid } from \"./HeroGrid\";\nimport { HeroDetailOverlay } from \"./HeroDetailOverlay\";\nimport { HeroSelectors } from \"../../modules/hero\";\n\nconst Render: SFC<{\n  heroes: IHero[] | null;\n}> = props => {\n  const [activeHero, setActiveHero] = useState<IHero | null>(null);\n\n  if (!props.heroes) {\n    return null;\n  }\n\n  return (\n    <>\n      <HeroDetailOverlay\n        hero={activeHero}\n        onClose={() => setActiveHero(null)}\n      />\n      <HeroGrid\n        items={props.heroes}\n        onClickHero={hero => setActiveHero(hero)}\n      />\n    </>\n  );\n};\n\nexport const HeroPage = connect((state: IYyxState) => ({\n  heroes: HeroSelectors.selectAllSorted(state)\n}))(Render);\n","import { composeSorters, sortDesc } from \"../../utils\";\nimport { IHeroEquip } from \"../../interfaces\";\n\nexport const sortByQuality = (a: IHeroEquip, b: IHeroEquip) =>\n  a.quality - b.quality;\nexport const sortByLevel = (a: IHeroEquip, b: IHeroEquip) => a.level - b.level;\nexport const sortBySuit = (a: IHeroEquip, b: IHeroEquip) =>\n  a.suit_id - b.suit_id;\n\nexport const defaultSorter = composeSorters(\n  sortDesc(sortByQuality),\n  sortDesc(sortByLevel),\n  sortBySuit\n);\n","import { IHeroEquipSuitData } from \"../../interfaces\";\n\nconst DATA = require(\"./EQUIP_SUIT_DATA.json\");\n\nconst DataMap: Map<number, IHeroEquipSuitData> = DATA.reduce(\n  (m: Map<number, IHeroEquipSuitData>, i: any) => {\n    m.set(i.id, i);\n    return m;\n  },\n  new Map()\n);\n\nexport const getEquipSuiteData = (id: number) => DataMap.get(id);\n","import { IAction, IDispatch, IYyxState } from \"../../store\";\nimport { createSelector } from \"reselect\";\nimport {\n  IHeroEquip,\n  HeroEquipAttrType,\n  IHeroEquipPreset,\n  IHero\n} from \"../../interfaces\";\nimport { defaultSorter } from \"./sorters\";\nimport { getEquipSuiteData } from \"./data\";\nimport { number, string } from \"prop-types\";\nimport { HeroSelectors } from \"../hero\";\nimport { SnapshotSelectors } from \"../snapshot\";\n\nconst selectEquippedByMap = createSelector(\n  HeroSelectors.selectAll,\n  heroes => {\n    const equippedByMap = new Map<string, IHero>();\n    if (heroes) {\n      for (let h of heroes) {\n        for (let id of h.equips) {\n          equippedByMap.set(id, h);\n        }\n      }\n    }\n    return equippedByMap;\n  }\n);\n\nconst selectPresets = createSelector(\n  SnapshotSelectors.selectCurrentSnapshot,\n  snapshot => {\n    if (!snapshot) {\n      return null;\n    }\n    return snapshot.data.hero_equip_presets;\n  }\n);\n\nconst selectIncludedInPresetsMap = createSelector(\n  selectPresets,\n  presets => {\n    const map = new Map<string, IHeroEquipPreset[]>();\n    if (presets) {\n      for (let p of presets) {\n        for (let id of p.items) {\n          let list = map.get(id);\n          if (!list) {\n            list = [p];\n            map.set(id, list);\n          } else {\n            list.push(p);\n          }\n        }\n      }\n    }\n    return map;\n  }\n);\n\nconst selectAll = createSelector(\n  (state: IYyxState) => state.snapshot.current,\n  selectEquippedByMap,\n  selectIncludedInPresetsMap,\n  (snapshot, equippedBy, inPresets) => {\n    if (!snapshot) {\n      return null;\n    }\n    return snapshot.data.hero_equips.map(equip => {\n      equip.suit_data = getEquipSuiteData(equip.suit_id);\n      equip.equipped_by = equippedBy.get(equip.id);\n      equip.included_in_presets = inPresets.get(equip.id);\n      return equip;\n    });\n  }\n);\n\nconst selectAllSorted = createSelector(\n  selectAll,\n  equips => {\n    if (!equips) {\n      return null;\n    }\n    return equips.slice().sort(defaultSorter);\n  }\n);\n\nconst selectMaps = createSelector(\n  selectAllSorted,\n  equips => {\n    if (!equips) {\n      return null;\n    }\n\n    const qualityMap = new Map<number, IHeroEquip[]>();\n    const levelMap = new Map<number, IHeroEquip[]>();\n    const suitMap = new Map<number, IHeroEquip[]>();\n    const posMap = new Map<number, IHeroEquip[]>();\n    const baseAttrMap = new Map<HeroEquipAttrType, IHeroEquip[]>();\n\n    function push<K>(\n      map: Map<K, IHeroEquip[]>,\n      i: IHeroEquip,\n      selector: (i: IHeroEquip) => K\n    ) {\n      const key = selector(i);\n      let list = map.get(key);\n      if (!list) {\n        list = [i];\n        map.set(key, list);\n      } else {\n        list.push(i);\n      }\n    }\n\n    for (let e of equips) {\n      push(qualityMap, e, e => e.quality);\n      push(levelMap, e, e => e.level);\n      push(suitMap, e, e => e.suit_id);\n      push(posMap, e, e => e.pos);\n      push(baseAttrMap, e, e => e.base_attr.type);\n    }\n\n    return {\n      quality: qualityMap,\n      level: levelMap,\n      suit: suitMap,\n      base_attr: baseAttrMap\n    };\n  }\n);\n\nconst selectDisplay = createSelector(\n  selectAllSorted,\n  equips => {\n    if (!equips) {\n      return null;\n    }\n    return equips.filter(\n      e => !e.garbage && (e.quality === 6 || e.level === 15)\n    );\n  }\n);\n\nexport const EquipSelectors = {\n  selectAllSorted,\n  selectMaps,\n  selectDisplay,\n  selectPresets\n};\n","import React, { SFC, useState } from \"react\";\nimport \"./EquipItem.scss\";\nimport { IHeroEquip } from \"../../interfaces\";\nimport classNames from \"classnames\";\nimport { Stars, StarType } from \"../Common/Star\";\n\nexport const EquipItem: SFC<{\n  equip: IHeroEquip;\n  className?: string;\n  onClickEquip?: (equip: IHeroEquip) => void;\n}> = props => {\n  const { equip, className } = props;\n  return (\n    <div\n      className={classNames(\n        \"hero-equip-item\",\n        className,\n        props.onClickEquip && \"clickable\"\n      )}\n    >\n      {equip.level > 0 && <label>+{equip.level}</label>}\n      {equip.equipped_by && <div className=\"equipped\">装备</div>}\n      <div className=\"stars\">\n        <Stars type={StarType.Orange} level={equip.quality} />\n      </div>\n      <div className={classNames(\"icon\", `pos-${equip.pos + 1}`)}>\n        <img src={`/res/suit/${equip.suit_id}.png`} />\n      </div>\n    </div>\n  );\n};\n","import React, { SFC } from \"react\";\nimport \"./EquipIcon.scss\";\nimport classNames from \"classnames\";\n\nexport const EquipIcon: SFC<{\n  suit_id: number;\n  pos: number;\n  className?: string;\n}> = props => {\n  const { suit_id, pos, className } = props;\n  return (\n    <div className={classNames(\"hero-equip-icon\", className)}>\n      <div className={classNames(\"icon\", `pos-${pos + 1}`)}>\n        <img src={`/res/suit/${suit_id}.png`} />\n      </div>\n    </div>\n  );\n};\n","import { HeroEquipAttrType } from \"../../interfaces\";\nimport { formatAttrValue, AttrValueType } from \"../../utils\";\n\nconst AttrNames = {\n  [HeroEquipAttrType.Hp]: \"生命\",\n  [HeroEquipAttrType.Defense]: \"防御\",\n  [HeroEquipAttrType.Attack]: \"攻击\",\n  [HeroEquipAttrType.HpRate]: \"生命加成\",\n  [HeroEquipAttrType.DefenseRate]: \"防御加成\",\n  [HeroEquipAttrType.AttackRate]: \"攻击加成\",\n  [HeroEquipAttrType.Speed]: \"速度\",\n  [HeroEquipAttrType.CritRate]: \"暴击\",\n  [HeroEquipAttrType.CritPower]: \"暴击伤害\",\n  [HeroEquipAttrType.EffectHitRate]: \"效果命中\",\n  [HeroEquipAttrType.EffectResistRate]: \"效果抵抗\"\n};\n\nconst PercentageAttrs = [\n  HeroEquipAttrType.HpRate,\n  HeroEquipAttrType.DefenseRate,\n  HeroEquipAttrType.AttackRate,\n  HeroEquipAttrType.CritRate,\n  HeroEquipAttrType.CritPower,\n  HeroEquipAttrType.EffectHitRate,\n  HeroEquipAttrType.EffectResistRate\n];\n\nexport const formatEquipAttr = (type: HeroEquipAttrType, value: number) => {\n  return [\n    AttrNames[type],\n    formatAttrValue(\n      value,\n      PercentageAttrs.includes(type)\n        ? AttrValueType.Percentage\n        : AttrValueType.Float\n    )\n  ];\n};\n","import React, { SFC } from \"react\";\nimport \"./EquipDetail.scss\";\nimport { IHeroEquip, IHero, IHeroEquipPreset } from \"../../interfaces\";\nimport { EquipIcon } from \"./EquipIcon\";\nimport { Stars, StarType } from \"../Common/Star\";\nimport { formatEquipAttr } from \"../../modules/equip/attr\";\nimport { formatTimestamp } from \"../../utils\";\n\nexport const EquipDetail: SFC<{\n  equip: IHeroEquip;\n  equippedBy?: IHero;\n  presets?: IHeroEquipPreset[];\n}> = props => {\n  const { equip } = props;\n  const [baseAttrName, baseAttrValue] = formatEquipAttr(\n    equip.base_attr.type,\n    equip.base_attr.value\n  );\n\n  return (\n    <div className=\"equip-detail\">\n      <header className=\"yyx-layout row\">\n        <div className=\"item icon\">\n          <EquipIcon suit_id={equip.suit_id} pos={equip.pos} />\n        </div>\n        <div className=\"item title\">\n          {equip.suit_data && equip.suit_data.name}\n          {equip.level > 0 && (\n            <>\n              &nbsp;<span>+{equip.level}</span>\n            </>\n          )}\n          <br />\n          <Stars type={StarType.Orange} level={equip.quality} />\n        </div>\n      </header>\n      <div className=\"attrs\">\n        <div className=\"yyx-layout row base-attr\">\n          <div className=\"name\">{baseAttrName}</div>\n          <div className=\"value\">+{baseAttrValue}</div>\n        </div>\n        {equip.random_attrs.map(attr => {\n          const [name, value] = formatEquipAttr(attr.type, attr.value);\n          return (\n            <div key={attr.type} className=\"yyx-layout row\">\n              <div className=\"name\">{name}</div>\n              <div className=\"value\">{value}</div>\n            </div>\n          );\n        })}\n        {equip.single_attrs.length ? (\n          <div className=\"single-attrs bp3-text-muted\">\n            {equip.single_attrs.map(attr => {\n              const [name, value] = formatEquipAttr(attr.type, attr.value);\n              return (\n                <div key={name} className=\"yyx-layout row\">\n                  <div className=\"name\">固有属性</div>\n                  <div className=\"value\">\n                    {name} {value}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        ) : null}\n      </div>\n      <div className=\"props\">\n        <div className=\"yyx-layout row\">\n          <div className=\"name\">ID</div>\n          <div className=\"value id\">{equip.id}</div>\n        </div>\n        <div className=\"yyx-layout row\">\n          <div className=\"name\">获取时间</div>\n          <div className=\"value\">{formatTimestamp(equip.born)}</div>\n        </div>\n        {equip.equipped_by && (\n          <div className=\"yyx-layout row\">\n            <div className=\"name\">装备式神</div>\n            <div className=\"value\">\n              {equip.equipped_by.nick_name ||\n                (equip.equipped_by.data && equip.equipped_by.data.name)}\n            </div>\n          </div>\n        )}\n        {equip.included_in_presets && (\n          <div className=\"yyx-layout row\">\n            <div className=\"name\">所属方案</div>\n            <div className=\"value\">\n              <ul className=\"preset-list\">\n                {equip.included_in_presets.map((p, i) => (\n                  <li key={i}>{p.name}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { SFC } from \"react\";\nimport \"./EquipGrid.scss\";\nimport { IHeroEquip } from \"../../interfaces\";\nimport classNames from \"classnames\";\nimport { HERO_MAX_LEVEL } from \"../../constants\";\nimport { Stars, StarType } from \"../Common/Star\";\nimport { EquipItem } from \"./EquipItem\";\nimport { Popover, Classes } from \"@blueprintjs/core\";\nimport { EquipDetail } from \"./EquipDetail\";\n\nexport interface EquipGridProps {\n  items: IHeroEquip[];\n  onClickEquip: (equip: IHeroEquip) => void;\n}\n\nexport const EquipGrid: SFC<EquipGridProps> = props => {\n  return (\n    <div className=\"hero-equip-grid\">\n      <div className=\"hero-equip-grid-container\">\n        {props.items.map(i => (\n          <Popover\n            key={i.id}\n            content={<EquipDetail equip={i} />}\n            minimal\n            popoverClassName={classNames(Classes.POPOVER_CONTENT_SIZING)}\n            portalClassName=\"hero-equip-grid-popover\"\n          >\n            <EquipItem\n              className=\"hero-equip-grid-item\"\n              equip={i}\n              onClickEquip={props.onClickEquip}\n            />\n          </Popover>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { SFC, useState } from \"react\";\nimport \"./EquipPage.scss\";\nimport { connect } from \"react-redux\";\nimport { IHeroEquip } from \"../../interfaces\";\nimport { IYyxState } from \"../../store\";\nimport { EquipSelectors } from \"../../modules/equip\";\nimport { EquipGrid } from \"./EquipGrid\";\n\nconst Render: SFC<{\n  equips: IHeroEquip[] | null;\n}> = props => {\n  const [activeEquip, setActiveEquip] = useState<IHeroEquip | null>(null);\n\n  if (!props.equips) {\n    return null;\n  }\n\n  return (\n    <>\n      <EquipGrid\n        items={props.equips}\n        onClickEquip={equip => setActiveEquip(equip)}\n      />\n    </>\n  );\n};\n\nexport const EquipPage = connect((state: IYyxState) => ({\n  equips: EquipSelectors.selectDisplay(state)\n}))(Render);\n","import { IRealmCardData } from \"../../interfaces\";\n\nconst DATA = require(\"./REALM_CARD_DATA.json\");\n\nexport const RealmCardNames = [\n  \"太鼓\",\n  \"斗鱼\",\n  \"伞室内\",\n  \"太阴符咒\",\n  \"太阳符咒\",\n  \"伞结界\",\n  \"夜屏风\",\n  \"白桃林\",\n  \"胧车\",\n  \"鬼火烧\",\n  \"葫芦酒\",\n  \"口水蛙\",\n  \"孟婆汤\",\n  \"绵绵冰\",\n  \"千年笛\",\n  \"神乐铃\",\n  \"天雷鼓\",\n  \"阎琵琶\",\n  \"炼妖琴\"\n];\n\nconst DataMap: Map<number, IRealmCardData> = DATA.reduce(\n  (m: Map<number, IRealmCardData>, i: any) => {\n    m.set(i.id, i);\n    return m;\n  },\n  new Map()\n);\n\nexport const getRealmCardData = (itemId: number) => DataMap.get(itemId);\n","import { IAction, IDispatch, IYyxState } from \"../../store\";\nimport { createSelector } from \"reselect\";\nimport { IRealmCard, IRealmCardData } from \"../../interfaces\";\nimport { getRealmCardData, RealmCardNames } from \"./data\";\nimport { SnapshotSelectors } from \"../snapshot\";\nimport { sortDesc } from \"../../utils\";\n\nconst selectAll = createSelector(\n  SnapshotSelectors.selectCurrentSnapshot,\n  snapshot => {\n    if (!snapshot) {\n      return null;\n    }\n    return snapshot.data.realm_cards.map(c => {\n      c.data = getRealmCardData(c.item_id);\n      return c;\n    });\n  }\n);\n\nexport type IRealmCardGroupMapByName = Map<\n  string, // name\n  Array<{\n    item_id: number;\n    star: number;\n    count: number;\n  }>\n>;\n\nconst selectGroupMapByName = createSelector(\n  selectAll,\n  cards => {\n    if (!cards) {\n      return null;\n    }\n    const map: IRealmCardGroupMapByName = new Map();\n\n    cards\n      .slice()\n      .sort(\n        sortDesc((a, b) => {\n          return (a.data ? a.data.star : 0) - (b.data ? b.data.star : 0);\n        })\n      )\n      .forEach(c => {\n        const name = c.data && c.data.name;\n        const star = c.data && c.data.star;\n\n        if (name && star) {\n          let list = map.get(name);\n          if (!list) {\n            map.set(name, [\n              {\n                item_id: c.item_id,\n                star,\n                count: 1\n              }\n            ]);\n          } else {\n            const entry = list.find(i => i.item_id === c.item_id);\n            if (entry) {\n              entry.count++;\n            } else {\n              list.push({\n                item_id: c.item_id,\n                star,\n                count: 1\n              });\n            }\n          }\n        }\n      });\n\n    return map;\n  }\n);\n\nexport interface IRealmCardGroup {\n  name: string;\n  items: Array<{\n    item_id: number;\n    star: number;\n    count: number;\n  }>;\n}\n\nconst selectGroups = createSelector(\n  selectGroupMapByName,\n  map => {\n    if (!map) {\n      return null;\n    }\n\n    return RealmCardNames.map(name => [name, map.get(name)])\n      .filter(v => !!v[1])\n      .map(([name, items]) => {\n        return {\n          name,\n          items\n        };\n      }) as IRealmCardGroup[];\n  }\n);\n\nexport const RealmCardSelectors = {\n  selectGroups\n};\n","import React, { SFC, useState } from \"react\";\nimport \"./RealmCardPage.scss\";\nimport { connect } from \"react-redux\";\nimport { IYyxState } from \"../../store\";\nimport { RealmCardSelectors, IRealmCardGroup } from \"../../modules/realm_card\";\n\nconst Render: SFC<{\n  groups: IRealmCardGroup[] | null;\n}> = props => {\n  if (!props.groups) {\n    return null;\n  }\n\n  const columns = [];\n  const rows = [];\n  for (let i = 0; i < 6; i++) {\n    columns.push(<th key={i}>{6 - i}星</th>);\n  }\n\n  for (let g of props.groups) {\n    rows.push(\n      <tr key={g.name}>\n        <td>\n          <strong>{g.name}</strong>\n        </td>\n        {columns.map((c, idx) => {\n          const gi = g.items.find(i => i.star === 6 - idx);\n          return <td key={idx}>{gi ? gi.count : 0}</td>;\n        })}\n      </tr>\n    );\n  }\n\n  return (\n    <>\n      <table className=\"bp3-html-table bp3-html-table-striped\">\n        <thead>\n          <tr>\n            <th>结界卡</th>\n            {columns}\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n    </>\n  );\n};\n\nexport const RealmCardPage = connect((state: IYyxState) => ({\n  groups: RealmCardSelectors.selectGroups(state)\n}))(Render);\n","import { createSelector } from \"reselect\";\nimport { IHeroBookShard } from \"../../interfaces\";\nimport { SnapshotSelectors } from \"../snapshot\";\nimport { sortDesc, composeSorters } from \"../../utils\";\nimport { getHeroData, RarityRank } from \"../hero/data\";\n\nconst selectAll = createSelector(\n  SnapshotSelectors.selectCurrentSnapshot,\n  snapshot => {\n    if (!snapshot) {\n      return null;\n    }\n    return snapshot.data.hero_book_shards.map(i => {\n      i.hero_data = getHeroData(i.hero_id);\n      return i;\n    });\n  }\n);\n\nconst getRarityRank = (s: IHeroBookShard) =>\n  s.hero_data ? RarityRank[s.hero_data.rarity] : 999;\n\nconst defaultSorter = composeSorters<IHeroBookShard>(\n  sortDesc((a, b) => getRarityRank(a) - getRarityRank(b)),\n  sortDesc((a, b) => a.hero_id - b.hero_id)\n);\n\nconst selectSorted = createSelector(\n  selectAll,\n  items => {\n    if (!items) {\n      return null;\n    }\n\n    return items.slice().sort(defaultSorter);\n  }\n);\n\nexport const ShardSelectors = {\n  selectSorted\n};\n","import React, { SFC, ComponentClass } from \"react\";\nimport \"./Main.scss\";\nimport logo from \"../../assets/logo.svg\";\nimport pkg from \"../../../package.json\";\n\nimport {\n  Alignment,\n  Button,\n  Classes,\n  Navbar,\n  NavbarDivider,\n  NavbarGroup,\n  ButtonGroup\n} from \"@blueprintjs/core\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  RouteComponentProps,\n  withRouter\n} from \"react-router-dom\";\nimport { YyxStore } from \"../../store\";\nimport { SnapshotActions } from \"../../modules/snapshot\";\nimport { OverviewPage } from \"../Overview/OverviewPage\";\nimport { SnapshotInfo } from \"../Snapshot/SnapshotInfo\";\nimport { ISnapshot } from \"../../interfaces\";\n\nimport { HeroPage } from \"../Hero/HeroPage\";\nimport { EquipPage } from \"../Equip/EquipPage\";\nimport { RealmCardPage } from \"../RealmCard/RealmCardPage\";\nimport { ShardPage } from \"../Shard/ShardPage\";\n\nconst routes = [\n  {\n    path: \"/\",\n    component: OverviewPage,\n    renderLabel: () => \"概况\"\n  },\n  {\n    path: \"/hero\",\n    component: HeroPage,\n    renderLabel: (snapshot: ISnapshot) =>\n      `式神 (${snapshot.data.heroes.length})`\n  },\n  {\n    path: \"/equip\",\n    component: EquipPage,\n    renderLabel: (snapshot: ISnapshot) =>\n      `御魂 (${snapshot.data.hero_equips.length})`\n  },\n  {\n    path: \"/shard\",\n    component: ShardPage,\n    renderLabel: (snapshot: ISnapshot) => `碎片`\n  },\n  {\n    path: \"/realm-card\",\n    component: RealmCardPage,\n    renderLabel: (snapshot: ISnapshot) =>\n      `结界卡 (${snapshot.data.realm_cards.length})`\n  }\n];\n\nconst Render: SFC<RouteComponentProps> = props => {\n  const path = props.location.pathname;\n  return (\n    <main>\n      <Navbar fixedToTop>\n        <NavbarGroup align={Alignment.LEFT}>\n          <a className=\"navbar-left\">\n            <img className=\"logo\" src={logo} />\n          </a>\n          <NavbarDivider />\n          <SnapshotInfo\n            render={info =>\n              info && (\n                <>\n                  <span>{info.data.player.name}</span>\n                  <NavbarDivider />\n                  <ButtonGroup large>\n                    {routes.map((r, i) => (\n                      <Button\n                        key={i}\n                        onClick={() => props.history.push(r.path)}\n                        active={path === r.path}\n                        text={r.renderLabel(info)}\n                      />\n                    ))}\n                  </ButtonGroup>\n                </>\n              )\n            }\n          />\n        </NavbarGroup>\n        <NavbarGroup align={Alignment.RIGHT}>\n          <span className=\"bp3-text-muted\">{pkg.version}</span>\n          <NavbarDivider />\n          <Button\n            icon=\"folder-open\"\n            onClick={() => {\n              YyxStore.dispatch(SnapshotActions.resetCurrent());\n            }}\n          >\n            打开其他快照\n          </Button>\n        </NavbarGroup>\n      </Navbar>\n      <div className=\"yyx-container\">\n        {routes.map((route, i) => (\n          <Route\n            key={i}\n            path={route.path}\n            exact={route.path === \"/\"}\n            component={route.component}\n          />\n        ))}\n      </div>\n    </main>\n  );\n};\n\nconst LayoutImpl = withRouter(Render);\n\nexport const Main: SFC = props => {\n  return (\n    <Router>\n      <LayoutImpl {...props} />\n    </Router>\n  );\n};\n","import React, { SFC, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IYyxState } from \"../../store\";\nimport { ShardSelectors } from \"../../modules/shard\";\nimport { IHeroBookShard } from \"../../interfaces\";\nimport { Rarity } from \"../Common/Rarity\";\n\nconst Render: SFC<{\n  items: IHeroBookShard[] | null;\n}> = props => {\n  if (!props.items) {\n    return null;\n  }\n\n  return (\n    <>\n      <table className=\"bp3-html-table bp3-html-table-striped\">\n        <thead>\n          <tr>\n            <th>稀有度</th>\n            <th>式神</th>\n            <th>碎片</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.items.map(\n            i =>\n              i.hero_data && (\n                <tr key={i.hero_id}>\n                  <td>\n                    <Rarity rarity={i.hero_data.rarity} />\n                  </td>\n                  <td>{i.hero_data.name}</td>\n                  <td>\n                    {i.shards} / {i.book_max_shards}\n                  </td>\n                </tr>\n              )\n          )}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport const ShardPage = connect((state: IYyxState) => ({\n  items: ShardSelectors.selectSorted(state)\n}))(Render);\n","import React, { SFC, ChangeEvent, FormEventHandler, useState } from \"react\";\nimport \"./SnapshotSelectScreen.scss\";\nimport logo from \"../../assets/logo.svg\";\nimport { FileInput, Callout, Spinner } from \"@blueprintjs/core\";\nimport { YyxStore, IDispatch } from \"../../store\";\nimport { SnapshotActions } from \"../../modules/snapshot\";\nimport { connect } from \"react-redux\";\n\nconst SnapshotSelectScreenImpl: SFC<{\n  dispatch: IDispatch;\n}> = props => {\n  const [error, setError] = useState<Error | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleSelectFile: FormEventHandler<HTMLInputElement> = e => {\n    const { files } = e.target as any;\n    if (files.length) {\n      setError(null);\n      setLoading(true);\n      props\n        .dispatch(SnapshotActions.select(files[0]))\n        // .finally(() => setLoading(false))\n        .catch(err => {\n          setLoading(false);\n          setError(err);\n        });\n    }\n  };\n\n  return (\n    <div className=\"snapshot-select-screen\">\n      <div className=\"bp3-non-ideal-state\">\n        <div className=\"bp3-non-ideal-state-visual\">\n          <img src={logo} className=\"logo\" />\n        </div>\n        <h4 className=\"bp3-heading\">痒痒熊</h4>\n        <div className=\"bp3-text-small bp3-text-muted\">\n          痒痒鼠超厉害的的小伙伴。\n        </div>\n        {error && (\n          <Callout title=\"打开快照失败\" intent=\"danger\">\n            {error.message}\n          </Callout>\n        )}\n        {loading ? (\n          <Spinner />\n        ) : (\n          <FileInput\n            text=\"选择快照文件\"\n            onInputChange={handleSelectFile}\n            large\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const SnapshotSelectScreen = connect()(SnapshotSelectScreenImpl);\n","import React, { SFC, useEffect } from \"react\";\nimport \"./App.scss\";\nimport { connect } from \"react-redux\";\n\nimport { IYyxState } from \"../store\";\n\nimport { Main } from \"./Main/Main\";\nimport { SnapshotSelectScreen } from \"./Snapshot/SnapshotSelectScreen\";\n\nimport { SnapshotActions } from \"../modules/snapshot\";\nimport { ISnapshot } from \"../interfaces\";\nimport { Spinner } from \"@blueprintjs/core\";\n\nconst AppRender: SFC<{\n  snapshot: ISnapshot | null;\n  notSelected: boolean;\n  load: () => void;\n}> = props => {\n  useEffect(() => {\n    props.load();\n  }, []);\n\n  let main;\n\n  if (props.snapshot) {\n    main = <Main />;\n  } else {\n    if (props.notSelected) {\n      main = <SnapshotSelectScreen />;\n    } else {\n      main = <Spinner />;\n    }\n  }\n\n  return <>{main}</>;\n};\n\nconst App = connect(\n  (state: IYyxState) => {\n    return {\n      snapshot: state.snapshot.current,\n      notSelected: state.snapshot.currentNotSelected\n    };\n  },\n  dispatch => {\n    return {\n      load: () => dispatch(SnapshotActions.loadCurrent() as any)\n    };\n  }\n)(AppRender);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles/yyx.scss\";\n\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { YyxStore } from \"./store\";\n\nconst container = document.getElementById(\"root\") as HTMLElement;\n\nReactDOM.render(\n  <Provider store={YyxStore}>\n    <App />\n  </Provider>,\n  container\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.e6addb46.svg\";"],"sourceRoot":""}